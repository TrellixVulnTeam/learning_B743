(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    429385,       8553]
NotebookOptionsPosition[    416694,       8372]
NotebookOutlinePosition[    417520,       8399]
CellTagsIndexPosition[    417431,       8394]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"2", "+", "2"}], "\[IndentingNewLine]", 
 RowBox[{"2", "^", "33"}], "\[IndentingNewLine]", 
 RowBox[{"1", "+", "2", "-", 
  RowBox[{"3", "*", 
   RowBox[{"4", "/", 
    RowBox[{"5", "^", "6"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"1", "/", "0"}], "\[IndentingNewLine]", 
 RowBox[{"Plus", "[", 
  RowBox[{"1", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Subtract", "[", 
  RowBox[{"1", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Times", "[", 
  RowBox[{"2", ",", "3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Divide", "[", 
  RowBox[{"1", ",", "2"}], 
  "]"}], "\[IndentingNewLine]", "2.33*^2", "\[IndentingNewLine]", 
 RowBox[{"{", "Pi", "}"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Pi", ",", "100"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"10.0", "^", "x"}]}], ")"}], "-", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "20"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"3", "+", 
    RowBox[{"4", "I"}]}], ")"}], "*", 
  RowBox[{"(", 
   RowBox[{"3", "-", 
    RowBox[{"4", "I"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Round", "[", "2.5", "]"}], ",", 
   RowBox[{"Round", "[", "3.5", "]"}], ",", 
   RowBox[{"Ceiling", "[", "2.5", "]"}], ",", 
   RowBox[{"Floor", "[", "2.5", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.7501554998443804`*^9, 3.7501555005383887`*^9}, {
  3.7502361865373354`*^9, 3.7502361868343363`*^9}, {3.750236217950572*^9, 
  3.7502362645642614`*^9}, {3.7502363241116476`*^9, 3.750236324361755*^9}, {
  3.750374132806835*^9, 3.7503741379937816`*^9}, {3.7503742030815225`*^9, 
  3.7503742088882494`*^9}, {3.750374285505556*^9, 3.7503743525786924`*^9}, {
  3.7503752425227504`*^9, 3.7503752428833013`*^9}, {3.750375294038673*^9, 
  3.750375307535061*^9}, {3.750375409661823*^9, 3.7503754527281866`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9affd0e4-6101-49fb-8dc8-efac143aa6c9"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387017940607*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"6a512a63-42b7-4cdf-8bbb-861b59e578c3"],

Cell[BoxData["8589934592"], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387017956227*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"caa07936-f5d6-4b5f-9625-6f27bb6f0590"],

Cell[BoxData[
 FractionBox["46863", "15625"]], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387017956227*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"e41a7e18-b19b-4448-a2a4-0ba3b6abac9c"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,4,1,22817622750006384427,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7502454252642603`*^9, 3.750369548380723*^9, 3.750374138780571*^9, 
   3.750374209389041*^9, {3.750374290660269*^9, 3.750374353312359*^9}, 
   3.750375243706159*^9, 3.7503753086127634`*^9, {3.750375430922276*^9, 
   3.7503754531436167`*^9}, 3.7503837186189804`*^9, 3.750387017971854*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e6febf44-dd63-42bd-9c88-beb8da059415"],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387018004136*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"a98b1ee6-47d8-455c-821f-5d66379a44d2"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387018004136*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"4ae9143a-05f7-4e72-8073-9c01826bf288"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387018004136*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"d0e0e111-f473-4c5f-8066-fac88bc4ee00"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387018019758*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"1375d584-d981-456f-9414-ec0d77ce2769"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387018019758*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"b6a77a95-a876-484e-b7e6-b5a74e49e137"],

Cell[BoxData["233.`"], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387018019758*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"935f5bdf-c254-49b0-be85-1b1030bb2e57"],

Cell[BoxData[
 RowBox[{"{", "\[Pi]", "}"}]], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387018035384*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"e81600e4-4ecd-4b9c-bd31-21f7890b3937"],

Cell[BoxData["3.\
141592653589793238462643383279502884197169399375105820974944592307816406286208\
9986280348253421170679821480865191976`100."], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387018035384*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"5818fed6-8cd2-44e6-ac82-4ebe9f3a75d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.000000082740371`*^-10", ",", "1.000000082740371`*^-11", ",", 
   "1.000088900582341`*^-12", ",", "9.992007221626409`*^-14", ",", 
   "9.992007221626409`*^-15", ",", "1.1102230246251565`*^-15", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387018035384*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"dade4002-d730-4582-b00f-7c4dda89866c"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387018035384*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"867b05db-140c-45f2-b52e-eb2c7d970cbd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502454251704865`*^9, 3.7503695483650913`*^9, 3.7503741387276225`*^9, 
   3.7503742093356276`*^9, {3.7503742905912714`*^9, 3.75037435326551*^9}, 
   3.7503752436905375`*^9, 3.750375308597143*^9, {3.750375430906652*^9, 
   3.7503754531279716`*^9}, 3.750383718603303*^9, 3.750387018051009*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"b9356bc6-cd71-439c-8713-1b32ef37b5b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Range"}]], "Input",
 CellChangeTimes->{{3.7502376307564096`*^9, 3.750237633462344*^9}, {
  3.7502377421291904`*^9, 3.7502377436952286`*^9}, {3.750248280451535*^9, 
  3.7502482836105566`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"903b7591-40af-4eeb-a3c3-6cd202ef4a20"],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) generates the list \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"]\\\"}]\\) generates the list \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"Range\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses step \\!\\(\\*StyleBox[\\\"di\\\", \
\\\"TI\\\"]\\).\"\>", "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Range"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.7503870185054555`*^9},
 CellTags->
  "Info153750415818-4944919",ExpressionUUID->"04a776ce-c78e-49ea-a1d2-\
d663aaf2e002"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Range", "[", "10", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Range", "[", 
  RowBox[{"10", ",", "6", ",", 
   RowBox[{"-", "2"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{"5", ",", "10"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "10", ",", "5", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"FromDigits", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "6", ",", "7"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "*", "y"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "x"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7502363779598317`*^9, 3.7502363837469177`*^9}, {
  3.7502380713333178`*^9, 3.750238071552043*^9}, {3.7502390301097555`*^9, 
  3.750239054788419*^9}, {3.7502453249107904`*^9, 3.750245404695013*^9}, {
  3.750245458980736*^9, 3.7502455375990334`*^9}, {3.750248346565587*^9, 
  3.750248347247547*^9}, {3.7503703058767967`*^9, 3.7503703277754507`*^9}, {
  3.750389570355912*^9, 
  3.75038957143722*^9}},ExpressionUUID->"1724b1e5-272f-479a-a96b-\
17bba5258a03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.750245434646675*^9, {3.7502454817070932`*^9, 3.7502455379427395`*^9}, 
   3.7503695489771767`*^9, 3.75037032825878*^9, 3.750383718947054*^9, 
   3.750387018614779*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"cd8e7ccc-05a0-4f81-b67b-67382dfbde48"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "8", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{
  3.750245434646675*^9, {3.7502454817070932`*^9, 3.7502455379427395`*^9}, 
   3.7503695489771767`*^9, 3.75037032825878*^9, 3.750383718947054*^9, 
   3.750387018614779*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"1fb82b35-aa26-4d73-8aad-bbce221bd4fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.750245434646675*^9, {3.7502454817070932`*^9, 3.7502455379427395`*^9}, 
   3.7503695489771767`*^9, 3.75037032825878*^9, 3.750383718947054*^9, 
   3.750387018614779*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"4c7b5ede-8214-4b0e-a283-f85954e37354"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", 
   ",", "5", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.750245434646675*^9, {3.7502454817070932`*^9, 3.7502455379427395`*^9}, 
   3.7503695489771767`*^9, 3.75037032825878*^9, 3.750383718947054*^9, 
   3.750387018614779*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"8bf3609e-ebf2-4a54-9b92-8e2907ff613d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", "81", ",", "64", ",", "49", ",", "36", ",", "25"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.750245434646675*^9, {3.7502454817070932`*^9, 3.7502455379427395`*^9}, 
   3.7503695489771767`*^9, 3.75037032825878*^9, 3.750383718947054*^9, 
   3.7503870186304083`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"7382e4bc-db9a-4f2e-9104-cc58603dcca1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"16", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "37"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.750245434646675*^9, {3.7502454817070932`*^9, 3.7502455379427395`*^9}, 
   3.7503695489771767`*^9, 3.75037032825878*^9, 3.750383718947054*^9, 
   3.7503870186304083`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"8acafcc8-2b25-453a-b12c-038ab6be85d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "8", ",", "12", ",", "16"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.750245434646675*^9, {3.7502454817070932`*^9, 3.7502455379427395`*^9}, 
   3.7503695489771767`*^9, 3.75037032825878*^9, 3.750383718947054*^9, 
   3.7503870186304083`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"440a0141-8a25-4440-9097-1abf3c305340"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "+", 
  "233"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "3"}], "}"}], "*", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "3"}], "}"}], "^", "2"}]}], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"b97c5240-c0b4-46ef-bec0-2660831eac05"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"234", ",", "235", ",", "236"}], "}"}]], "Output",
 CellChangeTimes->{3.7502454374559593`*^9, 3.750369549039673*^9, 
  3.750383719040803*^9, 3.7503870188335285`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"c3225e46-b235-4193-b034-c746476e6496"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "9", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.7502454374559593`*^9, 3.750369549039673*^9, 
  3.750383719040803*^9, 3.7503870188491526`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"4fcbbc8a-6d3f-4883-8764-4a836fafc52c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "9", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.7502454374559593`*^9, 3.750369549039673*^9, 
  3.750383719040803*^9, 3.7503870188491526`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"ae7f5836-0667-412d-bd47-2f0cda352e2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"z1", "=", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", "[", "z1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Part", "[", 
  RowBox[{"z1", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Last", "[", "z1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"z1", "[", 
  RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"z1", "[", 
  RowBox[{"[", 
   RowBox[{"-", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"z1", "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "2"}], ",", "3", ",", "3"}], "}"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"z1", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "3"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"z1", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"z1", ",", 
   RowBox[{"-", "2"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Drop", "[", 
  RowBox[{"z1", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Most", "[", "z1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Rest", "[", "z1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ReplacePart", "[", 
  RowBox[{"z1", ",", 
   RowBox[{"3", "\[Rule]", "Nothing"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ReplacePart", "[", 
  RowBox[{"z1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "3"}], ",", 
     RowBox[{"4", "\[Rule]", "233"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7502389157904634`*^9, 3.7502390117145987`*^9}, {
  3.7503896200091143`*^9, 3.750389688478722*^9}, {3.7503897260862226`*^9, 
  3.750389726495356*^9}, {3.750391054541314*^9, 3.7503911538110847`*^9}, {
  3.7503911842349854`*^9, 3.750391185766114*^9}, {3.750391268246712*^9, 
  3.750391280272977*^9}, {3.750391311216316*^9, 3.7503913604295444`*^9}, {
  3.750391422491311*^9, 3.750391423525278*^9}, {3.7503916990981317`*^9, 
  3.7503917219791803`*^9}, {3.75039178157507*^9, 3.750391807892518*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"2acffa5d-43bc-4dcb-a698-10ccbe779340"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.7503918082396183`*^9}},
 CellLabel->
  "Out[294]=",ExpressionUUID->"1ce9d2dd-4d99-4b9b-bc8b-006909cf7039"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.7503918082396183`*^9}},
 CellLabel->
  "Out[295]=",ExpressionUUID->"743343c3-91c8-44a0-b31b-3123116e1625"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.7503918082396183`*^9}},
 CellLabel->
  "Out[296]=",ExpressionUUID->"894645db-7310-4e07-ac79-14237f9fe7b3"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.7503918082550497`*^9}},
 CellLabel->
  "Out[297]=",ExpressionUUID->"8b9c33a9-0efb-4779-9cb5-b282a05152d4"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.7503918082550497`*^9}},
 CellLabel->
  "Out[298]=",ExpressionUUID->"5fe4ccb8-8d52-4009-a29f-e3c51f55de24"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.7503918082550497`*^9}},
 CellLabel->
  "Out[299]=",ExpressionUUID->"e60fe21c-e41a-4239-80ad-60932b818428"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3", ",", "4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.7503918082550497`*^9}},
 CellLabel->
  "Out[300]=",ExpressionUUID->"dd8c6878-fd8d-4a4e-9201-1f4f270559a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.750391808270667*^9}},
 CellLabel->
  "Out[301]=",ExpressionUUID->"06cf9cc1-771d-4f0b-b8aa-9d8689b03ff9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.750391808270667*^9}},
 CellLabel->
  "Out[302]=",ExpressionUUID->"8bb8564a-18a0-423d-a4d0-c6366c23db7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.750391808270667*^9}},
 CellLabel->
  "Out[303]=",ExpressionUUID->"1e2df9f1-e589-42f0-b95d-a5890e51a044"],

Cell[BoxData[
 RowBox[{"{", "4", "}"}]], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.75039180828629*^9}},
 CellLabel->
  "Out[304]=",ExpressionUUID->"08726896-5bbe-4ce4-8a9f-d61c640a605b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.75039180828629*^9}},
 CellLabel->
  "Out[305]=",ExpressionUUID->"0a7f41ae-1ced-478c-916e-17c6c9b8e251"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.75039180828629*^9}},
 CellLabel->
  "Out[306]=",ExpressionUUID->"83ae094a-13b4-42c3-b3cc-e7010f4d26a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.750391808301917*^9}},
 CellLabel->
  "Out[307]=",ExpressionUUID->"7db29c19-78ea-4171-bca3-52e5cf1538cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502454394426203`*^9, 3.7503695490709257`*^9, 3.750383719087679*^9, 
   3.7503870189585295`*^9, {3.7503896514628696`*^9, 3.750389688978714*^9}, 
   3.7503897269652367`*^9, {3.750391073700735*^9, 3.750391083611973*^9}, 
   3.7503911139303293`*^9, 3.750391154701741*^9, 3.750391186234786*^9, 
   3.750391280741724*^9, 3.7503913184494324`*^9, 3.750391350042475*^9, 
   3.7503914252283707`*^9, 3.7503917224340787`*^9, {3.750391796118929*^9, 
   3.750391808301917*^9}},
 CellLabel->
  "Out[308]=",ExpressionUUID->"c79d03f3-f2a4-4223-9dab-674da3ccd12f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y", ",", "z", ",", "hf1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"List", "[", 
   RowBox[{"x", ",", "y", ",", "z"}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hf1", "[", 
   RowBox[{"x", ",", "y", ",", "z"}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", 
  RowBox[{"hf1", "[", 
   RowBox[{"x", ",", "y", ",", "z"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7503960977310715`*^9, 3.7503961219809127`*^9}, {
  3.7503961799596033`*^9, 3.7503961854145484`*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"fdf8d9df-baf1-4b9a-b832-59f1480cb3cc"],

Cell[BoxData["y"], "Output",
 CellChangeTimes->{3.7503961240430746`*^9, 3.7503961870483527`*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"ca3a24f1-e019-406a-aeb9-c3d72eb4f695"],

Cell[BoxData["y"], "Output",
 CellChangeTimes->{3.7503961240430746`*^9, 3.7503961870483527`*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"f59a4c4d-9484-4a69-b867-3ca8e960ae43"],

Cell[BoxData["hf1"], "Output",
 CellChangeTimes->{3.7503961240430746`*^9, 3.750396187064005*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"866ac2a1-4e9a-45bc-982d-dd1d405bff71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"z1", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Range", "[", "12", "]"}], ",", "3"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"z1", "[", 
  RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"z1", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"z1", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"Characters", "[", "\"\<hello world\>\"", "]"}], ",", 
   "\"\<o\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7503912008146267`*^9, 3.7503912370378637`*^9}, {
  3.7503914550656796`*^9, 3.7503915348183823`*^9}, {3.7503916125538006`*^9, 
  3.750391657907725*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"5840cdd6-5ae8-4cf4-9886-4e3d8cd577f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.750391223652028*^9, 3.7503912374392157`*^9}, {
   3.7503914784020658`*^9, 3.750391535146491*^9}, 3.750391619020926*^9, 
   3.7503916585829935`*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"26452ca5-0343-440c-bb2e-37c4d6c9a703"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.750391223652028*^9, 3.7503912374392157`*^9}, {
   3.7503914784020658`*^9, 3.750391535146491*^9}, 3.750391619020926*^9, 
   3.75039165859858*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"2bb99fea-aab4-4bb0-8c45-4d494fa31b85"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.750391223652028*^9, 3.7503912374392157`*^9}, {
   3.7503914784020658`*^9, 3.750391535146491*^9}, 3.750391619020926*^9, 
   3.75039165859858*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"7551726a-1634-4da5-af9f-758ae9a2aa14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "7", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{{3.750391223652028*^9, 3.7503912374392157`*^9}, {
   3.7503914784020658`*^9, 3.750391535146491*^9}, 3.750391619020926*^9, 
   3.75039165859858*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"4c5ff78c-8e19-48eb-bcb4-5d8e9241e3ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "8", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.750391223652028*^9, 3.7503912374392157`*^9}, {
   3.7503914784020658`*^9, 3.750391535146491*^9}, 3.750391619020926*^9, 
   3.75039165861421*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"6d06b279-14de-4a64-a079-6a295a798137"]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{
  3.7503899476957006`*^9},ExpressionUUID->"7e21e39e-3c7d-46d4-96e2-\
7dbdb01f5310"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", "<", "3"}], ",", 
   RowBox[{"2", "\[Equal]", "3"}], ",", 
   RowBox[{"2", ">", "3"}], ",", 
   RowBox[{"2", "\[NotEqual]", "3"}], ",", 
   RowBox[{"2", "\[LessEqual]", "3"}], ",", 
   RowBox[{"2", "\[GreaterEqual]", "3"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"EvenQ", "[", "2", "]"}], ",", 
   RowBox[{"OddQ", "[", "2", "]"}], ",", 
   RowBox[{"PrimeQ", "[", "2", "]"}], ",", 
   RowBox[{"LetterQ", "[", "\"\<1\>\"", "]"}], ",", 
   RowBox[{"NumberQ", "[", "233", "]"}], ",", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", "2"}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"True", "||", "False"}], ",", 
   RowBox[{"True", "&&", "False"}], ",", 
   RowBox[{"!", "True"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Or", "[", 
    RowBox[{"True", ",", "False"}], "]"}], ",", 
   RowBox[{"And", "[", 
    RowBox[{"True", ",", "False"}], "]"}], ",", 
   RowBox[{"Not", "[", "True", "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"2", "\[Equal]", "3"}], ",", "\"\<helo\>\"", ",", 
   "\"\<world\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Range", "[", "20", "]"}], ",", "PrimeQ"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Range", "[", "20", "]"}], ",", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"PrimeQ", "[", "#", "]"}]}], "&"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"WordList", "[", "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"StringReverse", "[", "#", "]"}], "\[Equal]", "#"}], ")"}], 
    "&"}]}], "]"}]}], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"582e89c6-0e57-4595-84e3-25e79c2e126c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "False", ",", "False", ",", "True", ",", "True", ",", 
   "False"}], "}"}]], "Output",
 CellChangeTimes->{3.750383719159152*^9, 3.7503870190210333`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"0c4807b5-8b4e-4937-817a-cf3815a8a981"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "False", ",", "True", ",", "False", ",", "True", ",", "True"}],
   "}"}]], "Output",
 CellChangeTimes->{3.750383719159152*^9, 3.7503870190366535`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"ae9b5c2d-c0a5-42ce-8cb9-319313c6be41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.750383719159152*^9, 3.7503870190366535`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"ebfb614e-4c09-4b80-9502-9524d390582d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.750383719159152*^9, 3.7503870190366535`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"cbe71190-6340-4175-ac05-7c658a5c19b3"],

Cell[BoxData["\<\"world\"\>"], "Output",
 CellChangeTimes->{3.750383719159152*^9, 3.750387019052292*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"b4abb816-b622-419d-8162-741b6fa10312"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
   "19"}], "}"}]], "Output",
 CellChangeTimes->{3.750383719159152*^9, 3.750387019052292*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"ea08cbb0-5f02-4a4d-9f74-8fc7d7a530ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "6", ",", "8", ",", "9", ",", "10", ",", "12", ",", 
   "14", ",", "15", ",", "16", ",", "18", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.750383719159152*^9, 3.750387019052292*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"38fd10cf-bf8e-4a2c-98e0-edbac0eed02d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"aha\"\>", ",", "\<\"bib\"\>", 
   ",", "\<\"bob\"\>", ",", "\<\"boob\"\>", ",", "\<\"civic\"\>", 
   ",", "\<\"dad\"\>", ",", "\<\"deed\"\>", ",", "\<\"dud\"\>", 
   ",", "\<\"ere\"\>", ",", "\<\"eve\"\>", ",", "\<\"ewe\"\>", 
   ",", "\<\"eye\"\>", ",", "\<\"gag\"\>", ",", "\<\"gig\"\>", 
   ",", "\<\"huh\"\>", ",", "\<\"kayak\"\>", ",", "\<\"kook\"\>", 
   ",", "\<\"level\"\>", ",", "\<\"ma'am\"\>", ",", "\<\"madam\"\>", 
   ",", "\<\"minim\"\>", ",", "\<\"mom\"\>", ",", "\<\"mum\"\>", 
   ",", "\<\"nan\"\>", ",", "\<\"non\"\>", ",", "\<\"noon\"\>", 
   ",", "\<\"nun\"\>", ",", "\<\"oho\"\>", ",", "\<\"pap\"\>", 
   ",", "\<\"peep\"\>", ",", "\<\"pep\"\>", ",", "\<\"pip\"\>", 
   ",", "\<\"poop\"\>", ",", "\<\"pop\"\>", ",", "\<\"pup\"\>", 
   ",", "\<\"radar\"\>", ",", "\<\"refer\"\>", ",", "\<\"rotor\"\>", 
   ",", "\<\"sis\"\>", ",", "\<\"tat\"\>", ",", "\<\"tenet\"\>", 
   ",", "\<\"toot\"\>", ",", "\<\"tot\"\>", ",", "\<\"tut\"\>", 
   ",", "\<\"wow\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.750383719159152*^9, 3.7503870224059896`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"ddc7810a-c368-46ab-a37e-422a69855e0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "3"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "7", ",", "3"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "7", ",", "3"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sort", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "2", ",", "1", ",", "3", ",", "4"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Reverse", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "10"}], "]"}], ",", 
   RowBox[{"Range", "[", 
    RowBox[{"10", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "a", ",", "a", ",", "c", ",", "b", ",", "a"}],
     "}"}], ",", "a"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7502380144082828`*^9, 3.750238065064152*^9}, {
  3.75023854256785*^9, 3.750238545905965*^9}, {3.750238885554469*^9, 
  3.7502388968082695`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"26093daf-9855-4efb-8529-7b59832f2e16"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.7502454425330524`*^9, 3.7503695491347303`*^9, 
  3.7503837192528996`*^9, 3.750387022550996*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"20bde1ac-1e27-40c6-bc1a-53515be4394b"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.7502454425330524`*^9, 3.7503695491347303`*^9, 
  3.7503837192528996`*^9, 3.750387022557003*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"97f9bb7c-d1e2-4bea-9ddd-cd98bf4d4c8b"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7502454425330524`*^9, 3.7503695491347303`*^9, 
  3.7503837192528996`*^9, 3.750387022560995*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"8db46570-f7ce-49f8-9937-1ac1c61e7e19"],

Cell[BoxData[
 RowBox[{"a", "+", "b", "+", "c"}]], "Output",
 CellChangeTimes->{3.7502454425330524`*^9, 3.7503695491347303`*^9, 
  3.7503837192528996`*^9, 3.750387022564993*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"f4092559-5835-4bf8-ab55-900265251181"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.7502454425330524`*^9, 3.7503695491347303`*^9, 
  3.7503837192528996`*^9, 3.7503870225709906`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"236bb06d-ba71-4722-8ea1-634b8fb5a054"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", 
   ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.7502454425330524`*^9, 3.7503695491347303`*^9, 
  3.7503837192528996`*^9, 3.750387022575994*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"1dcff119-3d7a-4140-9666-134e31fa002a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
   ",", "8", ",", "9", ",", "10", ",", "10", ",", "9", ",", "8", ",", "7", 
   ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7502454425330524`*^9, 3.7503695491347303`*^9, 
  3.7503837192528996`*^9, 3.750387022582996*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"60339f43-0ba3-4510-a558-a3d2c6f6dcbc"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.7502454425330524`*^9, 3.7503695491347303`*^9, 
  3.7503837192528996`*^9, 3.750387022588996*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"d2dfad2e-ca9a-4d6a-bbe2-eb9f63e21802"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"IntegerDigits", "[", "233", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FromDigits", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "3"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7502389992080708`*^9, 3.7502390022641187`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"4d4e3d4f-f9a8-4b0c-b10f-ae7b3f26cd76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.7502457365889225`*^9, 3.7503695491816*^9, 
  3.750383719315425*^9, 3.7503870226389914`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"ad6d352f-46c6-4416-8a25-c1825bdcc99d"],

Cell[BoxData["233"], "Output",
 CellChangeTimes->{3.7502457365889225`*^9, 3.7503695491816*^9, 
  3.750383719315425*^9, 3.7503870226449957`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"080b089e-cd28-4d9c-96c7-d90349dde557"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RandomInteger", "[", "100", "]"}], "\[IndentingNewLine]", 
 RowBox[{"RandomInteger", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", "20"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7502451139590635`*^9, 3.750245146299138*^9}, {
  3.7502451774775686`*^9, 3.7502451801958003`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"be0041f8-1b71-401c-828a-8c111e9a9857"],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{3.7502457381357956`*^9, 3.7503695492128444`*^9, 
  3.7503837193479156`*^9, 3.750387022677992*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"4db1d5e6-df29-4b19-a966-2271145afecf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "4", ",", "5", ",", "3", ",", "5", ",", "5", ",", "5", ",", "4", 
   ",", "3", ",", "5", ",", "5", ",", "4", ",", "4", ",", "4", ",", "5", ",", 
   "5", ",", "3", ",", "3", ",", "3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.7502457381357956`*^9, 3.7503695492128444`*^9, 
  3.7503837193479156`*^9, 3.7503870226860003`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"4910ef5b-79c6-49d6-98f3-1602a329cece"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   RowBox[{"x", "^", "25"}], "-", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7501555824244075`*^9, 3.7501556114282513`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"7b4379d2-66a5-486d-885c-f516aa178557"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "x", "+", 
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["x", "3"], "+", 
    SuperscriptBox["x", "4"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "5"], "+", 
    SuperscriptBox["x", "10"], "+", 
    SuperscriptBox["x", "15"], "+", 
    SuperscriptBox["x", "20"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7502457410808496`*^9, 3.7503695492344203`*^9, 
  3.7503837193948154`*^9, 3.7503870227219963`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"fa4f30d9-de2e-447a-8549-ce8020ecb2eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "-", "1"}], ")"}]}], ",", " ", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7501556482398777`*^9, 3.7501556537230234`*^9}, {
  3.7501558000358877`*^9, 3.7501558169193587`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"dfd05659-f3ac-4279-aecb-59314fbc0926"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"ArcTan", "[", 
     FractionBox[
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "x"}]}], 
      SqrtBox["3"]], "]"}], 
    SqrtBox["3"]]}], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", "x", "+", 
     SuperscriptBox["x", "2"]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.750245743383603*^9, 3.750369549390683*^9, 
  3.7503837209601407`*^9, 3.750387022833991*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"decf7a50-a0c5-4a97-a5d3-e4da7cf84f07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
  "Red", ",", "Green", ",", "Blue", ",", "Purple", ",", "Orange", ",", 
   "Black"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"ColorNegate", "[", "Blue", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Blend", "[", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"RGBColor", "[", 
    RowBox[{"x", ",", "x", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Hue", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", "1000", "]"}], ",", 
     RowBox[{"RandomColor", "[", "]"}]}], "]"}], ",", "10"}], "]"}]}], "Input",
 CellChangeTimes->{{3.750245745682831*^9, 3.750245776072326*^9}, {
   3.750245827254448*^9, 3.7502459561416173`*^9}, {3.7502459876473603`*^9, 
   3.750245987725436*^9}, {3.750246024745055*^9, 3.750246035439336*^9}, {
   3.750246070799512*^9, 3.750246157591076*^9}, 3.7502462503674*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"71f701e5-d699-4b6e-a6ad-22764c756ba7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 0, 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502458783357544`*^9, {3.7502459221188726`*^9, 3.7502459455959835`*^9}, 
   3.750245992479002*^9, 3.750246036236122*^9, {3.7502461443179607`*^9, 
   3.750246150307822*^9}, 3.750369549578181*^9, 3.7503837211788836`*^9, 
   3.7503870229699926`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"7cd45a5f-ce86-4bd2-9fff-641fca1748f8"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0.6666666666666667, 0.6666666666666667, 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"1.`", ",", "1.`", ",", "0.`"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 0.]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1., 1., 0.],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7502458783357544`*^9, {3.7502459221188726`*^9, 3.7502459455959835`*^9}, 
   3.750245992479002*^9, 3.750246036236122*^9, {3.7502461443179607`*^9, 
   3.750246150307822*^9}, 3.750369549578181*^9, 3.7503837211788836`*^9, 
   3.750387022991991*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"c5c29a1c-3353-4476-b35d-9565f5985ddf"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[
        Rational[1, 2], 
        Rational[1, 2], 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0.3333333333333333, 0.3333333333333333, 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{
         FractionBox["1", "2"], ",", 
         FractionBox["1", "2"], ",", "0"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
         Rational[1, 2], 
         Rational[1, 2], 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[
   Rational[1, 2], 
   Rational[1, 2], 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7502458783357544`*^9, {3.7502459221188726`*^9, 3.7502459455959835`*^9}, 
   3.750245992479002*^9, 3.750246036236122*^9, {3.7502461443179607`*^9, 
   3.750246150307822*^9}, 3.750369549578181*^9, 3.7503837211788836`*^9, 
   3.7503870229989915`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"bf37c09a-b378-4d08-9b97-49562d1902b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0., 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.`", ",", "0.`", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0., 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.05, 0.05, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.03333333333333334, 0.03333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.05`", ",", "0.05`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.05, 0.05, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.05, 0.05, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.1, 0.1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.06666666666666668, 0.06666666666666668, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.1`", ",", "0.1`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.1, 0.1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.1, 0.1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.15000000000000002`, 0.15000000000000002`, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.10000000000000002`, 0.10000000000000002`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.15000000000000002`", ",", "0.15000000000000002`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.15000000000000002`, 0.15000000000000002`, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.15000000000000002`, 0.15000000000000002`, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.2, 0.2, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.13333333333333336`, 0.13333333333333336`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.2`", ",", "0.2`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.2, 0.2, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2, 0.2, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.25, 0.25, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.16666666666666669`, 0.16666666666666669`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.25`", ",", "0.25`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.25, 0.25, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.25, 0.25, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.30000000000000004`, 0.30000000000000004`, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.20000000000000004`, 0.20000000000000004`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.30000000000000004`", ",", "0.30000000000000004`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.30000000000000004`, 0.30000000000000004`, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.30000000000000004`, 0.30000000000000004`, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.35000000000000003`, 0.35000000000000003`, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.23333333333333336`, 0.23333333333333336`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.35000000000000003`", ",", "0.35000000000000003`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.35000000000000003`, 0.35000000000000003`, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.35000000000000003`, 0.35000000000000003`, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4, 0.4, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.2666666666666667, 0.2666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.4`", ",", "0.4`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 0.4, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4, 0.4, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.45, 0.45, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.30000000000000004`, 0.30000000000000004`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.45`", ",", "0.45`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.45, 0.45, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.45, 0.45, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.33333333333333337`, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.5`", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.55, 0.55, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.3666666666666667, 0.3666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.55`", ",", "0.55`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.55, 0.55, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.55, 0.55, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6000000000000001, 0.6000000000000001, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.4000000000000001, 0.4000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6000000000000001`", ",", "0.6000000000000001`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.6000000000000001, 0.6000000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6000000000000001, 0.6000000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.65, 0.65, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.43333333333333335`, 0.43333333333333335`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.65`", ",", "0.65`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.65, 0.65, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.65, 0.65, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7000000000000001, 0.7000000000000001, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.46666666666666673`, 0.46666666666666673`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7000000000000001`", ",", "0.7000000000000001`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7000000000000001, 0.7000000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7000000000000001, 0.7000000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.75, 0.75, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.5, 0.5, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.75`", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.75, 0.75, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.75, 0.75, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8, 0.8, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.5333333333333334, 0.5333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.8`", ",", "0.8`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.8, 0.8, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8, 0.8, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8500000000000001, 0.8500000000000001, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.5666666666666668, 0.5666666666666668, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.8500000000000001`", ",", "0.8500000000000001`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.8500000000000001, 0.8500000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8500000000000001, 0.8500000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9, 0.9, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6000000000000001, 0.6000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0.9`", ",", "0.9`", ",", "0"}], "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.9, 0.9, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9, 0.9, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9500000000000001, 0.9500000000000001, 0], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6333333333333334, 0.6333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9500000000000001`", ",", "0.9500000000000001`", ",", "0"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9500000000000001, 0.9500000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9500000000000001, 0.9500000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 1., 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.6666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1.`", ",", "1.`", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 1., 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502458783357544`*^9, {3.7502459221188726`*^9, 3.7502459455959835`*^9}, 
   3.750245992479002*^9, 3.750246036236122*^9, {3.7502461443179607`*^9, 
   3.750246150307822*^9}, 3.750369549578181*^9, 3.7503837211788836`*^9, 
   3.7503870230335627`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"576848b7-2a8e-43d3-ac6e-4973e626b2aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0., 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0., 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.05], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.05000000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.05`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.05],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.10000000000000002`, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.1`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.1, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.15000000000000002`], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.15, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.15000000000000002`", "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.15000000000000002`, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.15000000000000002`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.2], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.20000000000000004`, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.2`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.2, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.2],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.25], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.25, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.25`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.25, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.25],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.30000000000000004`], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.30000000000000004`, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.30000000000000004`", "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.30000000000000004`, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.30000000000000004`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.35000000000000003`], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.35000000000000003`, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.35000000000000003`", "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.35000000000000003`, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.35000000000000003`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.4000000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.4`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.4, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.45], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.45, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.45`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.45, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.45],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.5, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.5`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.5, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.55], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.55, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.55`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.55, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.55],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.6000000000000001], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.6000000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.6000000000000001`", "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.6000000000000001, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.6000000000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.65], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.65, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.65`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.65, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.65],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.7000000000000001], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.7000000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.7000000000000001`", "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.7000000000000001, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.7000000000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.75], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.75, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.75`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.75, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.75],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.8], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.8000000000000002, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.8`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.8, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.8],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.8500000000000001], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.8500000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.8500000000000001`", "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.8500000000000001, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.8500000000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.9], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.9, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.9`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.9, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.9],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.9500000000000001], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0.9500000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "0.9500000000000001`", "]"}], NumberMarks -> 
       False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.9500000000000001, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.9500000000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[1.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->Hue[0., 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"Hue", "[", "1.`", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[1., 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[1.],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7502458783357544`*^9, {3.7502459221188726`*^9, 3.7502459455959835`*^9}, 
   3.750245992479002*^9, 3.750246036236122*^9, {3.7502461443179607`*^9, 
   3.750246150307822*^9}, 3.750369549578181*^9, 3.7503837211788836`*^9, 
   3.750387023116643*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"fcae04b0-c0ae-4c83-a5e3-f216a06075f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["286",
    StripOnInput->False,
    LineColor->RGBColor[
     0.26360857298641394`, 0.011962185551744442`, 0.003939207830853997],
    FrontFaceColor->RGBColor[
     0.26360857298641394`, 0.011962185551744442`, 0.003939207830853997],
    BackFaceColor->RGBColor[
     0.26360857298641394`, 0.011962185551744442`, 0.003939207830853997],
    GraphicsColor->RGBColor[
     0.26360857298641394`, 0.011962185551744442`, 0.003939207830853997],
    FontColor->RGBColor[
     0.26360857298641394`, 0.011962185551744442`, 0.003939207830853997]], ",", 
   StyleBox["77",
    StripOnInput->False,
    LineColor->RGBColor[
     0.20729912892513003`, 0.5545885991883166, 0.49802007404206305`],
    FrontFaceColor->RGBColor[
     0.20729912892513003`, 0.5545885991883166, 0.49802007404206305`],
    BackFaceColor->RGBColor[
     0.20729912892513003`, 0.5545885991883166, 0.49802007404206305`],
    GraphicsColor->RGBColor[
     0.20729912892513003`, 0.5545885991883166, 0.49802007404206305`],
    FontColor->RGBColor[
     0.20729912892513003`, 0.5545885991883166, 0.49802007404206305`]], ",", 
   StyleBox["87",
    StripOnInput->False,
    LineColor->RGBColor[
     0.9943012323571656, 0.44828788939536546`, 0.2404170315719325],
    FrontFaceColor->RGBColor[
     0.9943012323571656, 0.44828788939536546`, 0.2404170315719325],
    BackFaceColor->RGBColor[
     0.9943012323571656, 0.44828788939536546`, 0.2404170315719325],
    GraphicsColor->RGBColor[
     0.9943012323571656, 0.44828788939536546`, 0.2404170315719325],
    FontColor->RGBColor[
     0.9943012323571656, 0.44828788939536546`, 0.2404170315719325]], ",", 
   StyleBox["381",
    StripOnInput->False,
    LineColor->RGBColor[
     0.4424682368407389, 0.8502904852833288, 0.2629217083211046],
    FrontFaceColor->RGBColor[
     0.4424682368407389, 0.8502904852833288, 0.2629217083211046],
    BackFaceColor->RGBColor[
     0.4424682368407389, 0.8502904852833288, 0.2629217083211046],
    GraphicsColor->RGBColor[
     0.4424682368407389, 0.8502904852833288, 0.2629217083211046],
    FontColor->RGBColor[
     0.4424682368407389, 0.8502904852833288, 0.2629217083211046]], ",", 
   StyleBox["684",
    StripOnInput->False,
    LineColor->RGBColor[
     0.37727718507196606`, 0.6810007862764598, 0.7904127288895053],
    FrontFaceColor->RGBColor[
     0.37727718507196606`, 0.6810007862764598, 0.7904127288895053],
    BackFaceColor->RGBColor[
     0.37727718507196606`, 0.6810007862764598, 0.7904127288895053],
    GraphicsColor->RGBColor[
     0.37727718507196606`, 0.6810007862764598, 0.7904127288895053],
    FontColor->RGBColor[
     0.37727718507196606`, 0.6810007862764598, 0.7904127288895053]], ",", 
   StyleBox["890",
    StripOnInput->False,
    LineColor->RGBColor[
     0.4933994949222278, 0.14515143851467394`, 0.35322681390796884`],
    FrontFaceColor->RGBColor[
     0.4933994949222278, 0.14515143851467394`, 0.35322681390796884`],
    BackFaceColor->RGBColor[
     0.4933994949222278, 0.14515143851467394`, 0.35322681390796884`],
    GraphicsColor->RGBColor[
     0.4933994949222278, 0.14515143851467394`, 0.35322681390796884`],
    FontColor->RGBColor[
     0.4933994949222278, 0.14515143851467394`, 0.35322681390796884`]], ",", 
   StyleBox["10",
    StripOnInput->False,
    LineColor->RGBColor[
     0.6040987233816693, 0.21689121664818067`, 0.9416569698645376],
    FrontFaceColor->RGBColor[
     0.6040987233816693, 0.21689121664818067`, 0.9416569698645376],
    BackFaceColor->RGBColor[
     0.6040987233816693, 0.21689121664818067`, 0.9416569698645376],
    GraphicsColor->RGBColor[
     0.6040987233816693, 0.21689121664818067`, 0.9416569698645376],
    FontColor->RGBColor[
     0.6040987233816693, 0.21689121664818067`, 0.9416569698645376]], ",", 
   StyleBox["579",
    StripOnInput->False,
    LineColor->RGBColor[
     0.03355429523469211, 0.02859738464442607, 0.745032383628454],
    FrontFaceColor->RGBColor[
     0.03355429523469211, 0.02859738464442607, 0.745032383628454],
    BackFaceColor->RGBColor[
     0.03355429523469211, 0.02859738464442607, 0.745032383628454],
    GraphicsColor->RGBColor[
     0.03355429523469211, 0.02859738464442607, 0.745032383628454],
    FontColor->RGBColor[
     0.03355429523469211, 0.02859738464442607, 0.745032383628454]], ",", 
   StyleBox["319",
    StripOnInput->False,
    LineColor->RGBColor[
     0.4921938699998951, 0.870311795684358, 0.8876568908092928],
    FrontFaceColor->RGBColor[
     0.4921938699998951, 0.870311795684358, 0.8876568908092928],
    BackFaceColor->RGBColor[
     0.4921938699998951, 0.870311795684358, 0.8876568908092928],
    GraphicsColor->RGBColor[
     0.4921938699998951, 0.870311795684358, 0.8876568908092928],
    FontColor->RGBColor[
     0.4921938699998951, 0.870311795684358, 0.8876568908092928]], ",", 
   StyleBox["500",
    StripOnInput->False,
    LineColor->RGBColor[
     0.8444404389476747, 0.10814311628696283`, 0.9941223316762025],
    FrontFaceColor->RGBColor[
     0.8444404389476747, 0.10814311628696283`, 0.9941223316762025],
    BackFaceColor->RGBColor[
     0.8444404389476747, 0.10814311628696283`, 0.9941223316762025],
    GraphicsColor->RGBColor[
     0.8444404389476747, 0.10814311628696283`, 0.9941223316762025],
    FontColor->RGBColor[
     0.8444404389476747, 0.10814311628696283`, 0.9941223316762025]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7502458783357544`*^9, {3.7502459221188726`*^9, 3.7502459455959835`*^9}, 
   3.750245992479002*^9, 3.750246036236122*^9, {3.7502461443179607`*^9, 
   3.750246150307822*^9}, 3.750369549578181*^9, 3.7503837211788836`*^9, 
   3.7503870231597815`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"92f4c5ad-9373-4341-8c79-bffd1bfaf7e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"100", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "30", ",", "3"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"x", ",", 
     RowBox[{"RandomColor", "[", "]"}], ",", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"10", ",", "30"}], "}"}], "]"}]}], "]"}], ",", "10"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.750246290322732*^9, 3.7502464040215425`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"de1ba2bf-ab1d-4ffd-a97a-8732b7be84d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["100",
    StripOnInput->False,
    FontSize->5], ",", 
   StyleBox["100",
    StripOnInput->False,
    FontSize->8], ",", 
   StyleBox["100",
    StripOnInput->False,
    FontSize->11], ",", 
   StyleBox["100",
    StripOnInput->False,
    FontSize->14], ",", 
   StyleBox["100",
    StripOnInput->False,
    FontSize->17], ",", 
   StyleBox["100",
    StripOnInput->False,
    FontSize->20], ",", 
   StyleBox["100",
    StripOnInput->False,
    FontSize->23], ",", 
   StyleBox["100",
    StripOnInput->False,
    FontSize->26], ",", 
   StyleBox["100",
    StripOnInput->False,
    FontSize->29]}], "}"}]], "Output",
 CellChangeTimes->{{3.7502463126330767`*^9, 3.7502463438757305`*^9}, {
   3.7502463936379175`*^9, 3.7502464052684956`*^9}, 3.7503695499543724`*^9, 
   3.750383721428855*^9, 3.7503870232013497`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"61fc9515-3cf0-4b72-9509-7a37c605d079"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["x",
    StripOnInput->False,
    LineColor->RGBColor[
     0.7318099202093304, 0.8830750669741247, 0.30111602370334856`],
    FrontFaceColor->RGBColor[
     0.7318099202093304, 0.8830750669741247, 0.30111602370334856`],
    BackFaceColor->RGBColor[
     0.7318099202093304, 0.8830750669741247, 0.30111602370334856`],
    GraphicsColor->RGBColor[
     0.7318099202093304, 0.8830750669741247, 0.30111602370334856`],
    FontSize->19,
    FontColor->RGBColor[
     0.7318099202093304, 0.8830750669741247, 0.30111602370334856`]], ",", 
   StyleBox["x",
    StripOnInput->False,
    LineColor->RGBColor[
     0.9426666066050275, 0.19952468114812927`, 0.9357018443519038],
    FrontFaceColor->RGBColor[
     0.9426666066050275, 0.19952468114812927`, 0.9357018443519038],
    BackFaceColor->RGBColor[
     0.9426666066050275, 0.19952468114812927`, 0.9357018443519038],
    GraphicsColor->RGBColor[
     0.9426666066050275, 0.19952468114812927`, 0.9357018443519038],
    FontSize->10,
    FontColor->RGBColor[
     0.9426666066050275, 0.19952468114812927`, 0.9357018443519038]], ",", 
   StyleBox["x",
    StripOnInput->False,
    LineColor->RGBColor[
     0.1054730348914541, 0.7695891648856421, 0.11694050683490675`],
    FrontFaceColor->RGBColor[
     0.1054730348914541, 0.7695891648856421, 0.11694050683490675`],
    BackFaceColor->RGBColor[
     0.1054730348914541, 0.7695891648856421, 0.11694050683490675`],
    GraphicsColor->RGBColor[
     0.1054730348914541, 0.7695891648856421, 0.11694050683490675`],
    FontSize->15,
    FontColor->RGBColor[
     0.1054730348914541, 0.7695891648856421, 0.11694050683490675`]], ",", 
   StyleBox["x",
    StripOnInput->False,
    LineColor->RGBColor[
     0.2470136455888019, 0.4544509915088124, 0.6984660918816474],
    FrontFaceColor->RGBColor[
     0.2470136455888019, 0.4544509915088124, 0.6984660918816474],
    BackFaceColor->RGBColor[
     0.2470136455888019, 0.4544509915088124, 0.6984660918816474],
    GraphicsColor->RGBColor[
     0.2470136455888019, 0.4544509915088124, 0.6984660918816474],
    FontSize->19,
    FontColor->RGBColor[
     0.2470136455888019, 0.4544509915088124, 0.6984660918816474]], ",", 
   StyleBox["x",
    StripOnInput->False,
    LineColor->RGBColor[
     0.6679632059621112, 0.7397119909994387, 0.9290969186980833],
    FrontFaceColor->RGBColor[
     0.6679632059621112, 0.7397119909994387, 0.9290969186980833],
    BackFaceColor->RGBColor[
     0.6679632059621112, 0.7397119909994387, 0.9290969186980833],
    GraphicsColor->RGBColor[
     0.6679632059621112, 0.7397119909994387, 0.9290969186980833],
    FontSize->29,
    FontColor->RGBColor[
     0.6679632059621112, 0.7397119909994387, 0.9290969186980833]], ",", 
   StyleBox["x",
    StripOnInput->False,
    LineColor->RGBColor[
     0.6755325068871394, 0.36769540648181165`, 0.272168221412487],
    FrontFaceColor->RGBColor[
     0.6755325068871394, 0.36769540648181165`, 0.272168221412487],
    BackFaceColor->RGBColor[
     0.6755325068871394, 0.36769540648181165`, 0.272168221412487],
    GraphicsColor->RGBColor[
     0.6755325068871394, 0.36769540648181165`, 0.272168221412487],
    FontSize->19,
    FontColor->RGBColor[
     0.6755325068871394, 0.36769540648181165`, 0.272168221412487]], ",", 
   StyleBox["x",
    StripOnInput->False,
    LineColor->RGBColor[
     0.12210978134540729`, 0.9885289784781248, 0.1845012770911767],
    FrontFaceColor->RGBColor[
     0.12210978134540729`, 0.9885289784781248, 0.1845012770911767],
    BackFaceColor->RGBColor[
     0.12210978134540729`, 0.9885289784781248, 0.1845012770911767],
    GraphicsColor->RGBColor[
     0.12210978134540729`, 0.9885289784781248, 0.1845012770911767],
    FontSize->16,
    FontColor->RGBColor[
     0.12210978134540729`, 0.9885289784781248, 0.1845012770911767]], ",", 
   StyleBox["x",
    StripOnInput->False,
    LineColor->RGBColor[
     0.12741777219424, 0.925374997275282, 0.7552335648064898],
    FrontFaceColor->RGBColor[
     0.12741777219424, 0.925374997275282, 0.7552335648064898],
    BackFaceColor->RGBColor[
     0.12741777219424, 0.925374997275282, 0.7552335648064898],
    GraphicsColor->RGBColor[
     0.12741777219424, 0.925374997275282, 0.7552335648064898],
    FontSize->11,
    FontColor->RGBColor[
     0.12741777219424, 0.925374997275282, 0.7552335648064898]], ",", 
   StyleBox["x",
    StripOnInput->False,
    LineColor->RGBColor[
     0.1827083529587663, 0.2253725115960319, 0.7930550927333062],
    FrontFaceColor->RGBColor[
     0.1827083529587663, 0.2253725115960319, 0.7930550927333062],
    BackFaceColor->RGBColor[
     0.1827083529587663, 0.2253725115960319, 0.7930550927333062],
    GraphicsColor->RGBColor[
     0.1827083529587663, 0.2253725115960319, 0.7930550927333062],
    FontSize->22,
    FontColor->RGBColor[
     0.1827083529587663, 0.2253725115960319, 0.7930550927333062]], ",", 
   StyleBox["x",
    StripOnInput->False,
    LineColor->RGBColor[
     0.5280167504081921, 0.47848931688334506`, 0.5134637361048142],
    FrontFaceColor->RGBColor[
     0.5280167504081921, 0.47848931688334506`, 0.5134637361048142],
    BackFaceColor->RGBColor[
     0.5280167504081921, 0.47848931688334506`, 0.5134637361048142],
    GraphicsColor->RGBColor[
     0.5280167504081921, 0.47848931688334506`, 0.5134637361048142],
    FontSize->15,
    FontColor->RGBColor[
     0.5280167504081921, 0.47848931688334506`, 0.5134637361048142]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7502463126330767`*^9, 3.7502463438757305`*^9}, {
   3.7502463936379175`*^9, 3.7502464052684956`*^9}, 3.7503695499543724`*^9, 
   3.750383721428855*^9, 3.7503870233484244`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"ea2e3c84-8c7f-47ed-91e8-e13ad085c04a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LanguageIdentify", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<thank you\>\"", ",", "\"\<merci\>\"", ",", "\"\<dar las gracias\>\"", 
    ",", "\"\<\:611f\:8b1d\>\"", ",", 
    "\"\<\:0431\:043b\:0430\:0433\:043e\:0434\:0430\:0440\:0438\:0442\:044c\>\
\""}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ImageIdentify", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
IjURxAacQE5nCfFU/jZbhgBH1DANcnyntokI1lKRjcDUbzINSzLfmimPdtbx
tr1V02RJ2brOz73Fil5hBG+ywxv8GEYQxwtSRBBVgjxBVqdohgzdjKmZUA19
qmlENQwImi4CVG7nPi50m5y8T88+ZlfeE7VeqNrPNK2n+uYTY+meOnss9w5I
5goSyqxCuTVNbdvQ3TGNt627W6bFsvVwGT7ZcJ6g4COC64Du2ue598W+Q7J/
n+LbpfkmTN+IFxxKYmNdamLLjNzxrtNfsdmSOo1fJoYFPBDBJubldWYFiqHB
cQwkroV6eUkWvoTjJAF/Qf5e+lvgGEocdZYqT+LoQQTZs421X5oLYndHd3Nb
fXNLdWMLur6tuoZUXcPqb5AsS0x4g+fdBqsoN31dkLslyi4L06vS7I66SAD+
GsoMS00gS1K5ARwvTGAHcSDHt/Q3NrQgf69gjbfIpnWuHetIK7sH+YfPDl59
eP+Lz56enwxB1MYDxmzM0ih5Bq3QuBt+72z8/Pb02fn4/Ye7dxblaSty96B8
76R2ul+eDVLdRqTXSAy6uVGvNBlUZ6NmuRQADHvZdiPerEUnw9LutHb/7vyD
l/c+/ejxx6/uP7q7uz+tz4fl40X73un4ycPdizuji7vDxw9njx9O7t/rPXzY
f/Z8evde/egs3x36ai1bf+wDodbowa2BK16yRvImb/pyWrm81S0uMiUExhTf
DpL3/5O3cOFpvBvqvkoMX2emH6R3P8rNXyWad+DkUOor0R0xrMW3bXZu6c3r
kOqWUHSNTn+DQPghmfwGk3FdbF/RhzGeIjvSkGe6xvIEBjNsexap9/y9YWw+
zRzOi8eTwtEwd9zLABptT7XhrNXhRtPZbrlbTVen7Rn0A6NhaDgK9ceh7jgI
FC51nNmmDSjsq0Khljre16VnpuKhpXHX1X8nMHoRHb9KDl+lus/TtSepzHkk
sPA6Ry5b32lqUi0Niq1NcvUpwTEjNuMmppLkSJUcmGMdOFz3eMs+b8nvrQT8
9WCgGY41Y8lOIjdKXv5rxjycmbrjY3N0pPW0JaCVaTJUKEGUx4hgYed40FTb
JluBoQi3CNw1sGVId5gyBFuB4qpAtlLVMBPI+72/IGolRrxIj+VKKAw+FvjL
ku6ItRi5hSgzf/dGkgkvBylsw7H0a2zzTWV43V5CwXWkcXJN278mq7/Fz/yE
GXmbGbrFjyJESaIoSRalqcIMmZ8lSmtU9Yipn3O0c6ZxwLBOWNYpzTzB23ax
/nNy9D4t/oCcfEQtPGWVnwqKjwXF+6L8PXHqhB9ZsL09vLm8qc4uqQsr+sam
sbtpGK4ap0u62VXj/nXr8ZLjdAs+wcLHFNcR130kDJ9RAsdk74LkndNDu/zk
QpnbtxT33bm5NzcJxDteOG9WB+UiWCCw84QOId9IEZppIgtdbGeKYJYQZgmc
DDD8Mu14Nkzg+4jSKBVK0aAURRrHCMMIgnMDY1tBGm5taa5taa7vaG4BEOpb
aN0KTr9MMK5SzOt0+wbLucn3bAm826zUm4LcDVFhWZxdBS1aXyebmyxjja3M
0UHsckN4bphI82Mw9g0AyY8mWlfpjm22EwOF2Kmu9857u5998+ybn3/w519/
+PjefreaKKec7XJg1osfTNPHu5lPHx1+9HD/g4vZl+8dvbw3ur9Xfvlg9OL+
8L2L/r3jxvG8dDirHM5qB5Pm4axzujeaDQrzYfF40Zz2i3uT2rsPDl48Pvn4
xcWXr9/96uP3Pnn58N2Lw4uT6aPbi1fv3P705ePXz+5+8PT2iydH7z3ee/7O
/vvPDl+/Ovjg/b37F80HDxonp/ndvej+YWK2GxyM3JOZ/3KCbjqTdRBnlkTD
Em4YfFUVXJKmZrbMIVy64609CgJ5W88j3VfxzgeJwbPg4F1/4541PZUFqwx3
Gu8IIazODYN5RatZUkhviHjXWLQ3qYSfsGnXJbxNpXvbliBHapJsV18e2zu7
gdFBcnqQHUySJyeNZ48Wnz4/+/LZ+RdPT7965/RnT8+fPp3ev+icnVaPDov7
88x0GJkMwruT+GwUnU5i01lsNIuCyl0fXioMUjje0iZ6hvRIn50ZCgtD+dhc
v2NrPnJ1nwbb74Ub78SK9yPx02Bwz+ed+wGBXYlvJvRN2IEpKzLjxOeC5EyW
nOiSIzgxCCR68UQ3E+8WYj1ALt7Pp9rFTK+QH+ULk3R2Gk4MHaGezteWwnWe
uUhXpQnAX3CyyWJUng9HtyO5SgJdgiILtukSBAfCAsBgy1fj1A725d0vPr7R
xwX+yi0kIC9fg2Lw8TQumsrdYkq2BSqk2ICVfHdbndh8eSFaZMOw9Cs825I2
vukoI+Dqlrr3E6j9hrjyBvCXHbvKjiwLYkhxiiQB5TDDuHw/JUuU1KmaMce0
xzfscQwjpnXOse+xrAsyfEQKXlDjj2jRB4TYA0L6ETnzmJa8R4uf0+LHDDAU
e8ekwABvrW1q80u68qqps2XqbeiHy7rRNc3kTf3ibcvRDfvZBnyKcZ5QXCcc
94koeo8WOiV7D0j+BT12IMyeaEun9st3hPcChd1Ichh0l+zqIAT8FcEimUem
dvEhFw8gd3ElLg7wF4QvD6bQLBimHcfzEkQhoiRKFIXRvMAW27uOs62A5AXy
riuvbCqvgvBFapZQ2mWSaZNs3qJZtxj2bZZzm+fa5rkvFWan3xKVlmSVdUVp
S1PHgUEeHgrtHSE/jGEH0EBeboxM8+Gwjm1KEC8tCRhuJNeLFQXIppSkvpd6
8cXFb/7y83/7u69/9eefPHt4Mm3nO+XQtJs6XZTuHlcvTqufPDz46P7e64v5
Ny/PPn48e3ra+OTd2UdPJs8vBo/POvcOGud7zbNF62S3e743vH8yv3vcv3PU
uzgd7o2qtw/6X3z4+MvXT7748J2Pn93/7OWjT188+uCdu+8/uQN2vv7o2Z9/
9urzV5cP+Oj5vacP9t5/evTNF4+++enD16/2Ht1vPXs2fOed9t27pZOTzHTq
7/Qco4l3sJ/u7iaa80h7EeseJhqHkfzMFRuYOg8S3SfxwbPk4GWy+yIO/K0/
DwI6j5zVO+bUXOZvMNw5gjuJhQPbFvuKVntDrbguE14Vs6+wKG8xSVeErFW1
BKt278BJeryuyPeN9Ymzvx+dHmf3joun5+1XL05+94sP/6d/9/P//fd/8be/
/4t/+P2v//Hff/vv/5svf/vrlz/97N4HL/Ye3++dHZSOdnNnh4XFNLE7T853
E9NFYjiPdsbB2sBb7rqyA3NuZMqPjbmpLjvT5vZ0xWND+dxcu++oPPSUHvgy
t/3RY29o3x86iESOYunb+uSpOnooi+zxY/uC1IEks6fO7lpAsGYn8fy0kJ/V
CrNWft7KzZrpWT3ba+T61cKoVBhn0+NgtGf1tSBXnW+vso0FsjKFV6YIqgxN
kaAL/CSGAyPUUlhyLEOK5kB4oZb0PSIdUe8G5vItQZHJLwD+ysxEgRbNVSEo
bDSZhQD+MsRbPGhHqEMDf8UmnNRCUMAUoRXNMizxHbcMqS24umMrrRqbS6ri
DXH6qjB1i5tc5SS3+Dm8uEoXlGjsApFTxEvbJPWYopmStBOsboZSTfHaGdG8
R4aPaQHg6T1q6gE++whTfIIsPEZkH+zE76CCx3jPguaccmxjrqOPtrZRuvqO
qrR1OQJXsIYm2dyhWQd0+5QJL1jOQxb4UfApxXFOdt4hWy9WHBfbrgt84B47
fgHl7tkqd8P1u5nyYSq/m4p1A3DBqI4IFUGWMsrUp7n6uFAV4kg9dKGTIoCp
IHm5dirTRmZYCUwbkQeTRB6qNECT+sgiD47vBPm4gTWsAWcR6mWUdhVvurx5
nmLD0mECzUmge0gAggOLtiLxMJYapHAybEVTrBvIVV2+qscyzXnmXZ5+xOLk
EOISWV7kCRM8bkAoCmr1Ob+zmbMl9UqP1OBTJSvhg7PJl199+Fff/vLbn//0
l5+8/ujBxf3Z6LRTv92tPhw3Xx6NPr23/w2Q7vH5V8/ug+3n79z52YuHr+8f
f/LoDBz58OLo/bsHr+7sv3s0eXo8BVzMOo/2hxfz/qPF6MN7p988e/Krl8//
4sWzv3jx4pfPn//svadfPX33F69e/uaTD3/z+Ud/8dmHv/z0g7/8/ItfvHr/
88ePAL/44MW3n330y49ffvni0WfPL14+OHjv/u6Lx3tP7k3ODmp3jpvvPZqB
teLuYe/iZHz7aHSw292b987OZg/fOf3gsyfvfHT28MPFyXut4b3E6GFk8m60
c+Gu75lLU32qDQUKYjjKNnloOhtJYyKKpNtyGUIm2hKwl9i0K3zmdUiwopNt
WeKbcBobrrKLfW171zs9yp/eHTx4dPTTn370b3/9q7/9n//X//Qf//Gf/vYf
/p+//ft//j//r3/63/7uP/2Hv/5fvv3lf/+bn//Vr37+ycfvP3py//Tu2fxg
Nt0d7h8Ojk57i+Pq6CjVPQrVjjyFfWtuV5OdqzMzKDtX5BaK/B6U3ZUnZ9LC
sTZzoEscGGKHl/9Q457b3Qt34DCUP3RUz731O/7Kmad47C4cefL77vTMndsN
pqeh9CRW2i02DlvNo35p1kr3K7kBCN9cdpgA6Rzu2PxNtach97RFwF9DkabO
EJVpsjJNBf4Kg0SmG8sw4yh6FFGFoKvRfCNJZqMrbCy5mSEz0U0+mT2iNvhl
Cidf6uCyjVS8DIkWXcGIr+KkV4mKGzTVKseAENsoKidP4xbLHXyJjS11UJQB
kiFBMGdRlvyOtb2qLl+XZK+IM7fE2XVhfkdcxsnqNGmDJqgRRQ28ok/Sjkma
MUYzQehmSO0uwbBHsh3SXKe00B1G4oKeeUjOPcbnH6Ky9xGJ21vhox3vAuOc
khxDpm3ABvKamwh9dVtb2tGVUfoa3tKm2fpMx4gDz7iufY7riO08ocOnVOcZ
Gb5Nge9vOe8jfRfk0H1u8oGq+MBeeRBsXmRKR7HsPBLqOO0FjS4uUsU4uhTP
kBcYk0J1lCfzM8RumsBFAcnLthHpFjyA5SDw3GQgryJMlwXJAjeW60CQbTt4
0wZGv4rWrWENG0QLEshLteMYbhLdRaS5iWQXAWtHY2woko/ESXDkdZlxpLMv
jOaZwjyXOo8U7lO5Y1+sbFH1HZ6hJVcW5fKUSpd3+Hv57H6/tldMdSKpZqQ2
LOyfjl+/fvrbX3797c++/PL509f37z092ns4Gz4Ytx/N2s+Php9c7H/9/MH3
tv6rvx89OAH74Pj3/oLty9t7wOJnp/O7k9bpoAYU/uj+2TfPH//qg+e//eDF
b95/+etXL377watvP3z/248//PbT10BS4O9vvnz97Vcf/+6zz4G/wOufv3j+
uy8++Ztvfvrtlx/9/PV77z86Af6+enL88fPzD947fu/h7vPHex+/On3x6PCd
OwvQwG8fju+eLZ6CKP/0xZ//8tM//+2nH/700dNPTh6+np0+rx88y8/fjXfu
uKszY7anDpXE7gTHHmQaYarKgJcqkFIpUi5DyUQ7As4Kh35dwLylEK1rFQiV
ZxlO4VJtWW1i6e4GDu403v/4/q9/+9Pf/81f/o//3X/4x7/7+3/+x3/+v/+P
v//nv/uP//wP/wT8/aff/9X/8Iuvfv/zr/7mt7/85mdfPH/57Pb9O7uH873D
2cnZ/OzO5PC8OTvNj87jnduh2qmnfGgs7OmycyXo8+mZFJCaSuITcXwmDY2k
vpHcO9K6xwbn2OLddYeOI+VTd+si1HuU6DyINe+FG3cjtbNQ6TBU3I/kdqO5
ebK8V2getVvHvfK8nRlU0r10qpuMdYPBptNT1cEVmaMicNS4tgoL+KvJklUZ
iirD+N7fy3/QsBFpRgxFi6Tr0CILVelkX95D7uJpnVxbSGaPKo0BqcYnUvmE
PCsN+IuSXMpLkF8nQTfp6jWuESmxU4G/Wo9E6ZIA01Velj7GsGQojhLeVkHB
/W199ZYid01evKWsbirrSEUTA3UIyh4J6uFVA7xuSgDJqx5ua0bb+tmO+Zhk
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
ZE8v4Bet6wb1gWae4HtRvBhZkqGrykxdnalfoKkbRPUCVtVAAXJ5WYggPSPM
IPhxFCuIZPjRrABO6qLowzxfXg0aUK0VXdhO5ha9vqzOFBQJLCSceALC6hma
u9dLaWvHXLw6+4vzQ5fPDV64NHGlHXuvmzEwwB8ZFI8OyyegegAvCuekCVMq
3bzDOO82Vjzmil8LnCynV6bUuozKmlVaU2Kdd05uxDp8rGBUkkxqYzGdyyk1
6kUGnchskPsMhpjDUQ6Hm+nkSiaxlokfzOefrzUeL5QP59Ogui5E7H4NzyKi
Aum5BLeE4xAyK17rSiLQCLlqAUfVb2/l40e1/F45DV6sB51g3MxGF8LurE23
korul/Mv1pc+aC2dLhb2sv7VgLFmk64HDQtORcMhr1plJZO06TVsxT1rYQeA
d69eebzWfLW79eZo78PDfWC+zzbX3x4ePFldOd3YfH9nF4wvtlqPllcWYvGU
y13w+muR2Eom1yrPHzSaT1Y2X2zufrCz/2Kj9XKz9WZn58Xa2l6psJlJbefT
m8UsSBcHjflWOb9eyLQqhf2lxtFqE7T+UixWTiYWi6XV2sLJ9sGHz159+PT1
Jy+++v0nf/rm87/87u03v379mzePPjxY2m4kCqvZ8of7h2ByeLHWfLxUPa7m
m1F3zqaKWbUhqzYecJQrudXW+ubx/tbx0dbxycPT00dPHp483D84WQf8Lu5k
ssueUN3kqcqsBa42SpJ5ESI75IxfZRdVfI8muU8Vd1BFXVTJAEsNkVgxGh/D
HBGY42p7Rusu6D0lnbOkthcUtjyYAcT6NFuTZMojVL6fyHCgSAYYRjWJlI9N
yfpgykGUdgKQSzbD6Q4cx0sWBOdEYYYszlEmOPI4QxqdEwbBT8EJ+gm8ZAIj
Gp7ldkLZbVDeFbjsMt54ney4yfC1k11tWPM1pO46QtsGV9+BKe5Ny+7Oavog
0o4J3l0o5/4U48E4sXMC0wPFDk8gh8dRw6PY/nHygwnm7SnJtVndVbTtsqUq
1s9zdBW6ukIUZqepkW5CoB0fbEO6L83Yzk+Z3oMZL83or0FV1yZl1yalNwZ1
/z6g++Gg/l/HLT+E+35JS94SV8a0daJtUepZNAYXHYG6xVOU2RJUQwimCYzx
/YOCwIAwPChODEtyo9LiqLg4IigOczKD1HAv3tWFMXdi9D1Y7SDdOiP04sRJ
hqrANTVE5iWRvsFS12nqOkW7SBHnUPwkQpBASVIkSZImClPFIYYsynHFlYWm
//D5wuvPDz766tHbz46fvdo8fLRYXY654mqelojlQyYZfd3Ytlvwi22z566M
t12ZvN2OetDPHB4TQ0dkkBHZBOB3RA6d1iPpAZ6xag9upBJb+fh6EchW9prz
TmvW6s7bwmVHrGgOxBUeLy8aURSzpuV6aLOZXq6nKrlQOuKJBh35YDDv988D
fpOJjVxyt5Q5qRWeLVcOKondfGinGF5NulMWWUDF8ak5ThndI+WqqVi/QlBy
m3N2vU/Od4pYgOL9SubxUmW3lAI2dDCfBUQvRjyrySCAbiUV38omgQWDehuW
M31CkouN8vMwXg4qpWTUbPJ5q6Jm1wDzrTp0q8Uzpg4XawDhZ5urT9aXj5uN
g3rt0XLzu0UdT1aWTxYXjhr15WQirNMGdJpy0L+cSjeisdVM9snq2pu9g9fb
u6+2tk/XNp42myf1+moiUXA4cjZL1edpFQsPlxZfbm2+3N54vrX2YnsDTBQv
QDNdrG/MV1oLC0eAuc2d04NHrx+9PD148uroo9+9/fbLl799dfjB25M3j1aP
Evagji3MuTyPmksf72+/WG2c1HM72VDdZ8xbZV69xGdRxEL2Si3X3F5ZPdhZ
PzoACO+dHB2dHB6f7BycrG3sV6ob8dSiMzhvcM/LLDmeNkqR+9AS5xTfNMpS
dgN458RAnXOibqZ0SKCdVtnwpgDHERM50lpXVg/4dRe1jpzCnJEYUwJ9iquO
05WxOVmYAvIwy4Uhm2E43RRaPYlQj2H0EKIFTnVgGW4Sx08XhwGzImVSpMlI
NVkRQBi4MLBgthtFNk+SZBNY8RCc1zHFvTEtvIxUXSZYr1E9NxnBWyTPDWCg
MO2VGfWNWVU7XNUBV3bBdb0wde+sohsu6QV9cIL0YALTC0GPjMGHx5BDI5i+
YWLHKKNtUnxl1nAFY7+ir7G183R1maooY3mZKUqkF+e/gw22z7quzdqvwGxX
YeYbM/obUNWNCdm1cfG1fuWPexX/1qP4l37N9yes/4oOnmdluyXlWUODa22o
XXWLe97gyEuNCbI2PKM+47efHxzghfu48T5eqoed6WZmuhjpB4x0FzHUibHf
QxrvA//F64dZDrgsSD2Dty51rqoda0rTolhb5WgbHNOiEDiyPEdXZFmGosRS
VtnLWlfF6KvawMF08HDhg48PP/3i6aefPfnko8cfvj569WJvZ7dRbcRCGYvB
J6HIkH2Yu+0zlzvQbffQfZ24wQH65KQUPqNBT6rg48rpMeU03IyleJnKnDaw
Fisd1RceroEjb+FgtbjVyK4U4/VErBhI5L25grtc9NSK7lrGsVIJHa4Wnu0t
Pd1fO9xYWK2V6vnUci5XjcUqocBiIrKRT2wXEtv5MCB3HSTbkHE1Zl2JWnJ2
acLIT1skCbMIACvFwxUklJlDtQsYSjJaiJ4OqkQA2A93Vl9uLAIjPmkUAbwZ
qxbwm3d7NAy6SyqqB90hlUCBhUoQQ3zog7mhm+LpLj8Pl9XyAgKKi0VIaUSL
XvPuQm2jUlzKppYzqZVscjEZLfrdSZspZtYvxUOH9fJWIZ1zWqJaZVgtDyql
ccvZh1zNVKwRCa6mE09Wlt7f3gSB9ulq82SxDmx3KRJKGvVeqTikUgCE9+Yr
gN/nG6sf7LY+Pjn4+GTv5e46mCIerjdbtcpmpbI5X9+oNPYW1082DvaXt0/W
nr15+NmTjWd7jf3Ha8e1cF6Ep5MmIBm77XC++BoE8mbppJrcTLgqTkXeJNCL
KWYNx+815Iqx+ZVqfWt5aWdz/XB3c29n72D74Li1e7i83MoXlwPRqslX1jjL
EnMW8EsD/EqdMKFpjKPup0s6mEDiByxJL08+KtPDdE6SI8T1JaRn8OZ0nrze
mVdbQLiKc9VRhjJKU0SowHwBhoBftgcHQjLR+HeEDVM4E5xsx9I9FLaXwQtw
xVGJLCHXZlT6vEqblSkTvL/7L4HhhJ3dcEkyghb0wjh3prjXYJKLGOMVivsG
PdxGC18neq8hLRenNBegiqtTinaYqgul6Z/V9SL0fSj9IFoxCOP2TZG7Ibj+
Kez4BHJ0Ej0+gR0aIXWO0G+OiS/P6C6hnZdBRtXUiLIKRlyEM1Nj2EAnwn0b
6WlHem+hvHcwnntIezvcdGtad3NScW1MerlP8ose8Y86xf/cJf+HIcP3Z9z/
QUrcZGeHpSWSqsDXFhT6rFyX5KmiRGVwRhGc4Pr7zk5uR/pYsS5G/D41focY
ayPE22iZB/jwXZTjDsJ0D2XoIRrHeW6MOsY2VsWOZbV/y+TbNNqWVaYFhWVJ
5VgxOJpGa93gqJvDy970Zqy8nQEHU/O4cXyy+vRZ6+Xz3Ven++8/3f/g6cHr
x3vPj1uHLdCWygtLuVIjbotoiSLkKKl/hNw/xoaPcRAQERqmxsO0uAnl7Jhi
akI1w0uIFAWta9GX3i4sHC9vPd3ZOz06OH24++y49XB3dXultlAs5sPVXHht
Pn6wlN+tJQ8Wco9Wqy92zlY6PdvdOFhrbi3Ul3LZSjRUCngasQCosesZ/3LE
vhDQ172qilO2HNZtpayLAW3JKS06JFmLwCvjyQgIxtQIeaxPgJoSYWY4sxM2
Pn057n+7tw4EzLcZ84HdNDQc4FqAI8B6+sQEfMENfi2pkjDNh/XRhm/TBm9w
Ju6aKFNOJlqDhRjICGC+p43iQXMBwJvxujIuByA37bTaJQIxEa1mkGthz6Pl
2kYmBt5WzyBaeXNhjSTvtuRc5oLHCr4L5p/DRulkaf5sreZq46BWWk5G0jaj
QywwcphOiTBq0JZ9XpAHjhrVp+tLL7fX3t9df9Faeby+8HC1sVnKgUljIZUG
bXolV9muLm+Wm63K3uHS8VK6mfdmk9agEDeH6B3iwJGricijRunFcvlxLXlU
Dq1FTHkzL6llSLlotYRst8oiKU+mnik0K5WNpeXdjbXtjc3d9dbu8sZ2tbGW
yjTc4YrBW1Jb8yJ9kqUMkiQulMQ2LTCe8cuWAXK72JIurrRfqBhX6GeNdpIz
yPHHJM6UypFWOzJKa1Kij/LUINQFKNIgCUgSJAF4QZNlubFzdiTwXLwJhjUj
iHYMzUlheBgsL4fjFwqCElFYpkpoNGm1MimRhFkgcv/dfMcxqh4srx/O6Zxi
3ZziXYIrLgHzpQVvMGI3aeFrZ5/GWi5AVBfGZVcmpbdnlN0IzTBU0wnX96EN
QyjlEJw/AKcPwchjM/jJKQx0Gg+dJo2PU7uHmW0jwgtQ7Tm4/aJhhaBeQEvm
Ybz8BDnWB/fcmXbcgIFkHuo4uyAo2ovzdQCEZ403oOpLY9LzvaJfdQt/2iX6
v7vk3xvQ/bdJ5w9QofeI0fvMxDQ7RuJHmMIgi+8jC7wIoW9S4h9lB3o5wR52
tIcZ7aBEb+MiVzGRy+jIFXLmDjZ8G+2+i7V34a2DNNuU0EfUJrjWBZl7VRNo
mYPbNu+m1b1u8216Q61QYjcV3Ygn1pPl3crKo5Xd09bJ64Nnbx+/eLr34tHO
s8PW073NV4d7bx8df3B09KzVOlxZWquXl+r5peVieSntjJk4ujmcEIlQ0GZl
FLiSBNeSp9WYMfnMqBwK+KV5GcKIWJ81euf9+dXC1nHryctnr968f/rq/ecv
Xzx58uhot9Vq1rfr5eOleVA/X7eWX60vnq4uPF1dfLax8mRr/dHmxsn6OgiN
i9lUNR5aTASXEt5qwJSziBNaVlBKDMmIVZdkN2vfSpqXAuqqW1a0CdMmtUfM
EaNnsH0dDMgwb3aSOtavpeKWo74PWysf7a7v5BM5q87EJIN91GQMfmJmqqdf
SCCceaherqEiebAByvAt6vBN1li7Fj/uZmM9PEpaK24lAk+rxbTb7dYo9QKu
WynPeRx5r9MlFwrxSL9asl1Ovdpc2qskqwFr0iiNaoVZqxJsZ2zqrF2znPAe
VNPHjdxBPXu0kH/YrOxU0vWIN27WgHewS3gepTRs0AABv96rFQ8XytuV7G4t
+3Bl/sV2cz2fqEf99WhwIZFoxBKg3m4VF1Yz8yuZ1Xq0EdT7NXQZBYIevnkP
MzAU02keL8wDeB/Ox7cz7q2kZdEjz2gZSTVFIcCoZWSTWeiLWqPFcLKRK6xW
G62VpdZyc31xcaVYXUjmqr5o2eTNqRxZiS7BlgepQgeaa57mGSa5umGOsu87
eDnibq64TyAblamndSac1U13+rmmsNAcERkifF2YowzMST1EkYcAepzQh+d7
sGw3muFEA/MlWREE8yzgF2/BkOxEmnuO7mEz3Fy6U8B0ClkuEc8vEQVFwgCP
56WCvD1ng+E1g7OS+yhOF4x1d4p1fUZwGaO9RnZdp4dvMBM3KOHLeN9FwO+E
6vyI6NKoqA0q7ZpVDQF+gQUjdQMI+QDgF8UaRVIn4XjIDAY6S4DNUiEQet8I
6xbgd1L9qxnLOc3yrKwOEZRGGNkBQrQT4W2f9d5GBe8R4t1zmWFGZoQc7kG7
bs9ar0O1F8Zk7/TyL/QKf9kj+WGP8r8P6v9hwvEvMN9PkP7rhNAQyTdLceFJ
NtzZvbLNEKZ9hOMeYvl72CHAbxc9do8YuYEKXUSEzsHDF/GJG9jwLVywgxIc
nPNBmB64yE9SRVmWhtjRlAPzDe04I/v++GEidZzLncyXHy/lwVGyU186Wt87
PXzywdNXH718+9mHn75/+uGTk2c7Ww/X1k43Wx/sHby/s/d0bWOv1lgrlxYK
uVolW64l46WQPWZWuqUEAx+rZ2OMLLSJDjMQJlUIYMEzWsSsFkk0kdgOjtwl
c8VclcXK3sHusydPT5+9evr4+ZOjR492dh9vbZ1urL+/uf5ha/3T3dbrteXj
amk7n93M57bK5Z16Y29pab+5sFkrrhSSy9lwPWrPOuRRDSMkJ3sEaA8PXjCx
WgnDdtK4FtKuhLWA4qWwp+K2+KQ8AQIqRE6xpkYByBoKdjUeeL5SB3lyKxPN
2/QJvcIv41s5NAVTIJ1jGwTCoFbjVYo0cyj+7CAb2kUeuMmFPnBy0HmT5Oy0
c9y7l46thr0WiURCpbKxKDWHmXJYFhKRos8R0MoaUc/DZgng2Yy7QCUHaoQs
S1HrStzdCFoXQrazayuqyf35xHYxslWKbBaizaSvHLTnPKaC1zYf8tRi/mrU
Vw37V7PxVjm7UUiuZMPrhchuLX20VCgFbBmnqRxwNZOJ1Uxup1w/rK9slxbX
cmthQ1iM52OHYVMdA+i+EZtQsF/OP1kqPaqn1+O2ulvZcEnLVm7OwKjauGY1
1aCmGc08R1AXyHoilXh6sVABU3NzPj+fTmR8objZG9XaoxJjmKsJMiR+Ks+B
oeugFOUwTT7AlPcypF0gOTOEHUxBJ5PfxRMOCqTjcjVca8QbrVS5Y07pOpPU
RRHZ8XwbmmtHcp0ojhPFsiNoVhjJNIPXQzH6KYx+5kxmPMFKJNvnyHYG0cLC
Gxg4HROvYxINjDkLg2GnM+x4uh1JtUJxmj6Y+A6G1w3n3oVxbyIk1wmmGzQf
CM/X52LXiOFLWN9FmPWM30HhhUHejTHhgynpAFT3AGbomdX0zYh7Znn9GM44
4HcGMwlBjE9jpwC/UEb/KPv2kPD8mPrdKcu7ssa4oDzIzPfQUg8Isfvo0F1c
9AEl3U9K9jLzI6zCKDnWg/a0z1qvAr8ekf28l3+pT/irPtmP+tT/NGz83rj9
+1PuH8E8F9H+HqwTirbA0Xo4UjOJ042QTX10Wy/D/4Ad6gLhmRa/QwhfRQYv
wIPvzYbPIaNXMJFbpGg3KzHBjcJ5QQzgVx6iG2u8s7sqrenCu67kcSz/pFR5
tlh9vlo/3Sofrlb2lpePtw+fP3r64enrj97/+NM3f/jsk89fPAeGu19fOKgv
PF5af7q8+XBhtVWstqq15UqpkI5GYu5g0hXK+0JFH9UqIVuFJLuA5OShbbQZ
PXZah0aasHgLgWajs60sroGjsihDEf98pbSyuHR88HhnY3e9sbxRWzxabJ6u
bbze2Hyzvv56pfmoUlqLRspOF+huOY+nEomCrLi1UF2fz68WU9/xW3CrQEjO
WbgVhyCjo1YdvK24dj2iWQkqN6OG7YS5GfEChLMWLWDTyCBxYROEwS63iA1e
P6xkHy+U15OheY91LREEShqUxVCyFE4kna6A7oxfE4ekJEA1JCiAV0+GpnWc
Ba9+OWDdy0QOC6n1qD9kMul4PD4Rp2TR41ZjMx1fyyUW4oHFuG/nzHnNfiU7
a1MsRizLcftWzreR8W3lAq18EIwbWf9K0r0QsZUDxnLAVPAZ8l5jLepuzWdB
Qn662QQh+XipulXKgDdsxL2bpQQgF9QKQDHYM203VPyu1XRquwhm3/VXmwen
q3vblW27yIzqnxm/04cbhtiFkq1s9v2N5cNSspXxV92qtJ6VN7ABvBULezOi
dprZFj3TaOZafUp30uHPh2LVdH6pnKqkw0m/w6Mz2kQ6O0floEvtJIEVy3Pi
GaZZonzk7IGAwi6qqIsm6gDw0nn36Lz7TE4ni9vLEwyLpVC5GqnS4QRGnNCE
F1nwZ88+M6HYJjjLMsuywZk2ON0CIxogGM0ESjWBUE8gNVCUdgqhR6OMeJyJ
hDVQURoqXE6GSckwCQEhJ+I1ZIqJTDPjaFY44Bev7Z+V3MUL+zD8DqSwHaO8
SbbenPOfJWdK5CIhdPE7fkeV5wYEF/s510b4HRDxwIyxB/A7o+qZEnaB/gv4
RVAmoMix0ekhCGoSRpn8P/hlVdo48w/YpQFGFsJKozgZPCuFpcWn+YUpbn6Y
neuZS9zF+9tglmtjyiuDkkt90v8yqPi/xrTfmzT845T5X2DWHyHs76DsVzH2
e2hLL9I4BNMOTKl6Ydo+nO3sMSW0EJMepTISaHpqjBy/jw1fQQTOz3ovYYL3
saFBQmSSEJ7ChyHYyBgxOU7NjsvzJO0809aUAf/NPEyUHldKjxYrx6vbHzzZ
/+D50euXh6fPjp48evLs6evXrz799ONff/rll2/evn325MnW8k41tZn3tQru
g7J3PWleS1jAEdhMB6M2s04kcWitxXgh7skaFFajxuz1uk0uvUDD4GhIPBOB
LJtiaxECHYavQkuVRKuFHw7o01F7I19Yma8WYtG0379SKe03l45Wll7ut46a
1UbM75bztHN4r5xTD9iWY66yW18PWPZKsf1CdClkbXiNVZcmZxRmdZyNkLEV
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
7hhN10fXjTA0ozwNkaacJEhHiMpRpokoC3A0WZmxonDOqy1NEZQlcwK9NHc7
y3uEiwEd4gU+p3s+xZn/PKr786h+D8F+lO0fEkWn5AmSaxZK7Xgrp5MLl2bP
3Dl/8+nD28+fv/v69bfffPX9+3fffPX2PWi/X331/Zu371+8/PrpkzcP77+8
fePp9SuPLp+7dXrz4sb86fkq4Hcx4VqOO5ei1qWIaTWs34zqT8YNuwnjhZzt
atl1qYiA7Y2Qej2s3Yq19l+voTfqGLDgtZDmZNIMKAb+eybvutoI3lpI3pxP
XJ+N3V5M3VvJ3l/NPVxt3fJxZyH9eL3y+sz8m7MLj9Zr1+Yyl5vpW8tlkKvP
VZMgTq8m0d9W+l+eBQ03fWet+Phk4/mZuccnZ26tFC8108B/Ab8BJXctgf5t
LVLpdCmetaiWo26AdtEBR9X8uLalpJ7f9Kjh6c6eD/4r+8SnVnrfWsSwETMF
ZdNafEfFLC0aRA27chaBQRGu2aQL3tZlr1mXErjtdsy6GTH+Bu9qQLuIqvJm
sVdM1JH7gfkCWh0CspGDA+Yrme61cPBBmJuxSMGMAZwX9OiEmgGcF1Nw/VKW
R0jz8EluHhGMXgHZK6Y6uSQnn4Iq+SB1R0zakEkTMukiFnnIJI3aoLTbELbA
FjFHySAqaCRguAYBR81jKpgkGZ2g4lLMcp5LK/F4NZGwJRO3J4P6iEsaMLFQ
GI9IR5zifjv/uJnXbua1GXmHVMwv+LgPaSP/yB/eryB0WPmDwIJTTlYRE5TD
kkpCXk3DpYw2lzIkEsZA2OhCdSYHrLVCSqtA65IYAlJDWKiJsuDWa1C4+qzU
WtAiJZu35PIXPGjS4QrqHR6lFZGaXVKLR2L1CWwhnj3KtSc41gTPmhQBq5W5
ORwzlarBUTSTLNO01EvVRjiWqBSJQWhUi/m1Ia8u5tFH3LAfETmdTIuHYkQJ
WhSv8uCUDpzMjJMYcCztGEc/wTdNi+x4uZuk8JGVAYoqRDFkGNoMFU6TlIlp
UWSEg/XQPJ1kpIPq/hPN8xHd+wnD+znd/SUNOUSxtxFtnWR7DxUZZXnxghBL
lhAqUzJ5WiZLyaEEWZ2haLIUZWYSRF9pup8X6QRZl4jsw9v24oxf4vSHiLqj
ZG0PRdMPwjxZNjIl7BvhdU1KBxgm3P/Hb0lubUDqPJsfGqe5uihIB9PTARBm
eQ6z3J9SbZ9M6T8eVX8yrvkCZ+6gu/p42KgoPG0q8bFFQ2LNW9hKLF1YPHPn
4qWHt548v/Pq7ZOv3r949x6A/PaH79//8M3X3371+qtnT14/vP/01rWHly/c
OXvyxs7qxdXZMws1kJ/Xc/6NjHc9hWykWk4KcvKFvONsxnq56LxZB6j6zufs
gN9FnxJoFhEBL96KaIFBL3ikWxH9haILmPKVKnprPvZwLftgNXN/JftwvfB4
swT0CtjoSv7ufPLBUubZRvnZVvXeSuFaM3VjIXdvrXZntXq2kliMukC3PVtN
3dmcvTqbvLGQubdWenqy+eL03NOTs/fWKjcWCqAXL4UdM6jlYi39YH3mciO3
GESSOtmZchzAG4Z5aaM0Z5FlzdKYhuPmT0tHDnf+63/hdn/u4Y8B/51DoShE
1BOPVa0SoNWAYTtmm3O3rlYveGEA70bYcDrtOJtFtqKmlQAMtIyp5r3ypFHk
4OPkk93i8eMwddQmJCMShkNEs4soCaOs7NaWEFUFgZoeVckqCivIrfuslLyA
nBOUMQNSBiam+IQkL59gY4xbmJNuATWiEWfsrXc2Ja36qEWbcmlLAWsj5ikF
7AGj0izhmCVcJyw1SXl6ERviUqUMvIQxpeCRjBDbaRAjDlXAZ4wHLXFMH0GU
IavAr6W5lVNOybCF321gd+o4RzX8Ywr2ITb+L4ShfyV1fswd/lJD6/LIJ+NW
RgEVVELiUkRST8G1rL6UNSUTeh+msSIKrUWiNklkdqbGxzfHRaa0QJ9ia1IM
fZ5nLsotBdhZtHqKiDflcIaMFrfSYpdYHOLW6JSY3XyLj2MNsawxljXBsaWE
2jBP6mGwzQSabpKqHWOZgW8StTGWPalGM6ZQyhaO2OOYNeG3Rrxan1uKeLkW
lKbzEWDvtNw1JbNPSi2tlwLLbCS5nax0UpVuKozS1BgNwihKjGhIMbVJqiqK
lwTHud4+OtJJdRyl2DvIyO8prn8ku/6FjPyJgnxCcu4jOw+TnMCXRxjeKRZK
4gc44rhEllRKE5AkrhRHydI4GQRacWJSlBgRJAdBiab52gnIAZxt/6ThwJTu
8JS6Awcfxym7puRdI7zjg+yjg9xjk/J+pg0vC3LVGak2J1XnBIIQiWTvw5mO
Em1Hac4OOtLBQNpo1k8pps8Jhs9xAF7dEZKlk+7oY7uHON5BATqmjJKteYm3
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
hGWTsfxq3sljNGR0gLBPTIyqGINO+XzKuph2Tkct/W5NAuKBt/JqSl5N69Qx
eoy8HlgCoI5AfLeKbZbTdDKyWkZSKSk6PUsPc4w2nt7OUTgEKgdf5WSrHWSN
Hau2t6isDUprtdJeLYTL+JYynqOO72nm+toFYaI8zVLlWbIkFSAs8mBlbjyo
unCY44gLvFmFMyeHs1JdWihJcjgJJjvNYGWZihxsHPDYxgL2US/cZ9OfLDpX
C6xyNiTj61VCvVZm0mgcWr1Xo7YLRAaKTMZRaXgKAw3UT6EVqY5i7f0c/5S8
c801uBmb2uqeWe+dX+ldXOhZnMnPjadHJh09fcZ0Qp0IqVIRXTKqC4akVj9H
FyDK/CiRv1UaRUEZsiFF1wYpMjuGpqkDCNNVdUxNAyiPNEU9U93MN6BVDqrB
z7WExOagyOgX6dw8hYUu0BKL9G/Vus53JCrxna3kXiKxi9oawlaamq9KK6/w
b1xjXiumXionn68inqnGvVuJeqsc+9/KMf+9BPN/X0P/7ir2z5dxb10ini4g
n70uKClX1jfBmA4fjRDlklN8akZIy4rQIWZHgN7hpqGdVIyNijYR25WoFnFL
hxhJ1uC4MI1vp1EhFEbRSNS2cOxYfY/I1C21dCssObk2yJHZcDIrCnK3G7wI
jbNSbi3WeSoMgXqJuQzw60rTRpaTuRF/fiS8uj33yVfPv/vhm6+/+uaLj7/8
7NlnD+4ebC2tbs3N3Z2f2Jod3p7t3/kV3rk+4L97k9n9yfTRZBL47MOJKAD2
q7UeoOdz6WezqS9We/55e+jL9YFv9+Z/frD6X082/vVgHcD79e7C51vTz2+N
A7f9fHvun7srr443fnh055vDWwDeBysjW/Mzm7MTaxPDK0N9iwOdC73Z2c7k
VCq0Pphb7IyMBOG4VgizMCD6ugWEpI63nPBs5MOzYbjLKN4ZTN4biAEdTWS2
eoOLCcudXv/OUGjELYsrCUk1CYxZk3wibJ1PeeaT7qWMZ8ijs3NQQkQxyM+I
j/7cfvENXn2BDFkEKAb8Av910juScuawTdVvluS13FGHaiFsAaF6xCFfSQDb
UaRVtG4Dt0vPiUoIcRnp5JIQs81AaeG1lFHrrrOQNQJ8G5+AtsglNq3abTJ4
LSYw2nQas0phUspPLuCyT64E+TTCuEkKInREzYqoGWk9L28WATc/OW2l5+Zh
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
7SSLlQAZUIBfkbRaKK8Rq2vFUB0XqmHqK2nmSoajjhtqFafRsi6Cphej6sbI
cyjALzvWyowiuUm0MEOWd7MleZYky5SmmaIYlRMg8oNkSYyhSYlNXRrnkNk/
4fKP+zxDblev097lsCTNlpjRENTq3ArVL3vLnjxaxy50+8KBWCje402PwMEh
ob2baOsleEZYgN+p3c6145nV/YXlrbnFtcmpuf6B4WT3uDHZq47klYm8Ptlp
CmcgT0xmD3MhL0HlRvLgWrqpkutolEaI0ihV4D9ZEgb4FRvJAj2Vb6CLYZbC
zQP8GiJsa5rnTHPtcZYjzHaHRC6/2OYQXZP/vtH+D0qqgN9bLOkr5mevYK1n
agT/qGSevY49fxlZcK39cjH6yjXUuUvt713qOHUR+eGFlg8LWs5far90FXO1
jFbRrmqju4jcMFmcpElzLHGGSQ9QOkzYOhmynN9UJkbWKDFNRkq7nYnxcQgh
ATUqYiUkil5I1weZ+iFzlwqKCbVepsnPdcallqTElVdEe9XZPkU2w0sE8SEr
IqivBPwG9eVuXZkNKjfpq9S6KoOtJZbj5rrda5ujR8/Wd5+u3jqcHbnVExry
wGm9PWf25GyJvuDIdOfKzfHNW7N31xZ21hb3J7I7o6mN3tByFuRP1+2+8MP5
3s9uT366MfHl1sw3Owuv9pbA+Ovkh/s3v9ubebU7/Wpn9uT81e78t/fmv9ya
+/T2/Ne7t14dbf/47PCnjx+9evnw88eHL453H9+/d7C2tDEzuTDUPzc8uDA2
Oj040JNMxNzOTvBZD7qGwo6puOvkyVFu5YxXsRrV5SAegHfcpZkLmk72wx3N
vJjp3sp5V2LwtFc77detZV0b3b7JiD4H81NGdkSI64Y4nRAHEKfH12uwNez6
a60XTyHOv9Fw9q+k0g8U7aUqVCmEveHjIJJyrIXQaMLV95nEIDknZLSMitVr
Eoz+sjh5wqOe8GnBwQSAnFTT3Nx2Ha5KgrokQV+VYSvUFKSORYa4bAWHI2Ex
FWKBRMgB/FosJpfLEw6lYpHugDeXjYbiXrffZvLDxoTbmvM74jb9yZMkxVSr
gGTnE7wSMujCKT07Z+Bm9ey4luHgdSiwleL2UsCvjtFk4LZC3FaHiug10EM2
XtQtCrmFAGEnzLSZaE4b1Q6TYTPOqEfpoDYd1KrVt6pNLXJTk9hcz7XUMK1V
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
YnlPfjA6Ote7uD61fm9l6+D2zv27e0c7u4c7W7t31jaWF5ZnZhfGl27O3N5a
3tnf2N8+2tvZ3zu4vXV/5uZe5/imOzevCY2IMwvmybvJmw9G53dGxla6BmbS
fRPxrqFQsk/pi/NsPqYzIADme+K/QZHFxxBBzXTFDYL4ClFRzLI0ijxYsY8k
9lG0dqrKRlXbGTo3zxiQWmIKOCUzZ4S2biHcxbZ2Me3dXHeP2N2tcHdpPJ1Q
u+13lNDfxZ1n1b2F0uQ5MnyqkfvHEvR/Xmv+46XqP18of/1ixanCqn8U1rx9
pf5UMeIfBR1vXUK/cwX7YSn5CkJUR4CwVCuJYsXzAjS6E4vSNdYKy0poxZdx
xRdRJQXtpe+jis7iSwooFYWMmuuCxlodGu9hcZMydQ9kHjS5hq2uXoMzq3Kl
FJ6EzB2VeBIcV5gGuzAmQ5NRVQMrKnya6ghUF9XXxwwNAV2tT1/ntSAsxga7
FRlPMgMDLkNCxbWTqTCaZGvrMNRirA2CJJnhQytSHPeAITURGJzrmr85eXtj
dfv2xvHS2MHc0O50/+HCyLP12S92VkGN/VWvju788PDuT493gMDku+Otbw83
fzhe//7o1neHa98erH2zf+vVwe0fHu78/PTwf3/5yX999vLV8yefn8B7+PDg
4GDn3r27W7vrt/Zvb+5u3L59c21pdnFucn5+amF5bmliaGS0u6s3GkraDGGt
OKETDbg083HrL9v4SgctYsDvvZxv1CQaM4vn7MoeBdVLaohyOoaNnAE9a9DM
nXLLhm2Cbg05JcYGOK1OaqMJXyVrLmKUncFcebv1/F87LvyVUX5ahrioRl42
40vspDJ9R6GuvdSErQR/WNVSpEIWu5nNDuB6DERMivew22Bak4XaqCfUqFBl
emKtm9dh5iOswg6bmKDnnTyQSsagqwR8vUJm0qksRrXLZXS5zEaD1qg3OW1e
nyPUmcsPDQyODA/2dXWmY+FUyJ+N+Dtj3hCsDZmUPp3ILmOYuHgjGw3z8Q4x
EQAb1DKAPAoykB/kdgXZIkA7ZUQw8WvoISMnbhUm7eKETRSDBUETM2CiAUUd
rFSAn02IshlRKseL5Tm+LMWaxuqTSE2mRdPZquvrMAxj9MN4IMMIwThOhafZ
1hmufZpvneBbx4RQJ0MeIyvDFF2Mbc1Igv1QdsI5MtY5Ozu4vj6/u3v7+Gjv
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
+/zRo2+evnj1/ONXzz/99tknXzx+/vnj5588evz04dHR4e7B/XsHR3f3H9x7
tLe/f3dz9+7a3v3VWzvjAwuhyLDWOyg1ZChwN8PZz/MMSJydEmNUoLDThUYS
U1nJhxq5mmYyvwZNK8czqmiCeoaknsgrZSiqVC6UwoVmm5pVQaYlq5B4mDo3
7ddLSGonXetlKtwkhQ+nDKMMOay+G2Xow0B9OF0fWdvL0vaLoAE5MfdbWvdr
3L732PkzGNc75aI/XiX/7hrxtVLSWyX4t0vx71XTzjfzrrcIKhrYpVXUIqT+
As1TKYqj+CEczdqO0TYCeJHSqkZuUTW9oAT3fkHjW6fL/3Kq+K/vXH39H1ff
/kfFO+/XnD7TeOaDpg/fa/rgTMe5q7RrlcIKjKmNH2KYupXuQV1gGIqPmtLj
pvSoMdcnBvzaHB2g/9r0CL8ZFYaxURidsuNjVnTI1u63ttjNdUZDpcla7fA2
wHG20ovjWpqohgoiVEo0lNCtlXx3g9jVDCeYXSO2lZWunfWp/eX5nZm5e2Oz
e4tTj2+vfHH/7ndPDn94dgz04/MHP798BAQm4OVPLx7+j0+e/M9Pn4IRzH9+
tvfdw+0v9tY+37313YPdfz178M393YdrKw83Nh7c3ty7tbGxuDI7Pt3d2efz
hnSQiYhq6WiqrywtKrxw/vxH5woKLp396Py7755+88033337rff+/reLp99u
LCkg1Bfz0LVGLsYno598SgUkt4Dg5eFjYnKEj7Ph69ykJiuqIkBtjLGRdkyZ
sfUaMF953TkLutTUcV0HknPDRX7NeXbFGcr104Sr76Avvk4rPQ0glTYVyBEF
wILViHPKxrPihgJe9VlO5Ye82o9EDZdEiMvStiI1pkLQcg1z/b3WK2+1XH67
+txfmi6/1Vr8bvmZP5360//x5h/+z7f/+N9Ovfaff//D71/77b//x7/927//
5v/60+//7S+v/dupt//9w9N/+uC91979+x/+8cZrH7719/OXrhTfqKiqq6+t
r0MgEEQCRsRnaeRCnZRnVPCdkDgEKyOw0g8J3RqOR8s1CokWCcWpYvn1gpBJ
HNQLPWqOXUZ3SGigJkNMQDHOwiMY2VgtrV1NQcoIVXpWs0uBBxU4aGP4XTS/
l+YOkl0RoiWEhoItunCTNtZkSDdbujrs/RjHCNM2RLcN05xjdM8kyzPJsA2T
LL14bapdG0UaE7hADzc3qu6fhscXPPOr4c2bs7ubK4/2tl8e3f/04fH/y9Rb
B8d1Jeq+OWfOZMKxY4iZQRYzY0tqBjUzMzO3mhnU3FK3mMmWmSkMdsAQO5yZ
TDIZxnvve+/PtzU599at+mrV7i2pSiX1b3/ft/bqtb9//PiHJ09++vyrbx8+
/urBp08+vvfJ/Xfe//DOO+/feuuDG2/du/neW9ffuH3pxq2NK3dWT1+fnDob
Sy1bw4tKXYpgyOEtBYolRwOIU/upUhtJaCLxTP0iy+aH7ikiEJbdTeD10UVg
mmSAIe8VmMAaP94QpZoSbNeYxjNuMiYVAL+bW2AFuZYw3xhi64NU8wjFUaR6
Z+muWaJlekhbQqrGhtRFqm6Kb5yTs6a3Cub2AvwKS9X4wIl+1YFu0cEB8Umo
uGJQcAoiqsJpOtkOJM+FpxiQaNkAbrhaMDKgn6Co8zROAEs0QbCagSFlD07V
jVN1oSWtA/SqZtTRyt69ZR37T3UeqgAdr4GW16OqqxCnyuDHK4fK29jNg4pe
ho8kS3Gtk0r/gj6+YsmcdoyecRZOD5fmVZmiKJKgh0PURISRjXILUV4hzB2L
cfNRRiZKjYWxXi/Y7u71RsDRHMZf5NpTlM11LD4Y3wViObrZw31CN0zmxjgT
vMl5z/VLUx/dOf/4zvWn128+uXITgPfbe2//8emnAKH//O5zYPz54PefffzT
449+9+g+MAJfBVgG4N1E+/N7f33y4U+fvPX9h3f/8OkHf3364PsP371/5eKj
O3ffPH9hY25htlAaCcf1WhNgtcBbGNbbAu5p6Wqtr6s+deL44YMH9+/atXPL
lldef33Hgb07972+9cieV2sOb288tr3z1C502wnKYDPQDT0yhp2L05Ogbg4W
yNI2Yr8F12NGd/oogzEuAmB2GN/hInbZsa1eWp8B0STtr1SA6wDzFQ/U8nsr
eaAqcssRIahSjWo0DDUD/deCb7bhm81DdUZ8uwrZIIPWSGH1MniDBNYoBn4c
3Qa4LaLp0GDNHlDVnt7qPdDmI/31h6r2vbBryzP7t//i4OsvHdixZd/213Zv
27Z9y6uvvvSrHdt+tXf3C0ePvFJ+cntD1f7G6kOVR/ccen3L8y9v2bln79GT
wCXqVEXFqZbmejgERMYhWUS0lE00y9legzgxrMp5DRmPNm6X2+V0p4rlNwhi
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
a/dufFV+7cvam9/UN1xvarkJ6azqpkFoOoI4yAX4ZfppSAUcwm0FUeqacFUN
yLKGtlstbXfgHTUkNVEZY+lzWGGwimj8Gsn7HNp/C0GGoWkkPIdOllIpmh6y
Dkw2NtJsjSxXC18KFyihFGE5gf8d13RHHWnUJaH6DIbnfh+YaWaKKCCRJ5TS
uESaEKjyYlNRDPArTdH7zJ0YLZzhIQJQA5KlONIkU5amS9P9DH8HXHbrFvbf
P237H6wUgRLpxXtQeGd3nxNLc/dz/SxJhK9PS615hWdI7h4QOHM07wAtPsEZ
XJKm9kTRdU5okRFeYIWn2d4RtjPLcSTEwYI5PODw5+yulN6ZVdhzAnkISzGB
ZBqiUIUVaLrFlh6FHyMPd/P9UKqzHmu816MtQ6vu4tS1VFMb24oCLJggbsPI
EV2iDgQTASV3gvEIMBGK4MMwemifp4UUbWSlwcIMCuj4Cr9UZTWq9Q6tRhGP
RebmZvb2di4vL3/68e2ff3739vUPAMVvnz1/c3n59uHZu4enQOf9++MzQP/1
/OyXR0c/HG283PttSfbNmQdT+Y18MKbiWBi9gq5WDgKkJKBsPIpXwvVIuVEd
L2OVDvsMU3Hn2lBsbyK3VcqtDKVKUV8p4h8Ougf97lI0sljIb44VN8fHV8eL
88MDE9kUoNXx0vHa6tnOzsnm5oOtncdHp0+Oz873jh8dnr15/PqnZz++vHi+
M72q5coJ8G4xhalgsSwyaTERLiUCYxHnSiF0UEo8GIuejoTOBn1HScu2X71l
oy/p+ooSVI4Li7MgKR5iQIUfMzOiAhQgP6vDQWyxYhvt2AYrps7YWWmlILQ4
sAzVIO2ql6Dqpd0NCixYTerQvl+NGS8k9yBba29f/erLT/70+WcfffXl5who
B0Cr12I1qRROvdar1wCDmF0hdGnEFhnXIGICMkk5ZqXAKOfpJGwlmyHnMIS0
fgqmE9vR1gNr6YI0IFprW2pvtzXcQUCqe7tAaEQ9FHS3qf56c8ONxrrylqZq
UH1lxd2rX3/+x4/+8//++Pf/+6sP//32lU9AVde7oXW4jiYsvB6PaCR0NGJh
de2dVZ24eiwNRBbCuLourhlJUtUjeN8jBN8STXdF0WbdAMwx3uWbxQQWMP75
HvN0pSJXRrVdQ7C+qUN8cbfui2tln35/85Ovr//xRuWnlZDr1Yi7NyF3Pmu4
+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
gm+e4sk6M0j6KIo5g16XXWjJzK9AkgzQXFM8rTqRUZcI+CWVBaCVTnCJdbLU
Gig4Wf4IJgN4OgN+o6geUE4wVg7J0Kaka6FYZVSS0DuiwCaM8jCSYhuZZx+Z
6xKa4eKWZOUKveGedMcPZR1OdE1mhWbIYflGLL0qjaiDkwzJ2XpIlj6OXJFY
1JDCqU+iVkRhDPgkZUqSPDmtlMCop7FqqUQ5Bk6NIXKReAo0pxCl0he1d1U/
H+1ZWhjd3Vr6bX/n/dbaztLC2uzM+sLc9urqgQRfvfvw+j1Q8I9vfwDrAOHN
1TVgyZfzi5tzC2uTLxafjb0YGB5/3D/U1tZdU9taXqEuKiKj0fG+3t5WDxyu
XnG5eSPWy40Eh6anpHApFJNS2WAyAX7729qf9fY97+ufGBpemJheeTEHJl+g
4K2XG292Xr3dff3z663t5bn1uZmV6RfTw2NPWvv4NKGbtcflL64Guwcr+cXg
8V/fvHq3/XJ/ffaH/YObMb1bmX29OL05NbI00jfe3WwQsRGRQRePHrp44sTH
//JvD67dxyOJoYEJ1y7bXr1s/xUA9oubX5y7duH8jQvnr509e+ncue9BPQaS
/fLLa999d+frr26dO3v1zOkrp05+f+LY9ydOfn7o8PGTp86cPHn6s88+O/v5
6a8uXjh++NPzn5+KCQ/hMukaidSgVJWpdUaFplytrzCqNAqBSiaQi/kCDoNO
zk2GJAKkrl767trVy8DdMGgcDovIysbnkdOJ2RhiRmpGGjwVHh0R5hXo7xwa
7BYe6gGWAN6QIOcD//rZeHk+cHS4/uD+1zdvnPv2woWDXPzy0tdfXfv+8s3r
N+7fvffw4cN7D+7funP75t079x89sHGyc/Jw8Qrw8Y8I9sM+DMmwi893TWH6
YXgheGH4QQSReVok1ZDGNJMFTTxph0LapRN36kUdekEjiW7C5ShSskTwPDGS
KScUG3KNloLqZprRkqkoRwp0UJYmsVAFoSmTqMpUpjKJqYRTRZBMRiQ+LzQ9
PzKHlphfCCvgIAs4qQweqkiMKyrGcGRIjgzBlaMA0bpSWoWJq1PQxJwMHhPN
KULSeBCKPL6wMrmoFctuxzFbCdxOUnE/Wzcsqh4yVA7qyvrk6i6uuJHCqMCQ
dAlp8nBGFZxZncKuQjCMqQUlKYxSjKgqW1lPa+lWm1uEyvIsenEMSeSbW+xD
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
gbSSCFZlTFFtIr8xRdqRruqnVE2Km5Y0FaM8di06TRGMFnln65DZOkROCYJs
QtBr0IUWBNUMzauIzS4Lxaq8oHybhCIrGN8mRewAkiSwTeS4xRQ6xxa6p/CD
01WJGWpIqiAopsDJJ/26T/oVn8yrgOKgnAchuQ6hua6hOR4RuX5xtCCMMDa/
NJXXkC5ry5G1kqUNVHFdgayOxa8syFfg0wUQkjyRU46UNRJkFpGhQ6uukxZI
sjPyUwkZEFI2nFeYVVsqa6nQPKkvH++on+tvXx/p258aeTc3vjM39Xte7M7P
7C3OvVpeerW68np1dWd5CYgYUAwQfrW9v7q4tvBicfbFwurcxtz44ouRmWe9
I42V9QqerJgtNMrVNdqSloqK7pqarpqqripTZ2VZe0VJi0EDnNtRW9deY2kw
VdQZTW21lv7WzqHOx4Ndj6dHxmdHp8aGn89Nzrzeev3Dqx9213bfbG28393+
6dXr1xu7mwvrDRX1sKgkHydfaCQMrK/OrLxa39pfX915ufR+b21vfWFvdXF/
benN+grI9uLs7PBAX2NDY1kZOS3D38Xr4qkLR/984sShs4c+PfvRH0/98Q8n
Pv73Q3/4148Of3r8i7Nfnj555ujhY8eOHAfL40dPAITPnjl/5uSFU8cvnDx2
/sinZz/+08lPPvnzH//4bx999NHhw4c/+eSTP/3poxPHTl67chOamFxYwDLq
ysr05QZtWVWZua66obayrt5sMpYoiyV8mZinVytMpSVyWTGzkBEaHPLIyvr+
/bsRkSHZpPS8/Kx0IgafjkwjoAG5OFwKGIrj4kL8/V2dnR88enQDIOzqdh/w
GxBo7x9g5+P7yMPrnqv7bQ/3ewdxe+DmbuXmZu3qDmLj4m5j72pl43Tf2umO
g+dD73DnCJgfFBuZkh4TT4uCM+NQRRAMJxHHjk/jxKWxo7GFYTkSaIYwNkMS
n6dHFdYQOS1kblehsJ/D7yRTqvB5enRReY7SXKitoOvKKKYKskKNEiuhdEEo
juYGzXOAM7yJKgj4QkVlDk+Dz2LHwjK8Q5PsgiCPIlKc47FeCTjvpAw/ZE4I
hhyKzg8CwVKCCQVhXHGmXE1TqgtVykKthiWTU9niNJaKIKrLKTCjKRY0pytb
1Esuas3nNpLFrSxlM1taRz84yVeFyBAlpAliiNK4XGWiyJIpbybJGrOAf0Fk
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
RROl9DFD3poDACTpYwoqk8hlOJwsHlrknyoKzjElFbUThd1kfgdV8pitHZJo
BsVFjXmZmkSk0BeU4eQiOyTbGysIyFSGU0yQwlp4QW0SyRSbpgtLlfomi7yg
XA8I2yOJ7Z3M8oEzfOF0v1imLajQyTwvtCj4d36DAL8JBfYwlh2cb58qdk6V
ucFlPinyYIQqBq2HJesSEYbI9JpASrsnd8BF8tRROuAo6fKQtkewK2ILdHCO
MVtspv9+8BtdVl8gKaMzi7OzCxAFLEK5UdzdWDnSVj/b27nU+3hzaHDv+dPd
Z0NrQ30rg91rz3t3pobWB9q3hrv2R3vfTQx8ABRPPXkz1g82d5/3bjztWx0Z
2JqaAC16a35xbmxy9MnTxrKGCmW5mqdS8uTlqrKuuo7xgdHFifnJ4dHp0cnZ
iRfzUy8OjmReebm2vLI8Pzc58BQgbJSrSRiCn5Pbja8vXzr31bWLlzzs3FAQ
hFIg72zqXJhafLf7/ue3v3zY/2FvfW9tYW11fnV2fPbZk+fmshq1VDPQPfhy
bvXX97/+9PaHX97/BPjdevlybXFx4cXkwuLM8tLcwc0jtrbf7u6/3t7fXQEI
r20v7eyuvtlc2pseXehoGVApTDhcrr9/9KXv7p058+35899fv37/xs17l76/
dv7LC0ePHzly7PDxk0dOnDr6z3WwPHz0CPD0px8fPnn8zNUrtzw9ApJhWCqZ
q1FVNtT1dLYP9/Q8e/x4pKOjv6m5w1LXYCqv1Op1FeWlVZXGygqj0VBSqi8x
GAxGo8lgKBMIRMnwVCcXZ0dnp6Dw4DhobDwsNg4aExntGxsfGJcQFB4J/OwA
EHZwuufofB8we+fe5Tt3r967f/2h1a0HD2+C9Rs3L90Fj9y7dv/BrYdWd61t
rMAOwcbB3tbJzhaA7GXrEewUEOcaleqVlBGAoYRlsKIzxaHp4hC8MAQlDELL
wgjABZpYpDwCXRxFUMVRDaliS7rcksnXp5K54ZkUH6IgmiiILVChpIARM52l
zaQWoxkadJYgEsv0TiI7gCCZXgRBaLooOk0Ql5YfA88IikF5xGA8oMD4jJg0
fmK66OB6jPSytKIqIqs8PUeenFoQHJnmHIx8FEX0RLNiScLUfDGaKsNl8+E4
TjRBEpVVGp9dEUcsj8goDaGWJwgtOF4ZiiKOI8kSMoSxBE5EOic6RwRlKrEi
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
4JvTeDU40H7RMv8EliNKCsErk7KM6AJLZlF7Hr+LVtROZTZRuG1sZj2dVUcD
/GbrYUkcdyjTFvBL1tvlap1IGg+iOjC7JDazJCFZ5h/GtoniW8UI7sTzb8cy
b0VT7kRnW0VnOsZluMeRvVI5oRnF8VnFCTheaHKBd2K+W2K+C5oTgOYGYvmh
OFEEXh6TpkzAFsemiMLjpQEoQzipPorWFcLo9WL3OzEeW1Ha7rG67RjtroWt
3szWsMKm6IL6eEYjlNuO5FYjaLpEmhLK1+HVxnyjkd1oVg601j5vb57p710d
Hd2entyYnliZer489XR5euTHqf7N/sbF9qq1HsvuYAsI2FzvbQT+neuwPGuo
GKgpH2wwj3W2zwz2Lz179qJvYqpvfKDpcb2xtqHcMtw9uDq7tL26ub95cMvg
N5s777Zfvd969WZ1Z3t+dWNqeRHMpsNTT7uGOi3ttaVmvUQrZgiLyOxcHCkN
jkclIHKw2WUKw9TgxM7iFsjm/Muf9t592H67t7I9PTQJnq/gKsb6xt5tvPlp
94e/vP3lr+9Bfvpp/9XmwvzMs5Gnj/unR0ZXZxc2F1fW51dWF1Z2Vnfe7rwD
Ft7bePNyfmPy2dzI0FR/z2h1ebOQq0pNwNvcdT515Oypo2fOnvkczLxHT3x2
+vzxQyc+Pn7m6LEzJz49duSjz45+cuTU0eNfHj/59YWLN7x9o7JyWeJiQ3l1
axvozINTHX3PHz8Z7RsYGRgc7u3tbWyorSjT/x+e3juqrTRP1525M90zPV3V
1bGqOld3tSs7JwyYYHISCOWchRKSEMpISEJZCIEkkAQKSIDIOeeckw3GYJyz
XanTzNwz6677x/3oOud6vf7W1rYMXrYfPe9va2/tpqC3PVLf1tLY6PfVOR3O
KkBxdbXDXq4u43JYBQUQ0HjPnf88OTUOjs6mFaE5fAKTg6FSkWQynECA4nD5
GEweCBZbAFJYmAmBpGdlJaekxF2/fvnKZTCtf/r5Z6c+/OMHpz7808enPvr4
1Ccf/enTzz45ff7spcuXrp0HT4m7ei3tWkL+9XRsch4zEyXKxykQeEM6yZxF
qcyhOvNYDTBBM07Yguc2ooCFJRGqprXYOaD1D9usQblYTy8pp/JN2QJzjtAC
EZggfCOUqytgawqY6nyODgEGVZASC15kJbC1hcjixFza5RxpQp40GyZH4fUo
ngeibEsq77ymCKeJarBsLZ0mw9EU2YzyeEZZHEOazSjFyMycmrDeGtDKHCWq
OkmZt4RfReHXEIRujCJIktXjpXX48gZ2hb/UEFA5msyVnhpDTYWmWqyv52oC
eL7jRrEzVteebxvEqltgjmF27YRY6sOxbdBiB4KqzeY6qYpwib6zrKJbZR7Q
O6eqqketho5ya4fW0qKqjmpcEa3OxuWXwJUKQp1Tqm64rvanKP25J/5tJIuD
FKYLhjQmIs0xWNslUtVlkvUqQXcVo4gF/GJLUvCaDLYNJvUSlfVkkRNdZMgG
8OIViVRNGl2fyTDnsO2FXOfJ/dEYdhjJAqHUFgpbsJoRkmkGbZ7JMc4kVUxc
1Q5frhiN1Q0m6vozjYMI0yBB30us6CYbeun2dq4xRLeF2MHO8t5h18hQw/RQ
0+p431xPx3J/3/b42J2lhePNlePt5dsb8zdXpkBbfjDdczTWfn+y6/Fs36OZ
3ofTPY9m++5O9RxO9t6ZHLg9PXx7duLgH7cvOVhZ3JvburNya39xZ2V8YWVy
cX9jF1Dz8Oj+yeD58OmTowcPbgPvHj68dfxo796TW/cO1vcBhquTy4DfNn+0
1uIyyCsAs3wqj1iIh9zIReUgdBINmKMBvH9/9dcXx4+/ffbm9YMXTw8f7a/e
AmiDf7/h9uEXd599+/Trv736M6D7z89ff/v8xdOjw/31tVtrm3e2b97bO7i3
d3j35sHhrQPQvYHHH9998vj4+d39B2D+3dm8s7NxND+92ds5XlsZICIZH//+
i5/96Bc/+8nPfwZ+/uLH7/7yhOK3fvLDH/3snZ+++947P33vB2/94u13fv3e
Lz/KhxJFYp3b29zcOtIztDA5vw34HZ5aGZ9eGZmcHxqb7Ovra4o01rmqaiqN
riqzxaADMVVojDqtQa/TacvFolIGnZqSknwaAPjFR4k3ruUXZmAIECwxH4pI
xeML/v8AbNFoCBKZC4dno1D5CEQeDJaTD8nKzLiRcD3m4oXTX3z+0ScfnwLw
fvSnU6c+/OjUhydV+ovPz509d+nClasX46/GpMbE5cYmIuPTScl5rDSoIAel
ScYZ00n2HJoLwvbDAbwlbXiwFjdiZS0n7xY5BzQNw2ZLUCo10mUGJuCXZ8jm
6XOKDRC2NpeiyCBKMkjSbICtooZe5mLJnHSRnUSUZxVw4hCCpDx5ElSeiyzD
UExYoQ9aFk2URS4K3HFUTRZJiiGL0VR5Fk1xjSqPLZLnFpdRNNUiW1Bj9KlU
bqk+oCrzlHJtZG4VttSDV0do5WGaLlxka5XYo+rKZn1te5Uz6DbXGdQ1IqWL
KnZCBdUpYl9yeTTX2IOq6EBb++iGDnqpFyVvIJaH6YIalMhXVN5SauwpM/Wq
bMMVNZO2ykF9eYvE1KaytJTZm8oq/VK1mSFRYo2momCgXFOfpA1k6oIwTZCg
DrNkITbHRcCashAV17GW62T7dWplItmYSFAlYaUpWDGwdmaxE64MkMG3k3tx
XBuEoknBKxNQ0liMPB5ffgM8gWLOJZqy0bo0uDqZ7kHJO2mVczznCs02X2CY
TNKPXdMNXdH0x6o6r6s7Mgx9SHM/xdRNqWijaKMkS4Slb6DbQ/yWPuP4tH9+
Kro42r4y3D3bFZ3rbFvq7dqZHL27Nn9/Z/n26szW3BCoygfDbfuDzYcjrXfH
2o/HgYg7QYUGRj6a7D6eGbw3N3o4N7Y/+93tTsb3F7aO1/fvb9++s37zYOMm
QBUAC6gB4ru7f3hne+/W6u7N5e3bqzfv7Rw93XsA+N2YWRvrGonWN3tstVW6
Slu5BURAKy4tKikXqYCOO0Pt88NAaasA8yd37j89fHB35w4Q987CVqO7UVOq
qdRU3lq+9fTO468ev35578mr+4///OLlm0cP7+7uPDw4+ZDqo929vfWd7aX1
9YX1zaXNndXdve3bB7t3b+8c39o8vH3z4f2jl8d3nu/t3F+Z2KmzB7GFlNMf
n3//Z7/88Y9OTsD6xclhqx+99aMf/ujH7/z0Z++9/fYv3nrr/Y8/upSdhbFX
hyItQ4Mjy8OT62MzW9PLexMLu31ji32j8519I82tXaHGk0/LMZsqdOUKrVpa
KuDJxSVKaalCIhaXlvB5xRQSGQ6Hx8fHgvYL+E1KiYXCs/DkQiIVhsLlwpE5
UFhmXn7qd50ZBs/FYAuJJBQaA8Vg4Tg8EgSFhkHys1NSE+Pir549e/rzzz/9
+OOPT536+KNTn336yenPPj/7+RfnLsXGXEmMjc2Mu15wPRmdkEZOzmalQvgZ
MM0NnDmTUg2h1RUU+WHFzegTfltxJVFCWSfT0M2vGVDVDehMfpHCSldXsqQO
OICXrc3mVECoykw4Lx7KikWVpIKiq/bwdH6+2scV2AhwYVIe+xqpLKewLBmm
zEOr0FQLpqS+UNGcLKw/S7ecR4jiUXwooQRBkWVRZfE0WXxxOVxuKq5wSTQu
cblLammscLRZAb9FJjzHjlUGaRWtbEMr29oucPWqq9u1lrAW+Lc66DB7dOUu
gciG5lgypb4cTbRAEcnRdCDAf3tjD10RwakiRGtPsbWbpwjg1U38irZSQ5fU
1KuoGtFWj1Xou2QSP6uiRWSJyswRsdbFUpqIFTaG1y/v7LLq6tNMwXxLhGBu
ZhubROWNYmEdm2pDYyqy8aYMii2Tak2nmtJpFRngFYmizmVVQ0rqEMoQsTxC
kTVg+Y58mj6VoE6Aia5AS68USmMQZQlwVUKBMi5PGpsjiy2qxWh6OZ41uX9b
WLOMtkylGUav64euq7tjlS0JZU0ZFe0ISzfV2sE0gJfTCNUeLrb6uc6QqKXT
NDzsmxmLLA63rQ51n9wmu6ttubt9fah3b3bszvLk/uLI1kz/7kDzVldorc23
2dFwqy90PBJ9Mt39fK4PUHx/qhsgvD/auTvUvjnYvjXcvTvWd7Cwdndt5+E2
QHjv/s3bj24fPbh9Ir797Vsge2s3txc3AbAb06vbcxt7C7ubs+uLo/MjHUPt
gdZIXSNIa0MLKNJAx93hzgaHD/Drs3v6mnvA77q3e/evL7/9y4tv3jx8+fr+
y0f7D4B57Vq7QW4YiA4AnB/dvn/v5h3wTb9++uzNo8eAX0Du7U1A7ura7NLS
zMLi1CLIwvTSytzG5vIuKM9AvoDfB3dfPXnw1aN7b+5sP16dudXU0FFcVBp/
NeEPv/ng3Z//4l2g4pMzKU8uUPjROz9/++33Tp06TyLy62pbegfmJ6a3phf3
x2d3R2d2JuZvjcxsdg3Nt/ZOhKI9vmCzpyHorvVUVlpNRp1Br1HJJZoyuVol
L1PK5TKJSFjCoNHRaHR6euoFUJ8vnknNSIIhc8h0JLuYVMTFs3k0BotEpKDR
uEIYMg8Kz4HCwZoHRxUgUIVINAyDQ4Ig0QgorCAXknMtLubSlYtnzgFmz5w+
A77iZZDT5y9diIu5nBQTkxkXD01IxiSm01LzijMLSnPghnRCVT7di6DXw+gB
GCuM4LagQKSd5PKeIn1PcWWv2NEp03hYUgtRU83SNVBKbFCWLpulzcWLb2RQ
zmdQLiAEN0RVZEOjyNwildcxaNqCAn58XnEcSZuDUCfD5ZlwWT5eW1DsypU1
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
enIZbD1D5iFIXFhtsKgyKlHVcYs0uCIVQVpDMYaLFR68KoBzjQuAZAUNORW9
lOCW1jjE0fYyLGPsqkl23RK3ZoYsaUrByuNRkmtUXZoyQLL1lug7ePIwVRKk
qJtZsgaysBoJmoYzKoqOGYGCTS6q0ZlWHYB7ovTaKL+mWWJvUlkjOkNIV2zj
kjRYhCKHYoYowgT7IKNqmGLqRYqCefz6LG5tOlBwsTubU53FsKSSKpLw2iS0
Kh5XAbjOY7kKGK58nh+laKcbWksrolxVBK8IQ8vbcky9eeaebH1rpsSTqPLk
WoNEb1QYalOFWsrDLbrWNnN/p2u837841rw+1bk10QWq8njY0+eyTfjdU0H3
dKh2OuSeCjlmwo6FFtdyR+1Ke8NaW8NCxDXVYJ31W9aaqrdbndvN1Ue9vput
NWsh20qjbaO5ZqPFuRSyT/mM64Ntq4NtG2M9e/MTh2vLd9bWbi2v7iyur06v
TA/ODLQOd0f6OoO9zZ42j6Xepqpq80eBagGtAGHgYuBfsP0dvABkAOxw+yDw
73enYoKde2v7tzcO7u89eLD3+M7mve2FvYHWUZumWi2qCNc1b87tAISBnV/e
f/760fMvn7w82rtzd/8QkHt37+7h3tHR/vHxwf17R0/uHT27s/9wf/fkI38O
D54Bfk/8u/NodefJ8NRuW/dctGsqGO4rU9tyIbgvzsT+8O1f/ujHv/3lbz89
d/FGVj6JwSuvsAY8oYH60EA4Ot7aM9/Wu9DcNQvIBQl2Tnn+wa+7scsT7nT5
W2xOr9nuslQ5tZoyo0FrNOpVKqVAIKBQaIUwVEZmbmZWXlx8QsKNFNCBQTHG
ENEUJpnCIhOLqFQuky0q5svEJUqZUCEFGzyJGDBbJBTwxFKBTMGXyosEJQRG
EYJAQpLRGBoOSyMiSfg8JCIVkpeUnZWQnR6XnRKTmxQDTYhDJSRTUyAiCFaP
YTioiOpCTB2K0IAiB1FFUSzglxVFUINZpPo0ojsZWxlLqbrBdecybGlkbSLL
ksGtSubXpBZXp9DM1zHqy6iyy1jNNZIhke/OE/qgRNP1bPFnebLPkboLqIoL
GMMlQlkcVZvE0KcwjTd4ttRSZ5bMlSOtziPL4ymSJI4qt8xONtYWqytZXDme
xC5gVmBVPlH9sNPVYxdXC0F/NjWp1A18pYcB5Ch1Y4xhdk2XvNzHZWrQFAUK
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
1HxEUKYyKnKFDrQ6VGTvU9RO6KtHNaYeqchLY9lQQge+MioN9uurw2K1jSTW
IMprc8qcmTpvvr2ZUNlCNjaSrVFu3UC5b9RgjJZqm9mGDnp5O1LdkVnWcV3Y
eFoRQpf6YDwnhFWZQ9WlYxVJaGkSXplO0eSwbQipl6xpYlV0cAw9XNMAzzzI
tXTyTR1sQzvZ1I1xjhPqZvDGzhyhMwYn/bhIdU1lhbm8/EhI3RkxDEQrJzrd
s52Ny73NK30t6/2texN99+aGD8Z71jvDiy31AN6bfU13x9ofTHXe6gsNOrVe
Kc3EQFqK0EEFG3RjUJLn6g3DlbIBi7heiG3XcAG8i0HblMfQY1W0m6U99rKh
ettEo2us0R2y6Wyy0pCjenlkcm95587GnZXJ9a5wb7XBpZXodRKducxs/cc5
0kGnH4y3je5gszfS19wD+P2uRU/1TYCJGGC7Pb95a3n3YH3/7vbhg4Pnd3Ye
7G8e31q7e2f74YPbr1ambzY4W5gEoYApc5jqgIJfPHj9n9/819+//k/A79++
+fu3b/785YuvXj198+Lpm1fPv/lH/vzqxd++fP1fb17914vnf3v65K+PH/35
7tHrm7uPppfujM/cauucqXI0qZVVfLYalk26+nny2//83jvf//W7b//xiz9d
g0JofJ6uTFVjMvsj4f5wZKglOtbRPdc7tDowvgUsDBAemd8fmrs5NL01NLMx
NLXaN77Q3jcWae8PNTYEg36fz1PjchpNFrFEgcNT0rMgV2OTL11NuJZwAwJD
FfEEkrKyEpmMxedzSvkEJqUQh4QTsBROEVskKBIWk9kspoDPFpWwS0qZfCGF
zSWzODRuMUsoYonYdD6DyCKf8EvEFRIwIFACJhWenQhPS0DdSCGl5xTnIpVw
nAFNtGCR9gKYNQ9my8I68+gBGK8JyY3AikI5NF863pmItsdi7Nfx9hv4yhRy
VSatJgdn+wxn+RyEXHWB6Yrj1CaxXEms6iSi8QpedxGnvUCouETSXcJrzhK0
58j680WmGzT9VZEr0dgCt7ZRbK08WxNf20DQBqBV7ajgWHHjmLqqUSIxUQU6
jMxGUDXz/PNVlu5yXhWVYcApPfxiC4leni8ww0SVULUXa47QfaD3hjhIYRKc
n0hWJAF+FT64vZdSWg9eYc4b+qF1iwzrON40jJU0Z1GqL9Pdl5Xt6aquNG7D
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
TFUESfIAUVXHL7HRaGokVppXWJIBXiRJBrTAU2Tu1VSPmr1zVZ5Ze/WIwdKr
NnWXWbpVqjaBookj8BCY9nxeZb64Bia1Q0S6dFMVqqaG6K1hhpz8Lq9qOGQe
9Jk7HdqIvszCoRqLCEGNZNhj32hvvDPcdTjSvRDxeGU8G4s4WGO6P9H3dG7o
eKzr7mjnm9neJ6Ot9/qbjvojd/qabvZEwIx8c6D15nDHxkDbUl/r5njv8fr8
y6PdN8f7L45ufvvg4N7GwvbU0PJQ9+JA5/ro4NJw30BTo9ugKyvmNdjtO3Nz
6xPTvU0tEz19N5dWVqYXbm/sPbjz8Pj2w73d4+3Nu2urh4sLtw9uv1yav11d
GXBZA2VCbSlDrBNqm93hgKepLdIz3Ds9M7ayNL29Mru7PHNzYXxrdmS9Izxk
UtdwKCIxW9lY27K/dvT31//r79/+7ZvX3755/iXQ8fOHX96/8/zo1pO7e09B
D99Y3F+Y2ujrGDFqrNlpORfPXEpLSrVqtCaVGqyyYj4yNy8/Lb0gPSPpytXP
//DHzz74A1jPnvro3Ecff/r7Dz54971f/fgn//HWD3749n+8/c5bP/35zz48
9af0zIwSkbjGWeeu9TX4w8FQc319xOtt9Pubg8FoQ0NLfWNjbUODsbKSLRBA
4PDU7Ow8GAxLJpOZTLCHxeeDeRZNJFJZLI5QCPZgqBSmgA+CIpMKMGjwkMQq
IjAZuQh4RkF+YmbGtRvJVxITLidcv3Q9HuTz2I/PxJ++khyXmpsPRdEIZAGV
ISYXCcgcNpyKOLmPYgkkn5+GVuTClTmx5LOXCZ+nsGOgskyMOh+jzEeIs+Gl
WajSbJw8FyXLREhSCkrj8kqv5MuvADvjTIk83xWs6RTHG6vtRZaE84mOG5jK
VLgxBW5MRVszMbZMqDY+RfRZPPe3Sbzfppf+MUN7ltl0Xj72ibD3t7zGK0If
nmOj4FVx+ZJ/p1n/r7LQR6WOZJEZr3LRBLZrbNt7UOWvkOWnYKrTFEuaNEDj
OMg4DYxpI4q8dHWYKWlAcKpvCFxJ0oaUsmC6PgpRNuWaulj2fqF9BAOc23VE
j97kumbz9UOfe9euK1svlwYSaI5TbM8feJ5zJd7s8roUdV2ywhMv88SIfZfE
/nPi0BlJ02lZ21ll5wVN92Vt11Vt+5Xy1iua6BVtS4zYAFNX4S0NrKrGYmM9
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
CAoICihgBEUEMYGoKGJWUBAVc8Ccc86u5Mpr593hnHPvqXr3Ddtbp+qvUYPB
xHKt8pv//885mTNL5cJv9yjo8srVunDbbOl1D2nK+wyVeWabk6jbt0DrnVZl
nVB4U1CCBxLJSMU11CJFEk+CpueGJ2dBihtSKjSsgjpSqhhOF0XSiiKThVBK
YRiFH56UC03ih6VKkdnKxMLWFHEnU6Jn5zaTuSo8swqVWhmbXoO6up9AI1HQ
lMipSWLLCCmS2KQCGK0gnCOGC8pixeXo7CxoYU50eT6uoZhhqMqbaK5Y0NSv
djbtDHYt6ZrGGiq7ygpai7KN1dJRtVxfUdhfU7LY1bje2z7ZUj1cWzbVXA1g
n+9QrekaQCPe6G7a6uvY6Gmb16onW+sm2urGWlWr/d27k8O7U6MHsxMXa0sv
ttefbqyALH24YDqYNwGopw1dC/09AN7V8ZH1iYnj1ZWdubnF4bHZ/qHBTt2Y
wXi8vn26tjvdPzbYZZwcMI32TbSqO5WKlma1vrtzZGRgbnRw3qAdGtCPD3QO
d7caWGRWsUghLaoC23R1DPZ1Txi6Rvt7pk2jq2NDSzur56+e/Pj66U8nuy+3
V86AyV4cvv3w9iegy2cfrr5ktAt0OTe1rW0d5rKKoiMJD+86fPyHr//0+6/+
7dcfA4Q//fONj3/757s37t38/NbXn35jZ2HvZu8ORgcrxwc3H17r4a1Hlvet
bM3trB/ZmN+1uHP30b37IFk/+PSzr377uz/+7vd/+uLLbx4+soyMiiEn0fiC
QmlJhaS4rFBULCqSgkl2Pp/JzSCnUImUJBKNAoRLJCCxaGhUBJ6c+M8rJ+Nj
MKiEJBKYJ1KTgcmC2AxoZXA5wHYBqr7/fEY4IBedSLwG+ZpiYM0gVPtFBPqG
BXlDQnwgMMBvZCwhDk/GJifiGfEJ6bGEbDhNHJPbmCTtYaarsGEZTqHch1F5
j1FFLmiRS3SufRjLIoB61y/plg/pRjDjXiTXAkRZBN8SkW8RW2SFLrYhioNI
Jd4YsTlNZSYZ9xIMOuKrb8VIHuBK/Qhl0YRSDFYEj8nzii2wJlSY0dUWRJVt
usEid+xGpvGLlIaHicV+6JygaK5lePr/Syz5l+wWM5rUFZXhi+Z5x2XfIxZ/
RlI+xJbfItfY0lSeZLkXtwVZPpxW3s8SdSZn1MaSRP6MUmhJJ7m6P62qJ1Vp
ZJUPYuVDqXWT7LYNQvsetHrOL1fjSVVY8nWO9YvR+dqodFCoCx+QKz/PaDYr
0AWV6cIkHcEFrT757d7CTp/8Tk9eixOoydRqs6TKB1SFObfBWdgZLNQEZ9S4
JUksJeXJohKSqIxcLKcC8aV4jjCWxUdI6xiKNo6kLiVDgmKKECkCGIEXhOcE
UHMg1LzQVGEEtxx19dzSVqqwOTmnHk+RhCUVhSaLoaDkcqvj8tR4gTqBX4/n
ySkZpQRmEZpdFJdZjMkvi5fKCDI5qbgQI8pGSjPRDeLU4XrJvKZ2vq12Uq3o
q5YOqSoG68pbirLL2ckKHr0mO01CJ4ARrB9N9F0umy5mh8HkdGrg6fzo07nh
48mrM8Wb/dqZDnWnrKgykyVikKtyuTX5Obpq2dJA79H89PHi/MnSwtONtZPl
GQAv8N/dmTFQfrdMozuzU8ujQ4tDQ0crK+uTkyZDH+i/2/PLi2OTM4Oj/S1d
VaLSkmyRuqIOOKxEUFaQJS6X1JSIqw1dI736MdPwwmj/1PL0mmlwWlmham00
VJY3SAoVFSWqhrpOnWZodHBxcXZvf/v52dHbV8/++u7lv79+/renp9+fHb4/
Pfjw6sV3r1/8+PTs3fH+JYB3dfGoRd0H4LWz8n101/nTj+9+9Nsbn/zp1qcf
3/ry03tmD2ydbLx83SFgtDZzBpMgH5ibg5+rva/ZXVurh4425i62Fq6O1p5g
xeGxh+UDBwsLexsbF3t798ePne7ds/zm5j3A8v0HFhaWNq5uXpFRCBI5mclK
z+DwuJm8zOwsOpsJmI0nEQGbKaw0GhMU3oSIGAQsGh6OiAIgA3Lj4rFgjiHg
eXk5AFsQmAGwoQg4mAALBqiCzAxABhOAMFgBugYZKBp/dcFVJBqYMhAuIg6P
wMUjiXHYlGhcejg+C5JaDi/pYShGM9gqZDjXDpHvGSvyxRT5xwp8YBnOvsnm
rtg7DrFfO6Nv+ZIfhbLsInkuoPxGZDtG8p2ihW7EQhj56hFdD0lVN6Umh/J5
J5b2HrHqUaLMh1iKiC+MQ+ZEwDPdkXmWhJJ7tJrbSWozTs89/uiXHMOfk2tv
J4jc4nheMOYDWPq/xkt+ndVixaz0IReGJxWFYYVWieU3Od2u+Kp7WPk9UrVN
Uo0zrx34aXxOK1LQjslWI9MVEcJmfPN4bpupoNrArtDSS3qR8gGKeorZvoFp
2fKWm1wymx0p5VZSY2DjQkJ+KzpdgUTl3ccW/Zau/LxA5yrVBYk6fHOb3Xn1
Duxam7Sax/QaK3qNdWaLJ6fRg6v2yGkOBLW6SBMpaA7Lrg2srMkok6eVylLl
1elyZUaZIlUio4krqGVKVnUzT1rDyBbHc0QYVn4MOQNCYAbSsiGMvDC2CM4r
jePXEAobyCBjZ8jiaOIwIHoxLL0MkaWIy6vB5Fajcyvj8sqpXDExQxifIyEU
lpKKSohF4nhJIa5MiBfz4kq4uNZi9mSzbLWrcb6ldlwpV2SndpTlj7VUD6pl
zZKcWkG6jJeSR0ZVZjEM1cW7Y4Z3Owvvdxcv12bebC38fLr93dH6q635k7mR
1YHOHpW8lJdKj4vChvgmw8MTYVAeKUFTKV/qN+6YJi5Wlr8/Pfvu/OD1wear
/Y1nm6tHCzNHC3O7c9PzAwMzfX2mnp7x7u6FodGt6TlArr6prU1ZL8sVSjl8
CZdfWVCqKlOqymsrJQppQYVMWtNU1yHMLW6sbe/vHt5a2VuYWjGNTGlajaqa
jnJpXVlxbW1VW6dmcGRoftq0uTR/sLp0fLD76uXzv37/4f/78Pa/Xjz528XJ
jy+f/QD0/OLbk4PXa4unnW0jDArfwzn8y08s7t9yMrvn8tjM09UxyMsNEuAT
AYfhEnCpeCwjIgzn4wkL9ENAgmJ9vSLcXSCP7jtZW3o62vm7OgUH+MLhEQnR
UcTwUExQEBwKjY2MxEZEoIKDozw9A52cvOwdXO/eewRkaWXt6e0Fi4zA4NCk
pEQanZpIJeMS8VhiPJgw0tNSWAzwMiIGkBsHiYD6QwJh0ZF4MoFESwLrMZhY
CouZzEwDYAJvBW03NgEPmIVj0CFRwINjwUvwFuA3gUpJpKcAgybSUxJoKdgk
ChKfFIUmhMeiwlDwcEwoIikIzfLH5/pxauCywZTiXnJiqV9ohnlkTlBUbjA8
Oyg83c+f6uaKs7ZDPHoccc8Vbe1PcoWm+cIyAqEsnxCmVyjHJyI7MD4nnFAY
hCu0JJTfyDbcL5myEQxYpzXbAq+MF4fGZIVHMAMjmM4x2VZ40T1y2c3U1kf5
w2aiiW9Y2j+S5F8nFrvH5/nB2WZRnD/FF/0R1M8MJYRREQuCJUXmxai1LZqC
UVpssZX3E5VWKWrn1AY3Ro0HqcQxvx0h6cRKNHiZjtIylt08mlPelpxfg5UN
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
/sxtsEqrtMlQOhe2Bks1UcVNMbI2Ym1HqkJNL6+miYoTpSWUSgWzqpqtrEuv
rEoVivDDOt2IXj/e0zPV378wPAw0O9A/1dc7PzQ4bewZ03eaevRrprGT9cXT
jaXdhamNqcmdudn9xYW95cX91eWdpYW5scEBXcdIT9fMUO/sYM+4XmPSaeZ6
uyY6W7uVlcb6MoOyuLOyUCsX9iiLR5orpztqZ7Wq7QHtRl/7Zm/7Vl/HpqF1
ob1uRFnaW1HYXMjrVYjntfWbxo71vo613va98b6ny9Mf9td/eXr8Hy+f/vLs
9M3+9uny/Mb48LzRMNzeXC3kJ0VHhro4+NlYhjjZpWHj2mSlJ4uzgN9rhC9W
F/enJgC8R7NTz7c2Lne2Xu5uXz2HZXPzcH5+fmBwsL1jXGfYml54un2wNjGn
lFSwSIz89NyO2paGMlmzTN5eVd2jVo9ptTPdetCp9coaWV5OGg5XLSoS87L5
bG4BNzefl5tCSklGk3i0jLrSalGWwM3a/vOP/mh1776bg4PDYxsfd9+QQBgc
hmUy8pvVA/PTJzsbb0+Pv3/+9G+vX/7HlV794+2bf7y8/AUEh6dPvr04v9LZ
6bfg912YO56e3J+bOVpZeT4zc2IyHQwObuh0cwbDYl/fSmfnjF4/39Y20d5u
6uiYbGoaaWwcrqszlpS0yau0AGF1U1+d2lBR2QL4lZQqpeXK4vIqoaQ0WyDk
5OSwM7mAX2paSjKDmpxGItLwKAISYBsKDw6JDIREBQFm4egIgDOYgEXAL3gX
4ByXEHN9hBnYLui5wIUBwuAl4Bc0YlCEAd1g5frr/FdfBCYlxmAw4K3wOHgY
KiIEFRSI8wxNcopkOyaV+Up6MaWDmFSlDzLPMoJjGcW1R+V5x+a6RmTYhqVZ
RGfYJgjcqcV+bHlIpjKMWRGAzbaBs83i+Y4UqV+ixDe+0JMo8U2pdsluheVp
8LmtKbwGJkGM8UlytkF+jchxjMm18iR+bI/4NzfkVzbBXztDrBMziKJh5/QW
M1zxDWTeHQTHwo/wwB//GMUJjE33ieW6x2S6JIr9slti+Z2YHC2ywICmNaIL
h+nymdSCXoTQEILM/hSXd6NMF1HXH1/aFl3UECbTRdYMhVf0u8rH7Ns2vNo2
Yrq2UjWrGa0rCbIxn5L+4OrR5LwWWHFfYGazHbfeL6shTGwILui2piq+ZCrt
6RU2vBrPotZwSWN0QXV0SS2hUkWTlpLkMmZBXgI/GycVJVdVMBtqeTWVqUI+
aryn39Q3OD0wMjc8vjRiWhwemzEOmgx900bjeHf3cCfgt2dzeup8c+Nia/Nw
eel0aeVsbf18feN0ff1kbXVvYX52eNCoaQWwb02bDudn10cHgdOt9fct6nVj
TY0D6vLuanF7Gb+tOKeromCovhzYK4B3pbt5Sde42NUA+u9SVz3QvKZ2urVK
X1YwWFOyoKnfHejcG9bvjXSfz4y83lh8vbXy3eH29yf7bw92LrfXL3c2Xu9f
2eizteWx9pY8Chnu6eJlcT/QzpJDxA40q47mJ1/vbXw43n1/tAP0fHP5fGXu
cnsV8PtkffXpxtrZysq0waAUiYCTsonkDFJylUhqbNUOtOtbFarakipNXeuo
fnCmv39+aGhpeHh1bGzLNL45Pjxj6BpsUmsUFUphASC6skAIsnR6cgqPzmYl
0TmkVHl+iTA9Oz4iOsLf38fBwcnSPMDDzfLuPVsLKx93v9goXCotp1Tc0KOb
X118frD37vz0R2C+b17/+/t3V7fKefP6ry9efH95+cPzZ99fnL8/PnqzvfV8
dflibeXp9ubLre1XyytPFhbPpqYPhobXR8e2xid2evsWBwZXwU6ouWVYozV1
dk3pu2c7NBM1ym5guw3Nxo7OsTbNkKqhW17dUiZXl1fWl8hqpBUKcWlFgVia
U1CQnsWjMVOvzvwmodDEmGhsBAwJCYUHhkT6B0f4BcF8wQQSFQBWwqKDwVtR
qLAYXGRcAuL69O61ALnAf6+POQNskfj46yJ87dGAbtCRYdFwaHREWBwsHBMG
wQVAiO4RDNe4HNf0eqikH8PXRcYJHwemfBNAfQBh2EQw3RHsoEiGLyzFE5Hm
HcvyRbE8UWx3bLp7DN3BB3XLOfIz//iHUalOMemeKJ4/Ph+KL7FhN4TkaDC5
HeSslhSCNNY72d4aedM14XZomnkA5ZYf8WYg4YE99CuPKPO0wgTRqENq072Y
ws+ism7BuY8hFMsIhjO9OAaR5hGf55ck9k+tCsxsCeU0BqQ3BfB1EYlKaI4B
UzaRkNMZlNnqGs37E7nwbnUPqmEgubQFU9yErOhEFmn8+B1W5aPWHbvedYuQ
llVKxzqvfSOlbCRU0htV0ktKlDrwdU4gt4v7AvM7Q/M63dlNd+OLv0yp9OA3
BPFVIQWq8OxyaHp+CF8cKy1NKhQQS0Q0DgPJSooUcLByCa2xmlNTTs3jRA13
9Y/q+yf7RuaGTAsjU3MD4yZD/7C2e6LbOK7vm+rtX5+YOl3dAPUQMHuwsHi+
vHK2tHyytHS6vHywsLA5NTE30Deu7wTjztT4VVidHN8avnri9vZA31q3ztRa
3V9b0lGSV5+frshMkWdQlNmpjQWcdknOgLJkXlu31tO80de6Pdi2P6o9HO3c
7m0Fdnx1DTOAd1C33X/1Xf5Xq3Mfdjfebq+/2Fh+uroEKu37w4P3x4cA4cu1
pc0ho7aipJhJzyLgOAmYylzehKblcHb8cmv5zd76673190fbr3bXnm8uvTvc
+nByBMwX6Hx1daClhZtIDnVz97a287Gxj/ILpqIJAiavWlTRrmw2NHf1tOhm
R4ZXJ68iB+ii25NjG2NDi336yc62qa72aZ120djXWFqaS0+j44jkODwhGiPl
8Nl4MgoSFubhGejsBHF3iQryiwkLDvR0C/X1QyFimbQMQWaxVFTX2jBoGt5Z
X322u/3q/PQHkJw/vP/P7777jw8f/vHu3S8fPvzt9eufnz4FDR609hcgQoPN
AOzrG88Xl86A5hdOJqf2ZueOgAaHVoG6dFM6/bShZ07bCRCe1HfPgEl9i7FF
O6TpHgdq6jBW12vLqhqLZbWi0spigHBltaisIlckTs/NSWamAQ8NjwmBIoIA
qtfAXk8AwkBgfg1vRGwo4BeBgSHjo0Akvr424zo2X182+d+ODCI0CNJAwIsB
y+HImJCIEEgkBBIDgaKDITjfkES3KKYzWuCap40VGpAUhYdvyhcO2D97Eu4G
UuzCGV4win94sh+M4htB8QpLdA7CWgWgzUKwZqHxZs6wzx8HfuQI+8wX+zCE
ZBtJd0WyvRGCByRQJ1UhDBWMUYfAioP8Uqyd8HetYr7wTbaM4rjgcn1jOa6e
qJsBuHtpYphozCat9R4i/7OQ9C/D2A+DaY8AwiiuVxjVliDwTZUHsZXeabVO
yQozRq0tMNwMbVR2d2TxSDS31SVFcR+e/m+MUguFLra+j1bSRChuSihqRqbX
OLNVD4oHH9evu8invBoWE5sXueo5mrQ/UtKDFuvImAJLkdFRMmJZOuqV2eqc
qnpAqf4CX3wnvTZCpscIaqFsiR+F50FK9WDzIoSChPxMQi4LR8VCk+MCucmR
xdn4aklymQDHoQQOaPqAy0z3TyyNza2aFhdHZ2eMo2M64/zgxMLQ+Lpp9nBh
7cnG3tPNfdAQT1bWn6wsH87OHMxMHy3M7c9Or44MLA70rgz3gzS7NTG0PT60
PzFyYho9NY0ejw8fDg8ANhc6VWMNcl15gYJLy8Ej0hDBqfAgQWJsiygT8LvV
377e17RhbD4Y01zM9ryaG35q6jsd69nr1063KLvLi3RlooFa+faw8Xhq/Nny
4sut9bf7e9+dHH97fPJmb//58vyThZnd0cGVXv1yj266s3VK27I2YDhbmgb8
Pt9YfLox9+Zg7e3h+rujjV+eH/309OK7s6ujW6/391dHRqryhehQqLvFY8d7
5rZ3HrqY2cC8g5KQCVl0TkVBSbNCPTU4sDo9tbM4vzE1Af6lsz2dc4bOxZ7O
VaPhYmHGpNWoisQZhEQ0JCLKD4IMhrGwiV5mNt6WNgF2drc//sj2ztcYWEg0
xB+LgCViUCwKg88TSApkMklDXZW+vXF0cGhtwrSzsnp+dPL2xcuf3r7/+/vv
/v7tD//+4ft/vHr70/mT9/uHlzt7L3Z2X+7uvdnde7uyfArqy7WmJrfn5w6A
hoeWR4ZX9DpTt36yt2dGqxnVdIwYuqd6DNMNbcbG9v6mjoFmDRiNtU1d5dVN
RWXVOcISoVQmKpPxxVIuv4DB4RGoKTE4vC/EwzvYzTPQBYz+UC/gvECB4T7X
FgzQBrqmGPAbi4dfN9/r00NA15dDA6ivqi6VArwYpGVoNAIIAo8KioAFhf8z
kMdCYLgQaIJvKNkFnuGCE3rkdcZwmiExAjMn/B8dcZ/5ksyDKa7hdL9wijuM
4h5BdQsn2wdiH/jE3PCP+zos4XY0xSw04aZf3Ge+6C+CCbdgKRaINLtotkNE
7kO0xA4jtUVJ7fEy91ixU2C6hRfFzJ1o4ZfsEJsVTC9BEgWBUMqDaOYDdrlP
Tv/91La7MUWfh/G+Qefbo/ku0BRzv4R7YbTHiUJvZqVfapVDUvktXPEnNOX9
4sFg0UhMTndw2QSM3+VCk99E8n7HkduL1OHVWoqoNqGwLiG3BkGR2tGrHgiN
liUmS/Gwfe0cXjGWIjXi87siRHpcYWdyvNimcMCmYPCbXMN9suJrQsVnyTVf
kcqtMhviSzrQTIk3IcOBkOpCpvuw2ZE5HExWKpaGhuLDvRMjfVl4aDY1QshC
5DBCaVjn4a4BU+/Y4ujc1uz63uLW9tz6yujcXL9pZ3YFaH9u7Xhp43Rl62x1
+2J999nWwavtrbPFBeCz5ysLh/NX/K6OGg/mTccLU1tjg+uDPfvjQxczpicz
prOJ0ePRgaPx7oNR3c6gBkTlbllhSSoxPRZKjwyghvtW8VImWxTL+gZTi2y8
qXTFoDoc176cHXo2aTwb7VnXN+ul+YVkHDsmPAMFFyYRWySF8/ou0GSPZmdO
FxeerW+82tk9nzadAsfv710zGo6nxi7mp46mx05mJ7ZGjNsT/atD3UuDut3p
oZMlEwD5/fEmIBfw+/35+XdnZy+2t6e7e/KZrHBPH5eHVlbf3LW+9dDDysHT
ytnTxhX8eQo5giGDHvB7urVxtLK4PDowqWsf1zRNtDeCvcSPx/tzBl29WIIJ
CXV+YOlv55Ych/d4+Nj2xu07f/jjl7/5zTe/+zezLz9xtbzn72IH+KXE49hU
Oo+ZWZBVXF5ULy9uLhU2NjUPAZccHlldWTs9Pn3z/PKHN+9/+fD93968/+nF
q+9Pz9/uHbzY3b/cPwDwvgHheW31dH5uD8SB2ZmdSdPGVS6Y3R0aXJgYX+vq
HO1oH9TrxoG69RO9PVO6rjHAb12TQdnQpWrubmzvU7cZFKp2qbyOxxfzi0oL
iiuyhUWsrFwqKyM+iQJHYwG5bn6OTl62zt527v5OPiHugGggwHJAmPc1zsCL
AcIgY4OkfX3wGWB7Dex1+b22cjABXAPnDUXAgyMj/MOg3iHB4dFhkXHhcDwM
SYYhKMFwhg8614dc6sdpDqdUe0J5t1wIH/tQ7oQyHEOpnlCqfxTdOYruCE+x
C0sy88d+5Rv3lzDil2jmw6RcW1K2NY5jFsu+j+KYE/n2xHwnfJ59dMHjuCKb
yIIHMMFdVMnjOKkNJPORX5oljOsbQPWM4UKpUjSBHxDNtiQVWOeofFM1n1Kb
bqCkN1Aic24jLL8DmyTxgyQ/hDPtksV+zEofmtwiofhTVNHv6LW3y8cCpeOI
TJ1X5Wxk2ah/ev19vODjzConbplvRQuJL4/Pq4zPuHoimA296hG/x4rfd0fQ
a141hREbCFktUSCH52txQi0lsdSep73DbP9Nct1vo4W/wUh/T1HeSCyzYVWj
c6ugCRwbJMWcxPJIy4ByMmK4qbFpxCgc1Bsd7Ar4TUMHM7H+rAS/NLxnIsJ6
RD80OzR99fie3dPDtb2FsdnJ/vGZoYmrWyKv7RxvXOl85+D54SnQk72jf15z
OHMwN7U7PbE5MbI+NgScF0yAN5l0momuDkA02OBkaQ5sszdj2hzuOZ+bABl4
rl01XCXtFGbVspIqUxI6+OmGEv5YvQw0Yq280NAgmx/Sbc4O7S3P7i/N7C5M
LQ4bB1oatFUyeV5WGjYO7u0e4+eVEhetyM8d03VszowfLM8erM4fz48D7U4O
AlTXhg3rIz1T2qZOeXFdQVajKE+Vn6XIYtcXZI+oq3eGes5nxp6tjbw/mP/+
bOPN4frJ6txYj06cm4eKRDjbONuY2T66bWbzwNrLzsPbziPIyTc2OKpWXrxo
GtqcMy2NGbV1MoUgU6so7ZCVLPf3vtnZW+oflOcVoiEIN3NniHsY1Cvi7pdW
33zy6PbnZjc/e/DJ7z//7I+f3/nimzuffeVoZhbl65uOjy/npKsL8jul0p6K
sn5ZRbVEXl2saKxqWpzdXl87W9t8vrz14vu//59nH/7r/NXfz178vHX47OD4
6enJk421zdPDo42V0/Hh5RnT+voy2IluTY2vjg7OaduM/T2mHt1oZ0eftr3X
oBsy9oz16Ic1bd3q5rbG1o76ptbqOnV1naquoVFZr5ZX1wgKhXkF+dn8vPTM
jGQ6BYkBjhgaAAl0dHNwcLV3dLF1crVxc7f39LT38rIDgkA8/QNdPH0cPfxc
/EK9Q+CQsNiI8LhI8MFYbByWGE9MoRAYKTg6FcegxbMYmFRaHDURQcRFYGOg
SFhwVEhguJ9fqKdtyGNvpGtgvDOU7Bib4YbP86QUB3LqkJy6ODTfN4hqG0Cz
DWU6Q1iOoWx7GM8RmeSIotnDk+8EJPwrhPY/sMLf0JS/p6t+w2j81yTlvxDK
fo0Xf5RQ+BVB8JCYZ0PMtQc/EJX3AJn/MUbyF4z0IYLvGsT08kqxg2RZB3Du
xpcFoIWRMVkITH44Mu8xU21HqoNFVzzENn7EGv2UO3aLbbBltXqxan1iM25R
BQ4FCgy/jJKSi+Yo4GJjQF7v7eJhn8I+H6E+uEgXxa4KAPsNmsSZJramFT+g
l9+R6Fx4TRYslZmoJ5Db4pVS7ZLXxZTP0pntbuxWX2p1RGYLKacjJrHiDq/V
kSbzJhYExXLtaGVWWQ0OSWJ7Yl4Qq+QxKfs+lvkoKcM1lRdKTQsnkUJJeCgC
6oKBuScjA7iJ8FxybEpkIDnUnxMHXzEtbc6uH6zsHa3vr8+sTA1MTPSNAn4P
VrfPtsGfzgnA9sXR2eXxOYAXsHyxtnK+uny2snSytHAwN7M5MbY4YJw26I1N
DT1q1UBL00J/3+70JIjWO1OmLdP41kjvzphxvU8719EwoZLrJHntfE6PJHdQ
VjjXXLOqb17oapzQqmeN7Vtzw+e7i88Otl4cbL082nmytQp2ESCZT+o0+toq
WW4moBgV7J+KjVOXSRZH+0/WF8+2V59tzj/fmL9YmT6cHQUUz/dq2koL86kE
lJ9bjJcTws0+ysUW7mpHggbIOamjDTXrg+3Hc8an65OnK1M7s2BPZeyoVwGf
T45PxMfgIgJhIR5BIZ6B/k7eUPdAfASqs6l2Y3ZiZ35ixqhTFuVlkuNLeUxQ
sSc7O0AMmDX0NkhlGYkMfAQWH5UQ6AKxN3e3uGNvfsf2/tfmX/zpxhcfXX2/
7/M/fPTFb39rf/cu0s+Xh8cps3m98oqhmqq+8rLyvOJqSaU4R9rbOdrdZeru
nZtbfrJ19O3J878fP/vl5NnPmzvPDg6en52+2FzZOtjeB/xOjq1Nja8vz+/N
TW2ODy8O9k3rNIO9+rGOlt4mtbatWd/dNdjbPaLvHNC09QByAcLK+kZZlbJM
XlVeqZCWVwjFEkBuZm4Om8tJTqHF4VAh4RBPPy9XLzdrh8dAdg7WDs42Lq62
Hh5X8Hp72/v7O/uC/xR/R28/Z+9Ad/9QP4BweGxELBYJ+MUQcHgKGZ+SjKEl
Y+nUBCYDn0ZHp5CjE7EwDDwUGRYcFXR9HMwP5QFLCoii+UUxPNA8z8QC/9SK
cEEbkV0dRy6OjMn0C01zDWO5R2Z6RPBcoekOGBokkugGwT2KoN0ni60zG52y
Wh+nqW9Saj4lyT/BSz5B5X0BZ38dmXIvkmYVnWKPyvSAsW6Gpv8rUvgntOQR
LMvBk2Jnn3Dfk3E7jG+GLfGGZwcG0339KXZQ9k1ajXlibSBeZUbq+Di5+zck
7R8pbWbUOrf4QnsY7ev4DMvs0uhCRQq3OCFHFVU86C0auSns9xT3Bxb1hOW1
htLLfOglPlk1oelyD7LoAanohqDdMV/rnNPmLOwOTG/wSlV55+noxeMJSfWW
tHpnahU0T5PEaw2PE32S1+maVOaKyfZCZ9mnKuy49TZEoRVFFJpWZpeQdT8u
9X4C24nKC0piQglJIQkJQQRcADbGnYT2ZSeGpcWHkuH+VERQOg6+s7B1rY3Z
1fnRmelB09LE/M7i+tH67tP90zfnz949eQH0+uzpxe7hwermyerS8cri4dL8
/sLs1rRpftA4pGnTq+t09bU9TerRLs3y6NDu3DQQeHdzamLHNLQ61DPX1TrT
0TikrKjlMspoCQ3ZzM6inIX2uk2jZnNIfzg/drA0cbQ68/p8992T47cXR98+
PflwfnS5swGs/HBu6nhhZmXI2CYrFTLp5Tm8wY7mo9X554fbT/c3X+6svtpd
A+PL7RVQeHcnh3U1FeI0KtThseudGw5ffep+52u32zc8790khPjLeeyZrrrt
Mf35yvj56vTJ8sz+4tz69PTc6Fh3m6ZN1VRRKM1jZ3Ioaan4JC45pSynYNyg
3Z4b354Zm+3rVBbmZiSgCulJldkZ09q2+R7DhLazV91cJ5FVFVaU8UsJiIQk
DBUFw0YFwwPdA+we2Zjdun/vy6++/MMfPv3Nr21vfh3h5kyPjqzOzBiokhsr
yuqzMlIwSXQsFQlBVxQpS4pUFWVtpqnjqbknO0c/7Rz9cHT+887u6+OjNxcn
bzeX9w82jkFrAfxOjKzMTm5NT6z194Dd25BeO9zVMVCv7KiSNQKEAb/AgoER
A5Zr1U0A3sqaupKKyiJpmVAszc0v4GbnZPMFvJzsVDYrnkiARsA8fD0dXB1t
newePTY3t7awsDG3sbd0dHrs4mbt6Wl7jbCfnxOwYN9AZ4CwT5BHcEQADAmN
Q8fEoKOROCSKiEOREmIT8ShKYnwaFc+koVMSAb8RWMBvKOTqxFMgFBEQRvJB
sUMxnCBkuieK64HOdicXBXHrsFe3Ha5PZijwOGFETG5wnCAInu0RQLeKTkLC
CNAoanCSEC5oThB3x2e2BFMVdvDcLxG530RybwYmf+WC/Nwh4oY7/JFfnB2C
5e5H+tKH8utowV9QYrNgtoUt7o557Kd2iX9ClVjHSa6ejOlOtLKN+yKU/UVK
7SN6kyez0zq151N866/ilP8zqcGcXOkWxbaAkG7Ckx8w+CHCyiS+ApetDhD0
PBSM/iFX71nQGyjsDk+t9k0QOjFlEH4DPEsZRCu2wRfc4jXYFxn8RD3BRb2w
3E6YQBcjMCQXDEYnKG6TaixTVZDSYUZeFwwt/kSgcyWKrWM4dthcW7bSIb3W
Kl7wiFoUwq72xAsso9LuI5m28RzvBFYggRGcyAjh5iJxeBcMxpFM8MKjXElo
7wwKnEeLvb4b6vzI7LXzAn4ByKdbByeb+y+OLj48e/nt81fvn17+N797C/NA
27Mz65Om+aHBMb2ur7VF36AGk2lj3+rE+C6oZ//cYHP66mTx3vTE1sTQcr9h
trOtt6pMmpLIQkCzUZHSFMKgsmLF0L5vGnx/svP6aPt4c+HNk6PvXpx/+/zs
A6D4ZP9ic2VtdHB1uP90ae7J2tLu1Diw463p8afba+8vjgDpr88OALyv/3mQ
+e3B5rcnu69317bGB0ba1GWcNBoiHO7uGOXmgHBzjHZ3SoGHl7DoRlXpnK5x
f7L/dNF0vjYPftSz3Z2LnZ1n+4enm9tL46Zhrc7Q2NJeVa2tqhlp1ywMdK+M
9K2P9q8M9fTWV1XlcoFapIVLPbr+BtVoe8d8X/+IpttkuDoG2Frd1N3UVV+u
LM+X5rJ4JBQuBgIN8fBws7TwsjZHB/uycEgxg6KVFk41qfoqJOV0cqxflKeF
u7OZG4eax6LmC3Kq9fpl0+T5/MLlzOyzjY13O5vvjvbe769fzo9v7q89mZnc
Mo2tXd9AYGx4Wd810trco2nvb2kyyMrrS6VKtUqr6xzQdvQ11Gtqa1qqqlWV
itqy8kpJcVmBUJyTm5/B4aWmsbi8LA43M4VBR8bF+vr7OTo72djZPraxumf+
6IGludlj88c2FtcIu7nZeHva+vs6gFASGOQSGOgaEOQaBPGCwvwj4MEIZERE
dHhkDAyOgkego2GY6KgEVFxyAhAyCYtIREXiEOGo8PC4UBgKEoWGRKV44LMg
xLwQYL7IDJfINHskx40sjhK0sIp1fKlBmNfKSa1OJBQj4NlegQxrOA1LyqNx
q3iC5swCbXpOWyJwMWSBnRv5Ex/qVz7kmw7IL8yC/2we+KUTzNwnzgVCdXGP
B/x+FFt4G1Ns5Z/6wAZ3wxb/qQfjL+Rap5hCixCWhS/VwiXhC5z4UZbGDvCY
ZTBL7/6Y1PKreNVvU5rtqYoARLpDTJodkmqbnBkAWm1hAzq72YXX9afMgV/l
dHlnafxzO6CJxS4xXGuy2DetIoQpAynCnVhkxlDY8dv9xT2RslG8bDy5fCQ5
vwebrQ9AlX2Cl92k13mDRb4+JFH+VWa7dULRI2SmJTbP8uo+G2rreMEDosAj
oyGIKHWJznwcnWEP+gWa45OYE8wURYlqEzA0+wjsAzTRGol9TKH55+Si09nR
1w/xuXqmrX5gpHtwZmhya34dwPvs4OztxeV3L14DeF+eXIAgfbq1t7e8vre0
tLu4uDk7uzQ+PtXfP9HbC8a54eEVk2lrbu5gZQVoe34emNra1BQQsOCrmD0+
PNnZ1l0lk6WnZeKQPHS0hE4eUClW+7uP5ie/f3oMgD3f2/zw4uLHV89/ev3i
2ydnb04OLzbX5o29E1rN9sT4y+2tVztXF1083926PNh9e3r0/unZh2fnL/fW
3uxvvDvcen+0DfgFI3Dh08Wp9ZE+gJssk51Dis8iYotSKfUFud2K8vHWmoXu
1u2xHtCan28uAza+vTj97uLi/fnZ29OT8/X1vbm5vZmZleHBmW79orFvZ2J4
0agDEWJvYmh9sHukUakpK+qSlUx3traViEdaW/ZnZ9cnQNKYPd/Yvdg+Ol3Z
WhufnO4b6G9vb6ioqMgXFHLYGeQEVgKqLIvdXiYyVJdMtdSt6luGq0ur2ZSk
SJyvpTvEOTgOgoX5oXPTK+Rlndr2+R7duk6zPD5ytDD9ZHn2ial/09g+tT51
ApgFmprYABT3GaY0bYOA3Ib6LoW8qahQLswvr5Q1NDfq1aqO8lKlSFheLK0Q
FZXkF4CWX8Dl5dAZrEQSJR5PIJGTKdQUQiIxDBbu7Opi+djKzML8kbnZHQvz
e1aWZtZWlrZW1nYWdvYWLi6PPd2tg/ycAn0dA/3sQ4Jcw6FesAhfGMwvDOYb
AYdAYYGQiEBIZEgIPDQYHhqGikQkxILYDMiNio+OjI+IxIVFYqBwXFgMIRzD
80wuhCQWBMZxXRAsexjDLobrTSlGSXX5cmOpylSnnlGV9IlSqwnYonCUMIgk
ThG0CcuMJQJtFludSKtFYqS+gemPXEifeVJveCR9Y4/+zAb+qQvyjn+CTSjZ
xQdv746/DWF+jS+1xEltgth3fVLuQrPN4kosWK2esWLzqFwrRI5jVLZlRpOH
eMC3yOiW3voVtek3tNbfpLR8mdbkQldA4nP8ybkhSZkBKbkhORVISVuMUOeQ
1fPb7JFf5fdCWU3evDZIgsQlnGWGzHJEZTsmFrmTi11IEnuqHIRnSMkAum6e
qV7mSfrJud3hjEarqMJ/iRH/Mb70QZ4ulKm2ISk+Z6huJUrvxRdY4QSP0uus
Be3OiUUPMVnWVGUgscI3vtgnXuKPEfqi+T5J4uCMqkhBY2xM2qNw0jfoNEsM
w5aW6Z+WC4sju/a194zohyaNE4DcZdPCweru5fGz909f/RPet99fvgERGjTf
k81dYL47i6t7K6tbC4srU9NX90YeGp4fG9+cXzhYWwc63917enB4ur0Dttld
XrnWxtTUztzs4tAQqMatFSUyXno+hSSkkoCLjTarN8auDna9PNx7cXTwZH/3
3fOnb56cAITfXpy8Pj54dbgHOAIfnOsxPFldeba5/mJ783J/B8ALyAXbPD/e
Ax76Ymf13fHO9xeHPzw5+uH88LvT/Q/Huy82ll9urZ4tzqz0dU9pWhcNXTuj
gwem0Z3Rnu3hXqCdsYH9qbGTxemL1cWLtaXT5UXw859urDzfWnt/tPNqdx18
9mxp+uXa4v740Mn0+Pnc5PnM2Ga/3lgrN9YqwK6gVpAz3tF6trR4vLgIqD/b
2Pjp8vLF5sbx4vzh/Cyo/2DnY9JpRjRN3fVVDVLhQFPNXHfLnFY901473VSl
k+bKGIQcAp0cjqYhEv1tfW1uO2XSRdnMUhG/Xinrbawb69dv9Het9LYvdNaP
NVX2jHYtdWlGdNrRkcHF3u7JKnlrjaJdreoUixRZvKJ0Fp+VlpvFE4mEsqLC
ikxuAY2SnpGexUzj0FNYKbQ0MomKisNFwBChoWEREVEYDA6DwUAgkP+fprdw
amxb1H3X2efuu9dee1kbTePu7i6BhBCSEHf3QIBggQAhuLs2jTSNu7u7u0PT
3r3W2fueOvfe9/6BNzhdr+qrUYOZyQSq+I3v+zIlbm5udnZ2NjY21tbWRlY2
ZsB6HR3tnO0dnGxdXGy8PewDfBzhELeQQGc4xAUV4onHBJIJUAIWgkH7ozHQ
UGQgPCwgBBUEQwcFo6EIQhiGgYPh4KFkBJIWhqYj0PRQDDOUxEPTRBhepp84
D8JM80BHWSEirAG/9NTQ+CppUW9+8UB5/Uzj67W2qqmKlDdxsQ2C5DfitJ6k
zJE0ZU8sv5pIKYJSiyHoTCffaF2/GF1InB4kRs8/Qjso0ggdb4uJtw+VWfkw
7QIllgSVnaDShVlkj1Sa4NQ2ohqvuDb/6BYvfoUzv8yHU+grLPFWdcHzRmG5
fR6RNU8FFX+Nef1M3moWUecqLg7ipsOY8ZDoDLQ8EyXPgaa9Cs4ZcFKPP1LN
/VAwRYhtCUzpQLMLPMNiLQhK5/B4W3a2NzvHXVYZmNQSVj7Fb1iPbd1NadlJ
U/ey1cMQQZ1ueNYPpPyfyHka0Q0OzEINYeUzcbWmoNiAX2DNyjSOq7fL6PAS
5lvQU6xoRX6MokB+ZWhkHVZchWIXQHhFgdG1sMhKH3ySPi5Bl5dlL872EGf4
UWNdfQk6gFyQnw9X90+3jm6Prr7dff7fX//z//7xn19vP/zrwzfgv19u7kFy
Bvxe7h09ILy1u7W4sjQ5szA+tT63uL+2ebqzf753+Pbs8vPt/bf7Dx+ubm9P
zr/r+ugUcP3wFMfp6bm+vsHGxqp0VW5cdGWasjRFMdBQuz87fbOzc3t0cHdy
/P7y6uvb+9vjwz/fvf10dfHx7PTb5eXW1FRndXVvff366Chwuk+np8Ar/+vj
h//18f2n68urg73zjeXrnfWPR3v/urn4P+/v/p+PD7cH/t/3d9/Ojv7r7fX/
eXvzx+nR/fbG7cbq1erS2dwMIPdwYnh/bHB3bGB7pG99qHdtsAfoYHb8dmvl
w/4GSOD/eXP6z8uDT4cb3462Pm6sXM1Nfd5au1uaO5saOxofWGht2ujvaivO
BSkafOPDqbSdjbv9nbP1FbCwvNtdA9SD8X577Xhh6uHpWzOj6yO9Cz2vt0e7
9sa61rqbphvLh8uzmtKiSiIZlYrUknilWiJnwHAwF0gMN07KkMdJMtLiihur
Boc616oLugrTXlbmtJamN9YVtBUXNBTm1Te/6i8pfMVjy+Nj1QBeHieaQRMz
6RIqWUAm8thMiUQUy2VH4DB0GoVJIlCJeAqVzACTsFB0UGBwgF+gl4c3EhFG
wOHhsBB3VzdHewcHe1tbGytDywd+bZ2dHVycnV3s3d0BvABbNwTEFQVzw4V5
U7CBDCKUTYEzySEMEiwcGwxcGIEOAHEauDAoxQ9XV9IxMAw0BA+FE2BwYnAI
AYKkQkkCFEtGFOR4ivN96KlOyCizsEgrVLQrLSU0qlSU/SY3t7M0v7cyt7sk
/U2GsjU+oyehaFypnkqM75MKGin0CgQu3z9U7RystAxUmISkWiBSLREpZhiV
DbvIS1IJYWS5QiP1oDJnjNKVXeQhrHKl5pmj0vTIeRYRDZ6J7YHMYsuYpkDF
awyv2F9c5p/YDM3oDc1r84mtNImu0U1qNZM32YornHh5PmxVYAjLIjYXk1yM
F6Z5yIqcVF12meM6mfO/5k8QFe2wzEECPdcZFmPIyPWkpDvzC/24+V5xDYjM
fuqbfWXbQUr1UnTtSmx6Ly173Jdd8Rib/QO78ldu2XNZgwk5+6fIly9E5c8Y
OU8ZWbqMDJ2oKktgwawMQ3aGJa0ggJzjT8uHCCvCRJUIXkmAoMwnss6HlW9O
y9JnZhuIiq0jSlx52S74WEsoT/98+/Tt8e37s/v701sgYL5fbj5+urp/d3YD
EP7z/iMIz8B/AcJAd8fnpzuHmwur82PTS5NzB+s7V4dnlwenx1v77y5uv91/
+vP9l0837+7Pb4DuTq/AS+8vby72j443ty539/cWFjpra+vycwZevUyLkDSW
FO7Oz32+uPhwfvnp+uaPdx+/vn1/sbcD+AV2fHd8+OXyYn18/GVeXlVGBmB/
Z2oK8Pvn7Q2g+93Zyd3J0c3RAYD3YnPlcmsVNFlQmf/z7up/3V4ClsHk3d7W
7tTYQm/nfFc70HTba9BYgZneLM992tv482Tv29HOh521t8CCN5ZAPP6ws/Ll
YAOM73cWr1Ymj2eHzhfH9of69gZ7360sHI0OrnS0bvZ2giIP7Li3qmS4sWZ/
egS0+7d7698uDs/X5t8dbX/ZX/24s/T1aP3z/vrZ0uTBzDDQ5mgPGEFo3x/v
3uhrnmupGKnO7sxVNKZFDFdXDFSUVyUry5VpyfwIKYXHQtNjePF8irSuqLW3
eTwpMltIjU2XF6ZG5SWKM+RR6ZHSpKyMMllEsodbMAHHAZ4LCUDBYXgkgggL
Dvf1hgVDUAQcE4elBkEQsMCQIL/gEAg8HIHBhIWHBsOD/CAQP39zYxM/L28k
PDTI38/Fwd7e2srOytLa3MzAwtrcxt7OydnZ1QVg7ePpFBzgjoJ6IYPdCWE+
TEIQjwrn00IFdISIiZRywvEEgHAQGhOEwUHRWBgKAw0nhhGZuIdrL/FQGDYw
CO0LCfcOJQeQBGGcaKIwzzWi2IeX405JcSAnueATvEmKEH42K7UpM/NNSUpj
nrQ4jl8gjmuIyhlILppUpU4mR3SIBa/ZEW18WhU2MNk1INERm+OPzfbBZ3kR
sr05ZdDkDmpGH0dcCYXJTfDp7sxCH3GtL6/SEZelg1A+IWTr8ivtIuo9whS6
ilZ0Ri+Tne/HK/CXVUFT27AFzWh1fZC6JUDd7i9/6Sosc+AVuLJU7l6EZ8oy
Ym4DS5jmJsy2Tm13zhm3z523zBrGKLtCc8fIeLUZRKYprvTnFfuIKwLBGPMy
VN1L7jhKe7UZn9qNyxmhp/cRM0ccSLn/jlb9IKp9Iql/HtOoT8z8q7zJQFim
gUv5EZv8CzX9maTUTFBgglNocHMsBKVh5Aw/jNKdmO7FyvPnFvmIK71jX3kx
8vX4pYa8EgNBsaG4xIaTY0NT2XIyXK/3Lx9OHu2evz9/+/X2E+AXUHx3fHlz
eP6d34+Xtx8uAMvv3p1dHa1vr84vL88uri+u7m/uHu8eHu0cnB2c3J5fg/76
DpB+dXd3cQO+BCP48uPdeyDA9UewYfdwd3llY2ZmcXhooquzWJX2prpqZ2Hh
YmcPrAwgpYMV4OP1/afrq883118ApJeX17u7y8MjrRWVJcrU9oqqpaHhu739
r1dXX29uwA5vT09OtjaPVhYPluaPV5eud7dA3v6P26tvIHifHoMQe7K00N9Q
nxUdlcTnpYpFYEzgsEGAf52fPfum+XR28uPu+tfD7YeLq/c3LuYn7jfm/uNk
6/PeCsjYi91N7aVZmZGcfKk4mUYpjoqMCkclUklN2eqW3MyjqbHV3k5QjS9W
Zo8XJo/mJw5mx04Wp97trd+vTHzcmv20NX+zMnG2MHoyO3o0N3owM7o51LU+
0DHVUjNQmTdYmTtUmT1el7fWVr3e3TTbVNNXXtCQqcqPi0nk8vh4Ei0MJyBz
B1oHlFGpZAQ9mhsnpEgjmDHR3PhoWQoRzwXF0sXJ38bKHYkg+3hBdbXNPNwC
gZydvGxtAI6g0Qb4+kC8vQI8nd3tLGwcrOwgPgGokNDQICjExy/Q29fb9eFM
L5C3m7OXq5OLvY2VqZGRrpaOoamekamJhaWjo6OHu7O/l0soxAOH8MfAvGjo
AA4hmEeCCamhUiYqgoWWMJAkciiBGAIoJhDgRDKSREERyEgcERGGfbhSOhjp
64/wDCEEAH5DyX7hbCgrw4aVac/Pc4soCRAWBjHSIZQUOD2VFFORmNqUDyQt
jWfn8GXVYlVPfP5YirwviVTBpNfy4vqTZW1yfAEBpUYScjCEbBS3gsotI8Y2
84qmkmIbGYgEF6TCDZNhRS9xZpU6hqt1AmJ/hCb+SC3UiWxwI6jNwpOtBCXQ
vH5RZheXlw/h5Qent3MqW6WvBuRt88pX87L0TiS/xI6dZy0t8aAm2DISXRKL
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
UWStIzHJOL4yVJzhQ1NY4uMNgkRPRSVBknIMO9chuSVE8ToIo9QmZxsRMw04
pXaiag9uqZukOlD+Ci6rC+AXO3GLrKLqHJJa3crn3EXlL0Ki/z0s/t+I6n9D
K38IjfshPPHXsJh/UNWPxWXawiJDYpIBKlofwCivcVGUIGVZEEl6QExuSGxR
aEwhJKbYL6HKi5Ohz8nWTn3tnNzsLCg0oqp0kTFPENEa0/2Tc0Mza1MrO4ub
u0tbYDxce7h44+PlW5CiAVnAHL+/f3W+c/CgvUOgq8OT7+9QXR4cH2/tHqxv
rc7Mby+tnmzv3Ryfvbu4/nx7D/rsPz9++fz288fbjyBX35xdXBydHG5srsxM
TQ72j/f2TA30Azs+2di53D18d3J9sX1ye3AJyjI4+Pcft7e0tjo2PdM9OPam
u7uuaX1s5sPJ5bfbd2A9Ab8V2A389Iu93dPtraO1tf3l5e9nrEDL3p2f//4w
yaaSUjmHSwiGBjo6ORgY2mrp2OhqmWs+8bY0lRDDq9KTuisKxhsrgeEejffd
Lk3+1/ne/3t3/s+zgy8HW7cbyzvjQ10VVQVxCRIcgQYLcTcxczE0pochSTCY
hYaGva62r5UZDx1Sn5E8/bp2Y6D1dKr/y/rE5UzPZH1JXgSbFugFs7OC2FrB
HB3oIXCEmzvc2UkQjsyQ8vNixMCI1/tfX850HY69WXhT0ZqXlC1jRZERNJg3
2tvFw9LI3dLM4NkTX2cnQhjS0drWzsIKDoGhgsL8XX1hPsGAZaBg7wB7M2tz
PWMTbQMTbT2D51paj55q/vbY4LmmjbGJq42tk4UZoDXI0z3A3SnY2w0Z5Bfi
5+nlaPVd3k6Wvi7WPs5WbrYm1kYvjLUe6b7QfPHkieaT3/WfPzXXe+5qYRDi
6UAM8eFig3k4KB8fLCCFRjIxMXxiBAvHIyFYtHA+mxAhosdE8mQSNpdBwqFC
YEE+QUHeWDycQEGgSFAk8F8qBMsP4yfSpUVQSSFEUBDAyvIgpzrjkpxwSi9S
KpSTRxaX8Nm5HGwKjppFktWJxDVMfAY0KM0dkx/EbyTEdDCUg/yiOXn6EI9R
7EvKcqblu/Er/JN7CDkTHHFDMDzFFJZsjMjRCMs2CFNbodJtSDlW3HKQb50i
KiExFVR5mSStMa6gNy69jRFRERJZjk1tkdS2Z7WPv+xcaKseLVY0M7gVToxS
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
ah9GSrCiikhPNSMk/YaM/cmF9tdgqQkvBcZVBZESnfw4T9EJhtCo54R0K1lt
SNtetqqDKy4J5eT4IGP0/bh/ZWfpVE+E5vR6SAodZEUQVTMivt5aXKpBV2uH
iPWoyU7cHIuIctOIUnu60hPKt/ekPXOj/0CLMWLEWQqUbpGZQUJVECvRl50a
KM0PUb7CS8v8JBUeBePk6hV+wSQlb5Ka1BnWWN5QW1jdUFo/8KYX+O/m3BoY
Z4cmJnqHV6cWALlr0/NL49Mbs4sA5KP17cvdfaCzrR3gmwcra3tLKysTU5O9
/fPDoxszcycbW7eHx/cnZ2C82js439492j5aW1hZmJpbX1zeXV/fWF6YnRgd
7+9Zn39gDeTeg8UV4LAA3s2Jhau1w8vjcyBQrt+f3369fv/t5sPXy/tPZ7dg
/Hh6A2L258v7P+8///n+y+f7jx9u34GyDCrz+e7eztLy8uTU0sTk1tzC0doG
+E3AL7k6NtlZ11CUms7DkzytbM2fa+lrPjbT1XQ0M4B6OEjI4eWq+KH68rm2
l22FWTWpirLE2KI4eZYsOjc2vjRZVahIaSgtB9iCP/9gdftocw/U/OWp+Td1
Ter4pIy4uFg2kxIUEGJnGWpjIsfBu/JSB0rUgOKltvq5llcDVQ8PrKlOzy1O
ysiLUzWX1HXWNDUVVzYXlXRWV0+0tW5NjOwP9gMtt7cOV1e0Fea+zEjPjo6M
plGhzs5GT59q/PyLxi+///7Tr08eaWg80XryWNPg0dMARxd3S0t/R0cMBIIO
CMAFB4X5+sA83IPdXGEerkg/bwzEH4gYEswID2XjQpmYEDIiEA/zJSH8qKhA
LNQT5mUX5u8Y4m0b5G4J87JCBToSQz1paD96uD8NFUIJg9KRUA4WISKiIijo
OA4hVcpM5JOVUkZKBBPwK6JiyKhgmK+Lp4O5i62pk/WDPOxsoN6exDAEj0KW
ctlCDjNSwheKWCwBhSWl0qQkkgTHiqULcvDCPKwgDyEqhsfWo5VtBKDYRqyg
NFRShY9p5CS8lsrquYxCDCETRsqBRVRHZvSq6xYrCofThMU4cqovJdWdkOwE
l5kESQ2IKpeIahS9ABoYY+cXY4dI8fFP0YOmOIUqQ9GpOHYRUfGaWjQsrR7P
bFtoL26viymUsdJ9iSpdYsYzZr6pqMwjttw1qRYVW8lm5ZLIuVBGlQ+rxoVa
4E5Rw5gqtCQ3LLLEmZT6EzbpfwZF/gQRP6fHwVgKGDneA8LVxcabwyK1Ofke
2f28ssk4aSmGrgokJ7n5sZ54M/7Ky9LP6fTJ6fGJKvVS1pEKu5nJjc7R1Yay
Mgea0o2T7icudBKXGNNUhnCxtQ/V0p2s4UL5AUL9G0r4nJvsFJEVLEyHspTB
0jxMWiNHVo6iql0Ialv1IDF3nCqq9+bWeODzrIrSC4AAv8B8jzcOQPkFk/aX
LT3N7YtjM9sLKyAYTw+MrE7NAX6BHZ9vb1/s7JxuboK+CQRsbn16erq/H2hl
YgJs+b7DycZDmt2am9tZ3pgfm54YGlmcnt1aWQH8LkyMTQ31H2ysbi8uPBxn
YXljfBZoa2z+buv4+xmo+/ObT1f3f959Avpy8Ra48OfzO0Dxp4u3YMu/PnwD
/H68ew92PtneOd3ZBSOI4qvTYE2Y3lpY/O9M/rDUgINPdfc1lVbIuQJ/B2ez
51qGWk/N9F9YGWq5WRqSYX5ZclFLvrqjOKe/qhiY70Rj/UBNTVlyilIoTmCL
oulcRWRMXXH5VP/o7srm3ckNqAOX++fnew8l4nBpdeDVq0yZlAsPovq4pDLx
IxW5q29qTsd7Pm0sfFhfPp2e2RweW+kfW+ydmOuZWOibmuocnursXxubXB8f
n+/tnu5sX+vo2OzuXmh93VdW2pSVWatS5cfFJvEFWL8ASy1dY00dUGyf/vbs
91+e/vbr019+fvri7z85GRmbPtPwsLDEBwWH+/sTgoMxAQEogG2gHxkOZaLD
GCg4FQFlY8KktIeWKqAgmVgoAxPMxoeACRbqDvW0RgY4hfnbIwMcsFBXKsqX
jQ/iEIPYBEgkgwwUxSIn8OlJQrpCQEuRMDKieWBURXHSIrkxXBITHxoO9fFz
tXOyNrY1M7C3MHK1s/B3dQ4L9Af8MnBYNpHAZ9GjI0VR0SJJNO/hWpJoOi2S
wktkU5ORTFUYOyOEkwuRlEHjmwDC+MTX+Oh6rKji4S0pWT1bVE2j5oVR8uC8
ClxBf239XFvTUntGWyZbTaGnIhlpCGyMZwDXwo2qD4925RUSqNlYWFwgXAEn
ZpHRBY7Y3CB8FoWSw4+oEWX0SMsnYqvHc5qn3sTkpeGjMLQUd2qWDkLxV4Ja
I67RP7rcXFrkKSoEAYDOq8Yxq30p5U60Ij9kvB9NicHLPeKqvchpP+JSfqBl
Pgd9kxQZzEyAs5MDERILYpItIsZIVhXyajlF2cwmpwQQEn2IiW6BXE1cjHZa
k3fZICylxUWY45ZYScppY8ir7SPK9WKr3AVZkOgSdFyNH+AXJdfwour5UG1h
IvOwmOehvF8xUk2GwhbwG5GNFKiR0nxiQi2LqvKHyy1DFaZpA6SMMSql2B6b
ZwVL1a8qrW6uax7rGQHOu7e4tTo6P/amt6emub++dXFgbGV0ari9e6Szd3tp
9XR/f3dz43xn43Rr7XRrA0AKAAEWPDc0NtDaMdEzsDAysT2/CIwPULm3vLg6
NbYwOjjVNzDe3bswMgZsEYw9TS1AMwNDwCKBgH2vTk4D716bmgFH+3b79j/f
ff7X249/3L3/dvf+y7sPn969f3t7d3N1/f7+3eePn/74/OXPT1/+9eHLP999
+nR2fbm1f7C8tbe4cb13uja5MDc4sTO/tjoxf7S6c7lzfL51CLafbR6MtPcp
pHK4N8TVwt7X0srb3MLDzCzY0VlCoVdn5wGD7qh9OdbWuTo6BtruOVgHBnrb
igrUIp4YHVqaHN9TXbE22He8MHO/u/mv6/P/fX/zn7eX73bW322tHEz09ZZl
F8dwy+N4Y9WZZ6OtAN7b+dFv28vnE8P7Q303czOnk2NnU+NXi7Pnc5PnCxO3
6zN32zNny0Pro83TneXHPe3rLS/Hq0rb83NKk5Pi+QImjoQNC3dzdHdx9LA0
s9XW0Hn267OHzxl89Ozh00Ifg/kz3ccaVgaGIDZzcDg2FoMNDMRC/Hl4TDSb
IaGSGEgkDYHg4/EyFjOGwUrg8sFhZSwWl0wih6OggX7uzg6eHi4uDrZuTvbQ
AF8MHIYNgZHDwrhEooxHihFS40SUGB4uiomOYaGTBES1jJkeycyJE+UlRqVE
CgQkPNzP18XaxsrQxMrS3NbGytnJwcfD3dfTy9vdw8/LExoYQMKiBWy6IjYy
PSUmRRERG82UiQlSAZauDKEmBRGT/Uhqb0axr/CVn7w/MHHCP2bESdptwXql
x6w2ZpfbULMd+QWQ9Dfc6pn61q3XbXsvK2ZVSW/Y/LJQdLKbj9DagWZlS3Tw
5gciE3AoBRqTgiBlhoIATCgMjGplRTWJGLl0ZgYvqlSR2VRY2VeT35rNUIQT
YwOZaUEouQMhyVlei1G2UPC5cFIRkloRji+BhxcEMSrDmOWwcKUjOs7Ck/Iz
V+UQV+VPSTMlpBlj1IbBiufMGH8Mz0GYBJXnhBMjHIlR9onl6IxGkjDbU1Lo
RVaaYhJ0uLnWgmI7QYlNfKNX3CtdSYWGtEKXk6uNT3rCzTWV17jw880jy60j
KyzZOdro+J+Q8p/JqdrAiPEKHXaaETlBC8L+K072jJdiRo8ziUh3V5ahRGl+
aJEFP907rgqm6ghlFhlSCp+Gqv5tsGdofGB8bWZle2FjZXxheXh2vm9spKkT
8Dvc0jHa1j3a2bswOrm/tn6yt3ews322vf6dX+CzwON2FpYAv0NtXSMdPfPD
4wBSgOT2/Pzq1MTccP9Eb2dfS+t3AWw7Xr7qetU02tm9ODoOdgPfC/YHqfs7
9SB1A37/4/Y90Lfbd5+u7t5eXt9eXr29vrm7uQXw/vnl6398/fYfn78Cfv98
++H98cX5xu7uwvr61CIAdmV8bqZ/bGF4arSjH4xg+8n63sX2EaAbbCnLLJCx
RaRQDAMewkKEMcC/NwaXJotqrawBBj3XP7Q7t3i2tn6/t/dud+dkfmai6WVl
ckIym1YQH/2mJH+hu+NofvrDwQ4gFyD86Wjnj9ODr4fbb9dnjyd6t/qadntf
nYy+vp7qvJ4dPhrp2hvomKyrHKut3Ozp2Bvqv56febu2dL00e7k0db06dbk2
fjTftzL0aqqj7LDrzVhpfmmkNBoXTgoMCHJ28bCxc7F2MDM0NzeyMNE3NdTW
//4EAL3HGs//8Yupto7+Mw29x09tDQ2Rfn58IkFIJDJQCFoYXEQmyLmsKBYd
kMsOD+cR8GIqJYEHrFOSJBZHMhkcEoGCQYVA/FydbO2szcxN9IEcbSw8HGy9
He1h3p6E0BAOCSGiIcVUJAcTSIK6EiHObKRvJDEkSUBKFQMjFmTFy9KiI6Us
Bjo4yNvJ2crM2NLUxMrM1NbSAsja3MzOytLZ3i7A2wOPRsgkbJUyOiNNnp4s
USZwk+LYzCQ4UwlnpcFYWcGsAj9utZe01Su6xz2m31HWa8V6qUsp1eaUWQtL
PKWl0MRagqJRWTJW2LRRVbecnT0kjW7AkTL8IJGOvkJnD5Z7kASGScRjFChs
aigtL4yeD+fVoeVvgIMzCCosJ5uvrFfnvikq7iyRZgkYSWi+Gi3MCSUme5BT
3IRFUHEJjF0aTilAkIvg+ILg8Bw/SkkwrSgAlWQbItN3wv4VF6PPz7DDxuui
H+q2DjpVjyX3Y8l9ItLgrHhvKE2fILOTF4ZIsn0YqfbCHBe6ypKg0KerTclp
+vjkF8xcU1WXmajsCT3rF1LabwTlY0GBWXSVEzfXmJGhQ1D+jkn8BxgZmVqA
a062OTPDjJqsxU7TDxH8DcL4N5TwN2aCSXIZNL0aB+owWmRFiXNUNqDjXgby
Sy1Juc9Q6T9Oj83MT8zvLm9vzK6OdQ7N9o0CfjuqG9sq60FTa62sG+vqA4n0
aHPrcHsb8Pvf8D7wC0z2cHUV0Dc7OAoY72tpm+4fBl14eXx8bmhoqr93sK2l
o6EW9MeWqppXZRWVufnV+YUA4e9leXl8cmlsApjv7uLyxc7eu9PzT5fXQN+u
3v5xff/5++MCDk8uj0/vb24/vv/w9fOX7/D++f7TH28/fLl+e7t3fLj0ACkw
3O/mO941ONzW29vUPt03ujmz/N1/D1e2wauzA+OdL1+XZxUWJykq0lIr0tPL
1erm0rLp3l5QwC82dz6cnn46Pft2fv7n+dnH/Z398eHBmvKX6pRKZeJ/32fU
tD02eLO5+uXkAFB8sTr/8WDzw87Kh+3FL7sLf+zOf14bv5nuOhluORzuHKrI
a1Ql5kn52SJeSUxkUXRkfWpyX2Xp6MvqufbGjaH2nbGOlcGm8TelPXVZDQnR
KWQ82dXZx0DXVvO5yePHWr/+DjqvnqaW7nNtIx09G2MzR3MLR1NzR2NjZ2OT
YDc3UH4djY0CnByByUYyqIDZOA5LIeAl8rlgLqWRAb9cLFZIJgFmueHh8Vxu
skQSxWbxyEQqFh3k52VlbmRmrGeo98JQR9PUQMdcX8dcV9vRzMTXySE8yJWC
9OPgoEyUHx7ihPG1owa58lH+AGEZNSyWTUwUMOIFbAmNTEGFISGBwMrtrS0s
TcFaY2xubGRqaGBuaGhtaurl6oQOhUaKWepUeV6WIic9Ol0pSlXwRckYcRpW
koERZIaysv3oeS6sUlt2tWl0p11MpzW3RpeS/1xQZiWr8BTl+fLUPnQ1NaEh
unhMVTqZlNHLl7/CMfMgaIVHuCIQEROETULTMsjkdCwtC8UvwfBLUYzyYF4l
CpceFCoP5Ofy1M2Z6qYMRUU8JgJ0SWRkAU6ch6Cn+5DT3BmZ3qxs36g6AqcI
Ts0LIuX6o9RumAw3rNolLMEsWKrtiPkLlPeYKNfHRL1ARmkgop9S1CYyNVyc
ApGmQ6nRzsE0HYzUXKDypCfZMpV2olxXXpY9JcWYkKSLkj9Fxjyhpumld5tz
Cn4JV/wbXvkz4FRSYhVZbsvJMcIqfoNG/FuI7C/0DA1JqRkvz4Sm0qemGfCz
DVIb3PmZ+hDmD37kHxgJBupaRHIpIjoHhouwI8Y4pDUS+XluwjIHSq4eJv3R
1Og04Hd7ZXt1ZnGse3BxZHquf6w2r/hlYVlNbhHgbqSre2tx6Whn52Bra3t9
7XzzuzZO19cOlpY2p2YXh8Zneod6GlqAWU/3PDxydqKrc6TtTXttVU1ednl2
LsC2pqCoKq/gZUlZZ0PjSEcXSNSA4tnBYcAvSNFvj08/Xlx9OL8Ek6+XoOde
3x2dXe0fXx4c35xdfLx/B2IzCNJfPnx8SNQ3bz9e3r47vQTmuzO7BOLx/NAk
SMiDrd2A3Pa65p7GNuC/IEgDfm8PzgHCN/tnd4cXgHTg0RNvmme6Oma7O6e7
u5eGhg6Xl+8ODj6enX27vv56cfHwcUjX58Bbb1bnNwa7Z1sblrrfbI/0fb9Z
6WZ9CcTmu82Vi+W5+83lu/X5d2uzH9an75dHLycf4D0ZfLU/2F6dGClFBmNd
7NCOthgXB7iNJdHTLQKLzJTwW/Mzpt/UrA20LPbU9zfkNhUpVDQC18/LT1/H
5vdfTH772eDXn7V+/lnj53/oPnmq+/SZua6eq6Wln4N9oKMjxs+Hi0JG0cnM
sBBikD8bFSqjkeI4jGQRL10mSYuQSEgEkKKDXZ387OzA/kg/X2oYggyFylks
pVQqpdMAcRhYsL+7i7mRnr6WhrbGY53nT4y1Nc10Hk4YWerp2Bkb+juaoAOc
ebigaAY6lhUuZ6IT2OgkLl7BwaUIyEl8SgQZQ4b5I7zdED6eGIi/l6ujg7WF
uZE+kKXJA7l2FhZOtlY+7s7hiGCpkAHyc2F2Yn5mbHZ6ZEaqJEHNlqfTI1MJ
wlQkJy2Qke5CVpsTMnWim21lTWa8ci12oba42JyTaYWNMkCJDUgKlCifklDP
jasjScvgnAJ/WpY3SeWDS/bHKoJoGVhOHpmWgaJlwtn5cEZuUIjCApnkEBRl
B4/yiizmZb9RpdQmSLKYtESENJcQXYyVFsJ5uYHUdA96hhc4YHw9VlgUzC0M
YBf6Y1UOCIU5Msk8NM44RKbjQf0xRPCYINchxuqgpE+h3J8oCr24vFBGnAtN
7sCMd8aITJF8fZLckqGwEWY4ywo9Iwvc2GkW+FhtVPQzaoq+tMg+oVGHmf13
rOIvVNUjXq6+IM9UmG/GzzUhKZ+Ex/2ETfwHO/sFP8+AkvICIfsVJv6Vl6Wb
1xGganSnxD/2p/1AjnmhrIBEZflGZEDo8Z4CVVB8BRr0bm6+k6DUHpv6YmF6
fnl2cW1hZX5semZwfGt+FcTgytzC6vxiAG/Hq8bx3r7NhcWT/Z2j3a2NlcWz
jdXvOllb3V9c3JqeWxmdWBgcG2hu62963dfYMvj69fCb1t7Gly+L8vOVimJ1
ZklGFkAYuDCAF6To4fZO0H8Bv8B/95dXr/YOQHL+/pb19f4hSMWXu4dHa1sP
73UfHN9f3Xx6+w5gCybvb+7eXd/en1+9Pbm4PTwF+2xNLyyPzQ687mqpfAns
taO+pbGsFvALvHh/aRNUY4Dw+9ObbzcfPl/eA4TBl98f2HU4P324NA9WobeH
B+9Pjt8dH306P/t0dvxwBfXV2dfjvev1hdO5sZPpkavFKcApoPV65eFZIocz
4w+aHQPl93pp+mp+5GZh5O380O1M7+1M94eF3ovp4YJIPtLe3O7RP+wf/+z6
4hlQqK0lwdtNwSS9KVSv9DUfz/YfzfasDjROvC7pyc8qEPOYAT6BpkaOL55b
PH1i8uyx8bOnek8emetoedtaIX29cAE+ZIh/FBGbI5MUxUepRJwEDlXBoydy
6NF0YhSNEM9hyFk0AiTA3cLUSkvLTEPDTPO5m4U53MuTDA0C7qyWR8l5bDoG
iYUHwXw93OwtrYx1TXSf62s+NtJ+ZqGvZWOoa2es72Bq6G9vhPCyBeYbz8Vn
y7llyRGVaZFVqZG16fL6zIRqlTwzihdJwdJCIcRgXyIs0M/T2cXe2tbCxM7S
1Nna0tXW2sPBzsfFydfVCQULEDCJybHiXHVsUU5CSX5CaUFiepY0MZUbmUAU
JqBEKSFCdQAn04meYRhVZyOpMOAXv4ioMJSWmKEjH3nh/+JP/gczBclVo9gZ
IeQUj/B4a1BLcQobgtIFLrNDxriS02CMzDDAcngicGTXkBhLX4lmQIRegNgk
PM5LXsHObE5Q1sriy/iKKm5cOVFWEhZTEQaSOSXNhZzmJqsMiyj0FeZ6RpT4
S0p9Cek2YYnG6GSTcKVxWLxugOAXjFybnmRETzDASp9BKP+O4v/KTnAMFxmh
hYbkaAuizAwjBhHaiBZnJkp3kOa4yvLdeOlWuOgXQHy1VWypW0TlU27+r+S0
n4jK34jJT7HxT8lKbVGBJStTl5Oty8vVZWfpUNM0MXFPoaJffFl/Q0f/PaHK
LqPFS15shZb+hIl4JMt25iocOQo3oSoouZLMSvENj7aiqxyia3xxSr35ydmF
qbnB7v72V80j3X0rk7OjXX11RSUAt66m5tHunvnx0Z2VpdOD3eO97Z31leO1
haOVxcPlhcPlJeC/2zPzq2OTC4MjY+1dnXUNLeVVbTU17bU19YV5BSlJGfFR
gN/SzGyQokEFBs13rAvU5FHQfEHSBhX4O7x3Rydg8v+fmdrbX17fnF3cXVq7
2H24LREAe316DnR3evFwT+L3S0d2DsBuKxMzg209Pc3tb+qaRrsGQH7oaHgN
xoXR6eONvcO1ne8Xgv7z/devtx9ujy5Otw6Ol6YPFyYPFmfO1ldu9rYBuTeH
+xe72/dHh7f7O++Odh8+Gnh/42Jl+mxhFHTV/fHe46nhk9nRg8lBYMRbY/0A
3qvlWbBlY6BtpfPV4XAH4Pfj8siX5eFvq6PbfW2AX5qve4CpnrfBC3ft57aP
fvHW1yb7uafy6F1lORsDrVfLox/3Fj7szd5tTmz3tI9Vl9UkxSuYFEZwQKCd
laO+tpW2hruFcZiPu4SMUYo4AFiVgF0slzakJ9Uoo0tiJXmRvCwpL1XAiKLi
2AgoKcifAPHzs7Gy1dO20dGxfPHC9NkzkLEfTio5OQjx2LyEuPIMFVhOFZFi
HhmPCYGwiBg8Ahrs7ebpYO1qY+5uY+FpZ+XtYBPu74QLcKGGeEpJ8FQJtUQh
eSA3Iw6oTh37MiuxOT+tuTC9JiMpSy5K5NGjxVwhi8IkYUCzxiFCEBB/mJ93
iL8PBg6l4pASLjUxhq9WRoL8XJAtL8yJVaXLEhWCiBiKJBYXocREZ4dFFQRJ
C11AqhQU6vMLtWJrzaPKzEJFf3fD/ACh/8hKCaUlBeLkLqES02CBNlSsjZAZ
hMeawyJMwqLtKCm+lDT/sBhHuMwmRGbux9eDSDUCxJoBAj1MnKskDyMrIMcU
09JfidMa2BEFcFFuoKwUxsvxCosxD40yJ6a4MlPMOCrLiCJXabErJd0cn2pM
zDDHp5uEJmj5iX4hJBvQUk2A/xIjNUNoP0IIfwllP8dJDPBSw3ChDklmzEu2
5ybZkKOM6HEmzAQzYZoNT2mJET/HSjQ4SabCNCthwWNxoSY97VFY5I9Qwd8C
2X9DyzQkeXaCbDNpgZW00IKjNqQkaeFjX6Ajn4eKNNCRvwmzTFPqvdIbfOiJ
Wijx7+xk84dVIsJSmglNqaaGS63CZZZUpa282p+WbjbU0zc1MvbmZWNNcRng
d2licrC9o7Oxaaijs6/19Wh319rczPH2BtDe5ur+1tr+0szO/OT27NTu/Bzw
3935B37n+ofGO7qbSivKMzOrcnKKVWlJUlGsgKWUiYrS0xvLy4fa2kApXpmY
2J6fP1pb+96dz7e3746O3h4fX+3tnW1tnWw8dOr/fvtrEWh/de1sZ/fq4PB8
b/94a/tsdw9MwJajjc3D9Q1g3GtTM8DHAa2zQxOTfSPbC2sgPIAIASb7K1sX
u8c3h+f3p9cfL9/+x7sv//rwDcz3ljf3Zsd2Z0Z3ZicOlx7ud7jY3QTwnu9s
nWyuHizNHy3P3Wyv3G4tny1Nns6PXK1Mns2N7I52z3e+GmmoHKwrG2upXx3s
AnF65k3D6MvKsfqy5Td1Oz2NB/1NV2Mdn5eGNnrbOouy69MS8yIF8RQsI9AL
Ym4QYmMaRUCVJ0WNN1ZuD7dfLIx83J3/drTy5WBpb7B3u69ruf01qNsVyvho
Gp4c7Bvu4yrEhaki+C9zUjvL8jpLszsLMtrz0ttyUhrT5bVJsvJ4cWmcuCQh
Qi3hcJDQYEdbd1ND6xfPLbWeu5iYuJqa2uvr+9rakmCwcF9PPhaVER1RX5Dd
Ul5UnZehjpPFCFiF6cm5KQkpMVIJEzTZEAzUHwsLwMMhUnKYiAAX4oIBvwks
rFpKz4/lFyeIgPLlvMI4QU2avK1E3VOV+6Y442VW0svyvOqi7LLc9AJ1Slp8
dJSALaRTBTRKnFSQGC1KiZeqkiLTkyNUSeK0JAFQsiIiPkEUE8eVxlJFCXhp
CioyOyS6yF9SaCcsMhYW60XXmMdUWVGSn8HFP+HkmvQEX4zUIYhp4E155kN7
HMTTQETqhMcYY+LMcPE25FRXbIJDkMgIIjaCR5lDxIZI+QuI8AlEoElKdGKr
AnExD0+5VFSRY8uQzDQ3ToY7P9sDLTcLFuohIh6e1s5IMeCkm0jybPg5lpRU
fWqGMTXLDJGkFRz/zF3wN0yqPlFpiJA8psbqkqXPg/F/CWE8IkboA+HEOsw4
c3Gao0Bpx4wzJUh1ULxnxAhdIBj9VyT3KdgIRE76iZ+lRVFowPh/D+E9gvM1
MJF6ArVDRK4LMGhOmjlXZcFMNifEGGEjjYgxFhS5ESPRRJpln1DqSUvQxUZo
sJLMoMwnCL6+SO0nSPcP5Rthos1YagdhvqOwwK6/rXNxYrq75XVLbd3G/MLB
2vrs8Mjy5MTs8FBXU2Pv6+bNxbmLg929tWUwOd5ZA//5G5Mj6xOjW9MT+/Pz
e3Pzq6MTs70DI63ttbkFOQmJOQkJiSI+A4VghSMShJz81NTe5ubN2dn95eXj
9fXbw0PALED1cncXYHu9v/8dXvDSwcoK2AeQu7u4fLi6fra1c767B4A93twC
wH4XgHprYXFzdh7AC+oziOKLYzO7Sxtr04snm/vAcFenFq4PzoDVAucF5ALz
vTu+/Hz97r++/PPDxR3YbWtyaH1iEPwJYBUCwB6uLZ1tb17t727OTS0ODywN
9x0tTl2tL5wvTx3Pj1wsjd+sTC10NdZnKlL49GgaNpFLy4uLrMlQDtSWj9RX
zLbUzr+umagpHC3P3uqs+7Y6/mlr+QIY9PzEVn9Hf0VhRWK0kkXOkXIqlTEj
L8sOJ3uvlsaAblbHgQufzg3cLs4CXcxPbQ329NeUlafG5cZK8uMjChIiXxem
jzZWzDTXzDRVTjeUD1XkdWSndGQntKTH1KfIXqbJ3+SpatMVMjIOuLa/rbWb
uQlovpiAAHxQEBj5BGxWvLxAEZciESTwWKpIcWFSfHFaUokquUStLFIl1eRn
vizOLVIrk2QiGZceyaEBrtMkzFQxQymkKXjkRB5BySepxLSMCGZVahRAODOC
oRJRwFiqkDTmKDpK1S+LsxpKcl5V5DdWFFUXZBWolNnJCdkpiblpifnpSQVq
RV5GQk66PCMlAsCrTODK5aK4BGmcQhIRy2bLcIxoODcZIsz2Feb/911yJabS
ClN5va241IKRacjOMaXI3ULYxq6o3+zh/9MV83cI6wk6Sp+UaEpKsiAqzAkK
S3iEnjv9kS/3BVxmBkwZl6AbIn6KkGpz1e78DD8Y3xjKM5LkQiILAxkpDvws
N6bKMYivFSoxoSs9sTHO3GwjXo6xMMeMpdInJb9gZhiR1Pq+Ef8IjH9sx/0L
Ik0XmaTrx/uJkWwsTDYPpf2E4WmgOU9R7CeUCD2BwooRbUSJMBAobEgSvRDq
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
EhKaaBgU9whZ4lHNTsDWBkTDnySgTApIvgJ5EbUpDVMcgsfHpqe4hgebJSc/
TUp6lJT2MAPxNDTuy4AYg/Rc8/hs0wycW3y+c0y+UzzONa7UOaLYPAJvGk+y
1Hd3bA/KjiaVZ5qpc/3C8eLssnpY3SeVcJoaiHg8CoaFpWAhiQUJkXnRIUB4
WEJdIUJYVzHc3jQpuSV3VMxVCbkTMuHCQPfunPp4cW5zZmxnfuIcHHIbS2cb
q0DHKzow/gOnmJQJxoStI3yWuK4SBLYBdqOsgdpJo8hZjQouW85miRmM1pqa
suxsSFhYenhEJQYj43InB4aGZN3D3T0zI+MbyysHW3vba1u7Gzsn+8fvn1+9
u7r8PB/m5f7B2c7uydb2yebui+NzoNdn1wDe9YXlIWmfrF3cL+6W8rhiTktn
K7tP1KFW9AGEgQXf3ki1vn6wvLy3uHi+uXmyujGjGJLzBCqJjEOpY5LIIMYr
BAKdcmhrZuJEvwCGpp+Od3452/90dfz75cnH06P3B7vAhd/u7f7jm/o3e6tA
gKxPl0f/eXX5P9/dfLq43fLTxenPxwfnyzqQN6pzcxJ9vIOsXYH5uj01dX1q
5GVqkuDtUVuIHha07M2NXazMvt5dfr0LnFd3saIB+flIe3uZx/Xa/E8Hqx9P
Nn872/50vgM67/dXTnUT62N9OoV0RSm/vbdCIZ3tFs71iNbnJg6XNUf6BVAZ
rU0MLg/LpqRcBYcqb6oG6iDjVPxGwK9e2Q1gHxawGFX48gJ0aW52eSGmNC+3
AIEszS0AhTa1rIJZXc1voPVyGKNizmwPb0bWMiFsHGJXjfDqVPz6Hjalra6s
rhyDy83MhiZ5udo72VoCfl2tLT2tLXztrON9vdEJMQxSSXtDlYRDETUTxexK
KY/c1VbTziJxWVVcNqWFXdPYXE5mYAg0aHFdUjEtDkb3h1J9oBTPbLo3cNhC
lm9+g8tnfuHVIDkbw4hGkMpn6SRDZJ11QYtrBtE+vdIiruRuKMYgFmcQhzOI
zjVIKTRMQdukQN1SU71RmWHlmDhKSUxFnndBhgUs7WkOxISYactEubZne3Bh
zvRU67Jkk4pcx4TEe75R3wUkPvCL+dEv5IfgoLuhfj9AMuyhMOd0iENisk1c
gnVQmKGb14/2rt9GJdkmZriEJVr6Rj2NTLNKRjpFw2xCU01gOe5orH8K0s4r
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
xn2CfnL3+8EX9msQ6jkUYxsYbuMT/xiW8QJV4I5/5Z9YiUirxca8CkWmeCOT
vMOT/GJzQrPLo3IrCHGZMATBJQhtC0H/gou3w0TbIrBWEXinkFArX98HISG2
vgEPvPzuekF+DkTdg+IfBBF+DSDcDoz6MRz3a2YeKNpPw7B/DkLcCkQA+34S
Ef+CmOYThncuqIqdWeseotTlVGOIed7EPPdjrexULz83qs716mO1fFciNvJ5
Og77UCnXcFgi6qJ0bUnOWd3gLG3wl7TStUv1xrlSuitgbyzOMUcGwNnOGBnk
TIxo6Ctg/m+v80/Vivcm44ed7UuD/lilPNvXXZtNH84OAL/7Wq1OKFWwxAqW
REwXcZY4fJpgcXqlt6N/ZYm2t3u0f3Bs1GxqFRr1hkolUwKE94ADK9Vry8ur
FMo6l2VQg4FgODIZgQ5NuoMt7Ynp4I/9Y0HzFTEEQKDYqgQKzbpKL9Ee6vc/
HH8A2H67+vb57POn00/nuzcSloIytrQytcJbZguWWOy5JebUHH+ezJ4a502N
CWdGmaSuqYay3tfZ3cUZ46UFlMY37MEeCXlatUbVC4UmlfrAuGPeOwYC/JpU
myqhnLNIn+4d7qysL8vKz41LTsTgiaHoSCgc6RsAQmyAkxMM1FI312APVyw0
EJTNnoYqFmjZIu6Zjn+q5Z1o+JdGyed9Ayi8oPn+8+byH1fnfz01A/8FNXlf
xtsU0HTcRQ2bYmQsS+cn+FOjsoVZNXVRRV3SMeh/wAu6j3xtTcFgSGj05dGx
ptclGYSoVAw2DYstSU7pq65a7O+jDpNoI8NrY6Od5WVZOHyws6u3rb2vg7uf
s7e/q2+QJwTmYhvq4ZCKCe0sLyJ3tUw31w68edVf9rK/4vVKX6d8haxmURUM
Kn9pfmF0YLDtbVtlZWFiUhIGE4cKw8H88FCfmDDfmDDv3Fjkq1RcY0kWKNSc
pQkZa1m8tshenmEt0xkLiyuzE5TJ/sWprqWZjqmB+p7GktqSXJCx89JSSgoL
m+qquzpb+gc6SCNdE2PdY2O9gyTAb3M3qa1nrLOV9Lam682rt4X5telJr/DE
bFh0NiQ2xz880SkAdc8H9QBOtAshOGHjvYmJAYRYX2KsT3iELTL8cRD8h2DU
T1DUbffAW97wHyDhDzyD73jDf/IOuQMsGxb3PCjBChL/FJluF1PgjYi1hqEf
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
/F+oSJay
     "], {{0, 213}, {320, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
     MetaInformation -> {
      "Exif" -> {
        "Make" -> "Canon", "Model" -> "Canon EOS 700D", "ExposureTime" -> 
         Rational[1, 320], "FNumber" -> Rational[28, 5], "ISOSpeedRatings" -> 
         2000, "DateTimeOriginal" -> "2014:08:18 16:34:53", "Flash" -> 16, 
         "FocalLength" -> 250, 
         System`Convert`ExifDump`ReadFIDData[
          InputStream[String, 4], {136, 0, 0, 0, 0}, True], "GPSLatitudeRef" -> 
         "N", "GPSLatitude" -> {51, 54, 
           Rational[147, 100]}, "GPSLongitudeRef" -> "W", 
         "GPSLongitude" -> {8, 17, 
           Rational[667, 20]}}}],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{159.62890625, Automatic},
   ImageSizeRaw->{320, 213},
   PlotRange->{{0, 320}, {0, 213}}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Classify", "[", 
  RowBox[{
  "\"\<Sentiment\>\"", ",", "\"\<I'm so excited to be programming\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<Sentiment\>\"", ",", "\"\<math can be really hard\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7503737372271466`*^9, 3.7503737372271466`*^9}, {
  3.750373780093134*^9, 3.7503737803781986`*^9}, {3.750373812571605*^9, 
  3.750373812961877*^9}, {3.7503740373568945`*^9, 3.750374072601014*^9}, {
  3.7503760503411865`*^9, 3.750376060294463*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"4b3671c2-89bd-4ece-bdfe-eab422bf91c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"English\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Language\"", ",", "\"English\""}], "]"}],
     "\"Entity[\\\"Language\\\", \\\"English\\\"]\"","\"language\""},
    "Entity"], ",", 
   TemplateBox[{"\"French\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Language\"", ",", "\"French\""}], "]"}],
     "\"Entity[\\\"Language\\\", \\\"French\\\"]\"","\"language\""},
    "Entity"], ",", 
   TemplateBox[{"\"Spanish\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}],
     "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"","\"language\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chinese\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Language\"", ",", "\"Chinese\""}], "]"}],
     "\"Entity[\\\"Language\\\", \\\"Chinese\\\"]\"","\"language\""},
    "Entity"], ",", 
   TemplateBox[{"\"Russian\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}],
     "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"","\"language\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.7503737652695465`*^9, 3.750374039648636*^9, 
  3.750374074443716*^9, 3.7503760694613156`*^9, 3.750383721619109*^9, 
  3.750387025202569*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"c0fb21ca-856b-4f5e-8a0c-8463360e0fb2"],

Cell[BoxData[
 TemplateBox[{"\"cheetah\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Concept\"", ",", "\"AcinonyxJubatus::3g535\""}], "]"}],
   "\"Entity[\\\"Concept\\\", \\\"AcinonyxJubatus::3g535\\\"]\"",
   "\"concept\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.7503737652695465`*^9, 3.750374039648636*^9, 
  3.750374074443716*^9, 3.7503760694613156`*^9, 3.750383721619109*^9, 
  3.750387043447541*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"f4a92715-74bb-4b65-8634-f22544673587"],

Cell[BoxData["\<\"Positive\"\>"], "Output",
 CellChangeTimes->{3.7503737652695465`*^9, 3.750374039648636*^9, 
  3.750374074443716*^9, 3.7503760694613156`*^9, 3.750383721619109*^9, 
  3.750387043681938*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"951ae25f-7b06-4f8b-a4a3-f081cae99390"],

Cell[BoxData["\<\"Negative\"\>"], "Output",
 CellChangeTimes->{3.7503737652695465`*^9, 3.750374039648636*^9, 
  3.750374074443716*^9, 3.7503760694613156`*^9, 3.750383721619109*^9, 
  3.750387043681938*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"9e58ecbb-7164-4396-951c-516cf808d7ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"Nest", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayFlatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"#", ",", "#"}], "}"}]}], "}"}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "1", "}"}], "}"}], ",", "8"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Split", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "3", 
    ",", "1", ",", "1", ",", "1", ",", "2"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Gather", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1", ",", "3", 
    ",", "1", ",", "1", ",", "1", ",", "2"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.750390056595019*^9, 3.7503900566105824`*^9}, {
  3.7503902680298834`*^9, 3.7503903059100866`*^9}, {3.7503903398281717`*^9, 
  3.7503903432530494`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"f299420f-75a4-4c64-ab85-279be6adecee"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzlmVFuGzEMRKXepFfqEXKB3v+v3daLZqfxTmhGIjl8hiAQBDOODIIY8Pvb
zx9v38Zv5uN0Zzb/jNn7zObnaIHO959XaHz/vfres/l9jsGu8ePTNh7/eqFl
POe712gYj/ev0TC+vEbD+Br2i2fzGJjd8vBplx/X0y4Pp13+0RMf9UaL/ONV
PuqNFvlxvdvl4W6XfzIX2+SfzMU2+SdzsU1+Pu+NFvmb3miRv32dBvn7tH7+
Pq2fJ5Dy+vXkI18/7o98PTny9ePqj/GWr3+80rNbvn7c3/L15Javhzn52bkp
Uw9z8rNzU6Ye5uRn56ZM/bz2ymfnpkw99IqldyTq4bUsvSNRP+5j+XoSy9cb
/bJcPXza1Y/raVcPp1290S/L1T9e7ZXekagf17tdPdzt6l+cmzL1L85NmfoX
56ZM/Xy9dyTqHb0jUe96PYF6X3n9el95/XonTvl4feenvP7wnfL6zlNef1z9
s/Uur/94xVfv8vrDd5fXd97l9WGOWuPy+jBHrXF5fZij1ri8/rz2kjUurw+9
ZI3L68NrWuPy+sMXl9d3xuX1iZ/+ar+dTh8+1nx5/XE91nx5fTjWfHl94qe/
2m+n03+86rPe+mq/nU5/XG9rvrw+3NZ8eX0yV1fN3TT6ZK6umrtp9MlcXTV3
0+jP+95aNXfT6JPeWtl7KfTJ667svRT65M+vff0E+s58eX3CYvl4ffKR1x/3
R16fHHl98Ner/XY6ffDXq/12Ov1xf8vrk1teH+bsrrmbRh/m7K65m0Yf5uyu
uZtGf157bdfcTaMPvbaz91Low2vv7L0U+uM+ltcnsbz+Zr+dTn+z306nv9lv
p9OH005/s99Op7/Zb6fT3+y30+nD3U4/aO6m0Q+au2n0g+ZuGv0Z13sp9AN7
L4V+6Osn0I+Vj9ePlY/XDyb43//Pf+/+RMP276tPNOi/d59ozh6MuqNh+/fV
dzRs/776jmYE39HgHN4dR8P276vjaNj+fXUcDc7h3XE02Iu742iwF3fH0bD9
++o4Gvw6u+NomB9fnY+G+fHV+WiYH1+dj2bA2Z2Phvnx1flomB9fnY+G+fHV
+WgG3Lvz0bC5vDofDZvLq/PRsLm8Oh8Nm8ur89Gw3lydj4b15up8NOzXWZ2P
hn291flo0J9b/bq3Phrvft5bHw36c6tf99ZHg/7c6te99dGgP7f6dW99NN79
fPb9PsO7n/fWR4P+3OrXvfXR4Jy2zm1vfTTe/Xz2/T7Du5/Pvt9n4Jy2zm1v
fTTYq9be9dZH493PZ9/vM7z7+ez7fQZ+XevX99ZH4/Xr1fw+4vXr1fw+4vXr
1fw+4vXr1fw+4vXr1fw+4vXr1fw+4vXr1fw+4vXr1fw+4p3bVef+iXduV537
J965XXXun3jndtW5f+Lt3cq9f+Dt3cq9f+D99Wr/+v7eLf7v0/09I/r7e2H7
++r7fQbb31ff7zPQv1tPddC/W+/qsP199f0+g+3vq+/3GejfrXd1cI5b4+qw
/X31/T6D7e+r7/cZOMetcXWwl61xddj+vvp+n8H299X3+wz8d6xxdZifV/P7
CPPzan4fYX5eze8jzM+r+X2E+Xk1v48wP6/m9xHm59X8PsL8vJrfR9hcV537
J2yuq879EzbXVef+CZvrqnP/hPW2cu8fsN5W7v0D9utq//q8t8X/fbr/j/5+
q1Hf7zPU9/sM9Pfqfh9R3+8z1Pf7DPX9PgP9vbrfR9T3+wz1/T5Dfb/PUN/v
M9T3+wz1/T5Dfb/PUN/vM7r5faSb30e6+X2km99Huvl9pJvfR7r5faSb30e6
zv2TrnP/pOvcP+k690869/5B594/6P3r9+79g18pFOgK
   "], {{0, 0}, {256, 256}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.7503900577215414`*^9, 3.7503902686440754`*^9, 
  3.7503903063941813`*^9, 3.7503903436531143`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"c416612e-67f3-44ee-8dab-272a87a7b18a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7503900577215414`*^9, 3.7503902686440754`*^9, 
  3.7503903063941813`*^9, 3.7503903436686945`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"84acf068-c1d0-4dc7-b989-51d1d45a1380"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", "3", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7503900577215414`*^9, 3.7503902686440754`*^9, 
  3.7503903063941813`*^9, 3.7503903436686945`*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"cc289ea6-f042-4a64-a0b8-e75ca242e017"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sort", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"2", "^", "n"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SortBy", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"2", "^", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10"}], "}"}]}], "]"}], ",", "First"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TakeLargest", "[", 
  RowBox[{
   RowBox[{"Range", "[", "20", "]"}], ",", "5"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TakeLargestBy", "[", 
  RowBox[{
   RowBox[{"Range", "[", "20", "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "#"}], ")"}], "&"}], ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.750390441552255*^9, 3.750390467891052*^9}, {
   3.7503905196545043`*^9, 3.7503905864574733`*^9}, {3.7503918751345825`*^9, 
   3.7503919370717273`*^9}, {3.7503921592102866`*^9, 3.7503921708510075`*^9}, 
   3.750392213871244*^9, {3.7503922718846035`*^9, 3.7503922727925982`*^9}, {
   3.750392307378665*^9, 3.7503923221041017`*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"b3da1185-4dc5-415d-a7e6-60c6a18dfd99"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "2", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.750390761744008*^9, 3.7503922732019014`*^9, {3.7503923094440336`*^9, 
   3.750392324353501*^9}},
 CellLabel->
  "Out[317]=",ExpressionUUID->"9cd9b6a3-7f6d-40f4-b070-a90dd248c157"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", "8", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.750390761744008*^9, 3.7503922732019014`*^9, {3.7503923094440336`*^9, 
   3.750392324353501*^9}},
 CellLabel->
  "Out[318]=",ExpressionUUID->"7c7a48eb-aaf0-4ffd-997d-48277f4eff00"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20", ",", "19", ",", "18", ",", "17", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{
  3.750390761744008*^9, 3.7503922732019014`*^9, {3.7503923094440336`*^9, 
   3.7503923243690825`*^9}},
 CellLabel->
  "Out[319]=",ExpressionUUID->"5e80b151-c131-434d-a3f8-f21a255abbdc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.750390761744008*^9, 3.7503922732019014`*^9, {3.7503923094440336`*^9, 
   3.7503923243690825`*^9}},
 CellLabel->
  "Out[320]=",ExpressionUUID->"86982ccf-9260-405e-85b7-f905c36838ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"z1", "=", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"z2", "=", 
  RowBox[{"{", 
   RowBox[{"3", ",", "4"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Union", "[", "z1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Union", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3", ",", "2"}], "}"}], "]"}], ",", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3", ",", "2"}], "}"}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"Union", "[", 
  RowBox[{"z1", ",", "z2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Intersection", "[", 
  RowBox[{"z1", ",", "z2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Complement", "[", 
  RowBox[{"z1", ",", "z2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.75039059023515*^9, 3.7503906926004376`*^9}, {
  3.7503907303596864`*^9, 3.7503907353055754`*^9}, {3.750390996269913*^9, 
  3.750391014067725*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"8d8b40e1-4616-4a6e-b555-1e1970454a80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.7503907633417177`*^9, 3.7503910145362425`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"24ff0e13-bb7c-4a2f-9861-20576728b4bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.7503907633417177`*^9, 3.7503910145362425`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"e46414ab-cb8c-47f7-9193-95b7d78fe185"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.7503907633417177`*^9, 3.7503910145362425`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"d746c85c-1404-4fca-9478-541799ec63ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7503907633417177`*^9, 3.7503910145518627`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"79ab86c9-8fca-4482-b9ca-49fdb6287ca4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.7503907633417177`*^9, 3.7503910145518627`*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"3348fd81-462a-4771-a9f2-730ee501d7f5"],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{3.7503907633417177`*^9, 3.7503910145518627`*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"b719cd3e-e656-4f9a-bb4e-619d4ba75a0f"],

Cell[BoxData[
 RowBox[{"{", "2", "}"}]], "Output",
 CellChangeTimes->{3.7503907633417177`*^9, 3.7503910145518627`*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"686634a9-28c9-44af-a73b-ec148fbc886d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Permutations", "[", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Subsets", "[", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Red", ",", "Green"}], "}"}], ",", "3"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.750390887425724*^9, 
  3.7503909282902412`*^9}},ExpressionUUID->"51ade548-4851-4d5d-aa33-\
8d4be312b4d4"]
},
WindowSize->{958, 1028},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
WindowStatusArea->None,
Magnification:>1.25 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info153750415818-4944919"->{
  Cell[10234, 226, 1679, 29, 116, "Print",ExpressionUUID->"04a776ce-c78e-49ea-a1d2-d663aaf2e002",
   CellTags->"Info153750415818-4944919"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info153750415818-4944919", 417267, 8388}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2126, 51, 348, "Input",ExpressionUUID->"9affd0e4-6101-49fb-8dc8-efac143aa6c9"],
Cell[2709, 75, 422, 6, 40, "Output",ExpressionUUID->"6a512a63-42b7-4cdf-8bbb-861b59e578c3"],
Cell[3134, 83, 431, 6, 40, "Output",ExpressionUUID->"caa07936-f5d6-4b5f-9625-6f27bb6f0590"],
Cell[3568, 91, 450, 7, 57, "Output",ExpressionUUID->"e41a7e18-b19b-4448-a2a4-0ba3b6abac9c"],
Cell[4021, 100, 629, 13, 54, "Message",ExpressionUUID->"e6febf44-dd63-42bd-9c88-beb8da059415"],
Cell[4653, 115, 436, 6, 40, "Output",ExpressionUUID->"a98b1ee6-47d8-455c-821f-5d66379a44d2"],
Cell[5092, 123, 422, 6, 40, "Output",ExpressionUUID->"4ae9143a-05f7-4e72-8073-9c01826bf288"],
Cell[5517, 131, 439, 7, 40, "Output",ExpressionUUID->"d0e0e111-f473-4c5f-8066-fac88bc4ee00"],
Cell[5959, 140, 422, 6, 40, "Output",ExpressionUUID->"1375d584-d981-456f-9414-ec0d77ce2769"],
Cell[6384, 148, 442, 7, 57, "Output",ExpressionUUID->"b6a77a95-a876-484e-b7e6-b5a74e49e137"],
Cell[6829, 157, 426, 6, 40, "Output",ExpressionUUID->"935f5bdf-c254-49b0-be85-1b1030bb2e57"],
Cell[7258, 165, 449, 7, 40, "Output",ExpressionUUID->"e81600e4-4ecd-4b9c-bd31-21f7890b3937"],
Cell[7710, 174, 548, 8, 65, "Output",ExpressionUUID->"5818fed6-8cd2-44e6-ac82-4ebe9f3a75d9"],
Cell[8261, 184, 716, 12, 72, "Output",ExpressionUUID->"dade4002-d730-4582-b00f-7c4dda89866c"],
Cell[8980, 198, 424, 6, 40, "Output",ExpressionUUID->"867b05db-140c-45f2-b52e-eb2c7d970cbd"],
Cell[9407, 206, 488, 8, 40, "Output",ExpressionUUID->"b9356bc6-cd71-439c-8713-1b32ef37b5b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9932, 219, 299, 5, 35, "Input",ExpressionUUID->"903b7591-40af-4eeb-a3c3-6cd202ef4a20"],
Cell[10234, 226, 1679, 29, 116, "Print",ExpressionUUID->"04a776ce-c78e-49ea-a1d2-d663aaf2e002",
 CellTags->"Info153750415818-4944919"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11950, 260, 1786, 46, 204, "Input",ExpressionUUID->"1724b1e5-272f-479a-a96b-17bba5258a03"],
Cell[13739, 308, 432, 9, 40, "Output",ExpressionUUID->"cd8e7ccc-05a0-4f81-b67b-67382dfbde48"],
Cell[14174, 319, 355, 7, 40, "Output",ExpressionUUID->"1fb82b35-aa26-4d73-8aad-bbce221bd4fc"],
Cell[14532, 328, 387, 8, 40, "Output",ExpressionUUID->"4c7b5ede-8214-4b0e-a283-f85954e37354"],
Cell[14922, 338, 431, 9, 40, "Output",ExpressionUUID->"8bf3609e-ebf2-4a54-9b92-8e2907ff613d"],
Cell[15356, 349, 396, 8, 40, "Output",ExpressionUUID->"7382e4bc-db9a-4f2e-9104-cc58603dcca1"],
Cell[15755, 359, 509, 13, 40, "Output",ExpressionUUID->"8acafcc8-2b25-453a-b12c-038ab6be85d4"],
Cell[16267, 374, 569, 14, 40, "Output",ExpressionUUID->"440a0141-8a25-4440-9097-1abf3c305340"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16873, 393, 463, 13, 84, "Input",ExpressionUUID->"b97c5240-c0b4-46ef-bec0-2660831eac05"],
Cell[17339, 408, 283, 5, 40, "Output",ExpressionUUID->"c3225e46-b235-4193-b034-c746476e6496"],
Cell[17625, 415, 277, 5, 40, "Output",ExpressionUUID->"4fcbbc8a-6d3f-4883-8764-4a836fafc52c"],
Cell[17905, 422, 277, 5, 40, "Output",ExpressionUUID->"ae7f5836-0667-412d-bd47-2f0cda352e2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18219, 432, 2073, 48, 372, "Input",ExpressionUUID->"2acffa5d-43bc-4dcb-a698-10ccbe779340"],
Cell[20295, 482, 657, 12, 40, "Output",ExpressionUUID->"1ce9d2dd-4d99-4b9b-bc8b-006909cf7039"],
Cell[20955, 496, 602, 10, 40, "Output",ExpressionUUID->"743343c3-91c8-44a0-b31b-3123116e1625"],
Cell[21560, 508, 602, 10, 40, "Output",ExpressionUUID->"894645db-7310-4e07-ac79-14237f9fe7b3"],
Cell[22165, 520, 602, 10, 40, "Output",ExpressionUUID->"8b9c33a9-0efb-4779-9cb5-b282a05152d4"],
Cell[22770, 532, 602, 10, 40, "Output",ExpressionUUID->"5fe4ccb8-8d52-4009-a29f-e3c51f55de24"],
Cell[23375, 544, 602, 10, 40, "Output",ExpressionUUID->"e60fe21c-e41a-4239-80ad-60932b818428"],
Cell[23980, 556, 667, 12, 40, "Output",ExpressionUUID->"dd8c6878-fd8d-4a4e-9201-1f4f270559a4"],
Cell[24650, 570, 655, 12, 40, "Output",ExpressionUUID->"06cf9cc1-771d-4f0b-b8aa-9d8689b03ff9"],
Cell[25308, 584, 645, 12, 40, "Output",ExpressionUUID->"8bb8564a-18a0-423d-a4d0-c6366c23db7a"],
Cell[25956, 598, 645, 12, 40, "Output",ExpressionUUID->"1e2df9f1-e589-42f0-b95d-a5890e51a044"],
Cell[26604, 612, 621, 11, 40, "Output",ExpressionUUID->"08726896-5bbe-4ce4-8a9f-d61c640a605b"],
Cell[27228, 625, 644, 12, 40, "Output",ExpressionUUID->"0a7f41ae-1ced-478c-916e-17c6c9b8e251"],
Cell[27875, 639, 644, 12, 40, "Output",ExpressionUUID->"83ae094a-13b4-42c3-b3cc-e7010f4d26a3"],
Cell[28522, 653, 645, 12, 40, "Output",ExpressionUUID->"7db29c19-78ea-4171-bca3-52e5cf1538cf"],
Cell[29170, 667, 655, 12, 40, "Output",ExpressionUUID->"c79d03f3-f2a4-4223-9dab-674da3ccd12f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29862, 684, 718, 17, 108, "Input",ExpressionUUID->"fdf8d9df-baf1-4b9a-b832-59f1480cb3cc"],
Cell[30583, 703, 179, 3, 40, "Output",ExpressionUUID->"ca3a24f1-e019-406a-aeb9-c3d72eb4f695"],
Cell[30765, 708, 179, 3, 40, "Output",ExpressionUUID->"f59a4c4d-9484-4a69-b867-3ca8e960ae43"],
Cell[30947, 713, 179, 3, 40, "Output",ExpressionUUID->"866ac2a1-4e9a-45bc-982d-dd1d405bff71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31163, 721, 927, 24, 132, "Input",ExpressionUUID->"5840cdd6-5ae8-4cf4-9886-4e3d8cd577f0"],
Cell[32093, 747, 585, 15, 40, "Output",ExpressionUUID->"26452ca5-0343-440c-bb2e-37c4d6c9a703"],
Cell[32681, 764, 333, 7, 40, "Output",ExpressionUUID->"2bb99fea-aab4-4bb0-8c45-4d494fa31b85"],
Cell[33017, 773, 278, 5, 40, "Output",ExpressionUUID->"7551726a-1634-4da5-af9f-758ae9a2aa14"],
Cell[33298, 780, 344, 7, 40, "Output",ExpressionUUID->"4c5ff78c-8e19-48eb-bcb4-5d8e9241e3ac"],
Cell[33645, 789, 371, 9, 40, "Output",ExpressionUUID->"6d06b279-14de-4a64-a079-6a295a798137"]
}, Open  ]],
Cell[34031, 801, 147, 3, 35, "Input",ExpressionUUID->"7e21e39e-3c7d-46d4-96e2-7dbdb01f5310"],
Cell[CellGroupData[{
Cell[34203, 808, 1915, 56, 204, "Input",ExpressionUUID->"582e89c6-0e57-4595-84e3-25e79c2e126c"],
Cell[36121, 866, 286, 6, 40, "Output",ExpressionUUID->"0c4807b5-8b4e-4937-817a-cf3815a8a981"],
Cell[36410, 874, 284, 6, 40, "Output",ExpressionUUID->"ae9b5c2d-c0a5-42ce-8cb9-319313c6be41"],
Cell[36697, 882, 239, 4, 40, "Output",ExpressionUUID->"ebfb614e-4c09-4b80-9502-9524d390582d"],
Cell[36939, 888, 239, 4, 40, "Output",ExpressionUUID->"cbe71190-6340-4175-ac05-7c658a5c19b3"],
Cell[37181, 894, 183, 2, 40, "Output",ExpressionUUID->"b4abb816-b622-419d-8162-741b6fa10312"],
Cell[37367, 898, 287, 6, 40, "Output",ExpressionUUID->"ea08cbb0-5f02-4a4d-9f74-8fc7d7a530ff"],
Cell[37657, 906, 330, 6, 40, "Output",ExpressionUUID->"38fd10cf-bf8e-4a2c-98e0-edbac0eed02d"],
Cell[37990, 914, 1203, 19, 89, "Output",ExpressionUUID->"ddc7810a-c368-46ab-a37e-422a69855e0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39230, 938, 1356, 34, 204, "Input",ExpressionUUID->"26093daf-9855-4efb-8529-7b59832f2e16"],
Cell[40589, 974, 224, 3, 40, "Output",ExpressionUUID->"20bde1ac-1e27-40c6-bc1a-53515be4394b"],
Cell[40816, 979, 224, 3, 40, "Output",ExpressionUUID->"97f9bb7c-d1e2-4bea-9ddd-cd98bf4d4c8b"],
Cell[41043, 984, 224, 3, 40, "Output",ExpressionUUID->"8db46570-f7ce-49f8-9937-1ac1c61e7e19"],
Cell[41270, 989, 256, 4, 40, "Output",ExpressionUUID->"f4092559-5835-4bf8-ab55-900265251181"],
Cell[41529, 995, 301, 5, 40, "Output",ExpressionUUID->"236bb06d-ba71-4722-8ea1-634b8fb5a054"],
Cell[41833, 1002, 357, 7, 40, "Output",ExpressionUUID->"1dcff119-3d7a-4140-9666-134e31fa002a"],
Cell[42193, 1011, 485, 9, 40, "Output",ExpressionUUID->"60339f43-0ba3-4510-a558-a3d2c6f6dcbc"],
Cell[42681, 1022, 224, 3, 40, "Output",ExpressionUUID->"d2dfad2e-ca9a-4d6a-bbe2-eb9f63e21802"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42942, 1030, 340, 6, 60, "Input",ExpressionUUID->"4d4e3d4f-f9a8-4b0c-b10f-ae7b3f26cd76"],
Cell[43285, 1038, 275, 5, 40, "Output",ExpressionUUID->"ad6d352f-46c6-4416-8a25-c1825bdcc99d"],
Cell[43563, 1045, 222, 3, 40, "Output",ExpressionUUID->"080b089e-cd28-4d9c-96c7-d90349dde557"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43822, 1053, 410, 8, 60, "Input",ExpressionUUID->"be0041f8-1b71-401c-828a-8c111e9a9857"],
Cell[44235, 1063, 225, 3, 40, "Output",ExpressionUUID->"4db1d5e6-df29-4b19-a966-2271145afecf"],
Cell[44463, 1068, 462, 8, 40, "Output",ExpressionUUID->"4910ef5b-79c6-49d6-98f3-1602a329cece"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44962, 1081, 256, 5, 35, "Input",ExpressionUUID->"7b4379d2-66a5-486d-885c-f516aa178557"],
Cell[45221, 1088, 664, 18, 44, "Output",ExpressionUUID->"fa4f30d9-de2e-447a-8549-ce8020ecb2eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45922, 1111, 397, 10, 35, "Input",ExpressionUUID->"dfd05659-f3ac-4279-aecb-59314fbc0926"],
Cell[46322, 1123, 675, 21, 80, "Output",ExpressionUUID->"decf7a50-a0c5-4a97-a5d3-e4da7cf84f07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47034, 1149, 1328, 32, 156, "Input",ExpressionUUID->"71f701e5-d699-4b6e-a6ad-22764c756ba7"],
Cell[48365, 1183, 9969, 266, 40, "Output",ExpressionUUID->"7cd45a5f-ce86-4bd2-9fff-641fca1748f8"],
Cell[58337, 1451, 1897, 48, 40, "Output",ExpressionUUID->"c5c29a1c-3353-4476-b35d-9565f5985ddf"],
Cell[60237, 1501, 2064, 56, 40, "Output",ExpressionUUID->"bf37c09a-b378-4d08-9b97-49562d1902b7"],
Cell[62304, 1559, 35866, 951, 40, "Output",ExpressionUUID->"576848b7-2a8e-43d3-ac6e-4973e626b2aa"],
Cell[98173, 2512, 33229, 904, 40, "Output",ExpressionUUID->"fcae04b0-c0ae-4c83-a5e3-f216a06075f3"],
Cell[131405, 3418, 5708, 129, 40, "Output",ExpressionUUID->"92f4c5ad-9373-4341-8c79-bffd1bfaf7e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137150, 3552, 653, 18, 60, "Input",ExpressionUUID->"de1ba2bf-ab1d-4ffd-a97a-8732b7be84d0"],
Cell[137806, 3572, 949, 33, 56, "Output",ExpressionUUID->"61fc9515-3cf0-4b72-9509-7a37c605d079"],
Cell[138758, 3607, 5723, 137, 51, "Output",ExpressionUUID->"ea2e3c84-8c7f-47ed-91e8-e13ad085c04a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144518, 3749, 258236, 4245, 250, "Input",ExpressionUUID->"4b3671c2-89bd-4ece-bdfe-eab422bf91c3"],
Cell[402757, 7996, 1316, 26, 54, "Output",ExpressionUUID->"c0fb21ca-856b-4f5e-8a0c-8463360e0fb2"],
Cell[404076, 8024, 487, 9, 53, "Output",ExpressionUUID->"f4a92715-74bb-4b65-8634-f22544673587"],
Cell[404566, 8035, 284, 4, 40, "Output",ExpressionUUID->"951ae25f-7b06-4f8b-a4a3-f081cae99390"],
Cell[404853, 8041, 284, 4, 40, "Output",ExpressionUUID->"9e58ecbb-7164-4396-951c-516cf808d7ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405174, 8050, 1109, 30, 84, "Input",ExpressionUUID->"f299420f-75a4-4c64-ab85-279be6adecee"],
Cell[406286, 8082, 2420, 45, 470, "Output",ExpressionUUID->"c416612e-67f3-44ee-8dab-272a87a7b18a"],
Cell[408709, 8129, 579, 16, 40, "Output",ExpressionUUID->"84acf068-c1d0-4dc7-b989-51d1d45a1380"],
Cell[409291, 8147, 488, 13, 40, "Output",ExpressionUUID->"cc289ea6-f042-4a64-a0b8-e75ca242e017"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409816, 8165, 1266, 33, 108, "Input",ExpressionUUID->"b3da1185-4dc5-415d-a7e6-60c6a18dfd99"],
Cell[411085, 8200, 822, 24, 40, "Output",ExpressionUUID->"9cd9b6a3-7f6d-40f4-b070-a90dd248c157"],
Cell[411910, 8226, 822, 24, 40, "Output",ExpressionUUID->"7c7a48eb-aaf0-4ffd-997d-48277f4eff00"],
Cell[412735, 8252, 314, 7, 40, "Output",ExpressionUUID->"5e80b151-c131-434d-a3f8-f21a255abbdc"],
Cell[413052, 8261, 309, 7, 40, "Output",ExpressionUUID->"86982ccf-9260-405e-85b7-f905c36838ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413398, 8273, 1058, 27, 180, "Input",ExpressionUUID->"8d8b40e1-4616-4a6e-b555-1e1970454a80"],
Cell[414459, 8302, 234, 5, 40, "Output",ExpressionUUID->"24ff0e13-bb7c-4a2f-9861-20576728b4bc"],
Cell[414696, 8309, 224, 5, 40, "Output",ExpressionUUID->"e46414ab-cb8c-47f7-9193-95b7d78fe185"],
Cell[414923, 8316, 224, 5, 40, "Output",ExpressionUUID->"d746c85c-1404-4fca-9478-541799ec63ac"],
Cell[415150, 8323, 322, 9, 40, "Output",ExpressionUUID->"79ab86c9-8fca-4482-b9ca-49fdb6287ca4"],
Cell[415475, 8334, 234, 5, 40, "Output",ExpressionUUID->"3348fd81-462a-4771-a9f2-730ee501d7f5"],
Cell[415712, 8341, 201, 4, 40, "Output",ExpressionUUID->"b719cd3e-e656-4f9a-bb4e-619d4ba75a0f"],
Cell[415916, 8347, 201, 4, 40, "Output",ExpressionUUID->"686634a9-28c9-44af-a73b-ec148fbc886d"]
}, Open  ]],
Cell[416132, 8354, 558, 16, 108, "Input",ExpressionUUID->"51ade548-4851-4d5d-aa33-8d4be312b4d4"]
}
]
*)

